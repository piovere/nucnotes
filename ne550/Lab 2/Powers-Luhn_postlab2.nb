(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    137190,       2702]
NotebookOptionsPosition[    135718,       2650]
NotebookOutlinePosition[    136137,       2668]
CellTagsIndexPosition[    136094,       2665]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Post Lab: Fitting Data to an Assumed Distribution", "Text",
 CellChangeTimes->{{3.694526649406855*^9, 3.694526694019219*^9}}],

Cell["1.", "Text",
 CellChangeTimes->{{3.694527044563151*^9, 3.69452704679237*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], ":=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"PoissonDistribution", "[", "x", "]"}], ",", "1000"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.694527055370481*^9, 3.6945270740379057`*^9}, {
   3.694527106265386*^9, 3.694527107113244*^9}, 3.694870320740984*^9, {
   3.6948705480041122`*^9, 3.694870548673937*^9}, 3.6948705980373*^9, 
   3.694870788528305*^9, 3.6948713188373537`*^9, {3.6948716161322308`*^9, 
   3.694871616302031*^9}, {3.694879138976668*^9, 3.694879139121998*^9}, {
   3.694879638700396*^9, 3.694879638796932*^9}, 3.694879670013586*^9, 
   3.694879795371409*^9, {3.6948813203437977`*^9, 3.6948813204219923`*^9}, {
   3.6948853715127974`*^9, 3.694885413045546*^9}, {3.694887416296376*^9, 
   3.694887416383027*^9}}],

Cell["2.", "Text",
 CellChangeTimes->{{3.6945271165437937`*^9, 3.694527117770857*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"distributionMean", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Data", " ", "=", " ", 
   RowBox[{"y", "[", "distributionMean", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DataCounts", "=", 
   RowBox[{"BinCounts", "[", 
    RowBox[{"Data", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "40", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bins", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{
        RowBox[{"Length", "[", "DataCounts", "]"}], "-", "1"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoDList", "=", 
  RowBox[{
   RowBox[{"Multicolumn", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"bins", ",", "DataCounts"}], "]"}], ",", "2"}], "]"}], "//", 
   "First"}]}]}], "Input",
 CellChangeTimes->{{3.69452712535401*^9, 3.694527237768242*^9}, {
   3.694527270119587*^9, 3.6945273462567787`*^9}, {3.69452972429265*^9, 
   3.694529737042117*^9}, {3.694529867099689*^9, 3.6945298731929092`*^9}, {
   3.6945299787259607`*^9, 3.6945299801767607`*^9}, {3.694531534996603*^9, 
   3.6945315573436317`*^9}, {3.694531681888286*^9, 3.694531700953074*^9}, {
   3.694532749244965*^9, 3.694532751935808*^9}, {3.694868483172516*^9, 
   3.694868492896209*^9}, {3.694868880600492*^9, 3.694868906428685*^9}, {
   3.6948702060729094`*^9, 3.694870206855822*^9}, {3.69487043962433*^9, 
   3.694870440194091*^9}, {3.69487057663673*^9, 3.6948705808534603`*^9}, {
   3.694870659260495*^9, 3.69487066035816*^9}, {3.6948709945213633`*^9, 
   3.69487100601232*^9}, {3.694880902271846*^9, 3.694880909112524*^9}, {
   3.694885636312704*^9, 3.6948856399294853`*^9}, {3.6949534697751007`*^9, 
   3.694953472178174*^9}, {3.694953852721252*^9, 3.694953882713129*^9}, {
   3.694954005750465*^9, 3.694954005872582*^9}, {3.694957660586575*^9, 
   3.694957712672236*^9}, {3.694958436435671*^9, 3.6949584367711906`*^9}, 
   3.694958591298624*^9, {3.69496179076971*^9, 3.69496179131114*^9}, {
   3.694961944430277*^9, 3.694961944848667*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "89"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "123"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "158"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "175"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "127"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.694529876318905*^9, 3.694529980721349*^9, 3.694530054592458*^9, 
   3.694530092915799*^9, {3.6945315422635517`*^9, 3.694531558484013*^9}, {
   3.694531682907436*^9, 3.6945317022349854`*^9}, 3.69453276649955*^9, {
   3.6948684945509663`*^9, 3.694868503550057*^9}, {3.694868881117646*^9, 
   3.6948689199913187`*^9}, {3.694869081127974*^9, 3.694869093423908*^9}, 
   3.6948701235152473`*^9, 3.694870207470043*^9, 3.69487032405602*^9, 
   3.6948704889895067`*^9, 3.694870550792468*^9, {3.694870584462494*^9, 
   3.694870599928422*^9}, {3.6948706417151318`*^9, 3.694870662429399*^9}, 
   3.694870712760366*^9, 3.694870790852852*^9, 3.694871010331881*^9, 
   3.694871320927178*^9, 3.694871618444428*^9, 3.694871847878763*^9, 
   3.6948789972819233`*^9, 3.694879142385709*^9, 3.6948796411943073`*^9, 
   3.694879673024341*^9, 3.694879797717614*^9, 3.694879879425808*^9, 
   3.6948813236948757`*^9, 3.694882448488269*^9, 3.694882686488627*^9, 
   3.6948829823132668`*^9, {3.694885375477151*^9, 3.694885416074423*^9}, 
   3.694885641008559*^9, 3.694887419045998*^9, 3.694953473391433*^9, 
   3.6949538044072523`*^9, {3.69495385393392*^9, 3.6949538835388813`*^9}, {
   3.694954006290378*^9, 3.694954023206707*^9}, 3.694957662340207*^9, 
   3.6949577132325497`*^9, 3.694958437434279*^9, 3.694958557218844*^9, 
   3.694958593075234*^9, 3.694961792370348*^9, {3.694961852348445*^9, 
   3.694961866015934*^9}, 3.69496194525841*^9}]
}, Open  ]],

Cell["3.", "Text",
 CellChangeTimes->{{3.694527357854961*^9, 3.694527357936398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TotalPoints", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"DataCounts", "[", 
     RowBox[{"[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "DataCounts", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormedDataCounts", " ", "=", " ", 
   RowBox[{"DataCounts", "/", "TotalPoints"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormedTwoDList", "=", 
   RowBox[{
    RowBox[{"Multicolumn", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"bins", ",", "NormedDataCounts"}], "]"}], ",", "2"}], "]"}], "//",
     "First"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694527379401702*^9, 3.694527404901594*^9}, {
  3.69452744182582*^9, 3.6945274653139963`*^9}, {3.6945275118222847`*^9, 
  3.694527632955328*^9}, {3.694527786990932*^9, 3.6945277871162977`*^9}, {
  3.694527885630764*^9, 3.6945278927641773`*^9}, {3.694530357786564*^9, 
  3.6945303627592382`*^9}, {3.69486865094228*^9, 3.694868712884296*^9}, {
  3.6948687448931017`*^9, 3.6948688492287397`*^9}, {3.694869073544813*^9, 
  3.6948690761835003`*^9}, {3.694870632405869*^9, 3.694870649536306*^9}, {
  3.694880919634359*^9, 3.694880941336926*^9}, {3.694884956132945*^9, 
  3.694884981275902*^9}}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{{3.6948686992583303`*^9, 3.694868713416706*^9}, {
   3.694868791127817*^9, 3.694868798302856*^9}, {3.694868836893648*^9, 
   3.69486884984418*^9}, 3.6948689237669563`*^9, 3.69486909752555*^9, 
   3.694870125232171*^9, 3.69487021378656*^9, 3.6948703260638113`*^9, {
   3.6948705224998283`*^9, 3.694870552223014*^9}, {3.6948705874053297`*^9, 
   3.6948706014592457`*^9}, {3.694870635272038*^9, 3.69487066467286*^9}, 
   3.694870715512388*^9, 3.694870792488646*^9, 3.694871011921978*^9, 
   3.694871322186796*^9, 3.6948716196917152`*^9, 3.69487184899531*^9, 
   3.6948789994835157`*^9, 3.69487914390125*^9, 3.69487964251924*^9, 
   3.694879674352426*^9, 3.6948797991089487`*^9, 3.694879880863639*^9, {
   3.694880938579466*^9, 3.694880942321412*^9}, 3.694881326003994*^9, 
   3.694882450135647*^9, 3.6948826877320967`*^9, 3.6948829847856283`*^9, {
   3.694884978338252*^9, 3.6948849815766582`*^9}, {3.6948853776925287`*^9, 
   3.694885417410654*^9}, 3.69488564303231*^9, 3.694887420278653*^9, 
   3.694953475474491*^9, 3.6949538076836452`*^9, {3.6949538584608603`*^9, 
   3.6949538853768*^9}, {3.694954008126522*^9, 3.694954024224263*^9}, 
   3.694957666241377*^9, 3.694957715330002*^9, 3.694958439261979*^9, 
   3.694958558358521*^9, 3.694958594267146*^9, 3.694961794569077*^9, {
   3.6949618535140657`*^9, 3.694961867118792*^9}, 3.694961947152707*^9}]
}, Open  ]],

Cell["4.", "Text",
 CellChangeTimes->{{3.6945279284541397`*^9, 3.6945279285110703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DataMean", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"bins", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ")"}], "*", 
       RowBox[{"DataCounts", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "DataCounts", "]"}]}], "}"}]}], "]"}], "/", 
    "TotalPoints"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.694532949070717*^9, 3.6945329974354753`*^9}, {
  3.694533094177466*^9, 3.6945331054035177`*^9}, {3.694868931614896*^9, 
  3.694869013904817*^9}, {3.694869112824565*^9, 3.694869117328681*^9}, {
  3.694870677916152*^9, 3.694870708879285*^9}, {3.694885655157979*^9, 
  3.694885655531129*^9}}],

Cell[BoxData["5.085`"], "Output",
 CellChangeTimes->{
  3.694532998409025*^9, 3.6945331058789787`*^9, 3.6948690156505013`*^9, {
   3.6948690992304897`*^9, 3.6948691178452377`*^9}, 3.6948701269917593`*^9, 
   3.694870215570485*^9, 3.694870327465843*^9, {3.694870524284336*^9, 
   3.694870553463242*^9}, {3.694870588446012*^9, 3.694870603483532*^9}, 
   3.694870667042513*^9, 3.694870717674877*^9, 3.6948707937511*^9, 
   3.694871013231735*^9, 3.694871323249666*^9, 3.694871548257506*^9, 
   3.694871621360342*^9, 3.694871850185919*^9, 3.694879001188683*^9, 
   3.69487914516644*^9, 3.694879643783476*^9, 3.6948796755130777`*^9, 
   3.694879800237543*^9, 3.6948798823360023`*^9, 3.694879932013813*^9, 
   3.694881327567378*^9, 3.694882451477709*^9, 3.6948825511756697`*^9, 
   3.694882689887569*^9, 3.694882985918305*^9, {3.694885378922385*^9, 
   3.694885418585124*^9}, {3.694885644125701*^9, 3.69488565648446*^9}, 
   3.694887421417313*^9, 3.694953476761991*^9, 3.694953809062395*^9, {
   3.694953859658689*^9, 3.6949538868403673`*^9}, {3.694954009306964*^9, 
   3.694954026096965*^9}, 3.694957667466167*^9, 3.694957717418997*^9, 
   3.694958440348143*^9, 3.6949585609385433`*^9, 3.6949585967671757`*^9, 
   3.694961795909275*^9, {3.694961854815075*^9, 3.69496186839986*^9}, 
   3.694961948422597*^9}]
}, Open  ]],

Cell["5.", "Text",
 CellChangeTimes->{{3.694869215481246*^9, 3.6948692156567907`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"], " ", "\[Pi]"}]]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "DataMean"}], ")"}], "2"], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.694869472289298*^9, 3.69486947563347*^9}, {
   3.694869602836193*^9, 3.694869744580081*^9}, 3.694869794346291*^9, {
   3.694869912099897*^9, 3.694869958934189*^9}, {3.694871542290244*^9, 
   3.6948715438992968`*^9}, {3.694871607202735*^9, 3.6948716309258747`*^9}, {
   3.694872801723418*^9, 3.694872808769002*^9}, 3.6948790137370577`*^9, {
   3.69487909691571*^9, 3.6948790981790953`*^9}, {3.694879840062427*^9, 
   3.694879849887212*^9}, {3.69488229552452*^9, 3.694882296348678*^9}, {
   3.694882397339959*^9, 3.694882397358397*^9}, {3.694882428569803*^9, 
   3.694882428696373*^9}, {3.694882539346682*^9, 3.694882541814844*^9}, 
   3.69488266627931*^9, {3.694882942142713*^9, 3.6948829452859573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", " ", "=", " ", 
   RowBox[{"FindFit", "[", 
    RowBox[{"NormedDataCounts", ",", "g", ",", 
     RowBox[{"{", "\[Sigma]", "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sig", " ", "=", " ", 
  RowBox[{"f", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"mn", "=", 
    RowBox[{"f", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.694870071430584*^9, 3.694870081582038*^9}, {
   3.694879218266035*^9, 3.6948792361221113`*^9}, {3.694879595389536*^9, 
   3.694879596151622*^9}, {3.6948798595375767`*^9, 3.694879870808733*^9}, {
   3.6948799086162653`*^9, 3.694879927625353*^9}, {3.6948803203848743`*^9, 
   3.694880321796564*^9}, {3.6948803689682827`*^9, 3.694880371601399*^9}, {
   3.6948822673475103`*^9, 3.6948822697539577`*^9}, {3.694882388021063*^9, 
   3.694882391573491*^9}, 3.694882501753694*^9, {3.6948825445881653`*^9, 
   3.694882600992509*^9}, {3.6948826353793993`*^9, 3.694882652919435*^9}, {
   3.6948829484948187`*^9, 3.6948829572263613`*^9}, {3.6948854292552137`*^9, 
   3.694885434845686*^9}}],

Cell[BoxData["2.4170409823399046`"], "Output",
 CellChangeTimes->{
  3.694870082836665*^9, 3.6948701340653677`*^9, 3.694870226432675*^9, 
   3.694870333617793*^9, {3.6948705335456*^9, 3.694870561242465*^9}, 
   3.6948705947509937`*^9, 3.694870724727872*^9, 3.694870802413972*^9, 
   3.694871017289824*^9, 3.6948713265149803`*^9, 3.6948715550653152`*^9, 
   3.694871634630658*^9, 3.694871853666504*^9, 3.694879018757975*^9, 
   3.694879159238366*^9, {3.694879221601417*^9, 3.69487923712484*^9}, 
   3.694879596868813*^9, {3.694879653971084*^9, 3.694879683300201*^9}, {
   3.6948798888591547`*^9, 3.694879935464695*^9}, 3.6948803225229692`*^9, 
   3.6948803720065737`*^9, {3.694881331229197*^9, 3.694881339815763*^9}, {
   3.69488227059912*^9, 3.69488229861545*^9}, {3.694882391982218*^9, 
   3.694882402204867*^9}, 3.6948824546344624`*^9, 3.6948825064956207`*^9, {
   3.694882554972103*^9, 3.694882693476685*^9}, 3.6948829584957523`*^9, 
   3.694882989830977*^9, {3.694885381597329*^9, 3.6948854355245867`*^9}, 
   3.694885663077783*^9, 3.694887423936985*^9, 3.694953479755044*^9, 
   3.6949538115956182`*^9, 3.694953862048156*^9, 3.694953892727387*^9, {
   3.6949540116174793`*^9, 3.694954028868374*^9}, 3.694957670255209*^9, 
   3.694957719153557*^9, 3.694958442946015*^9, 3.69495856330018*^9, 
   3.694958599563662*^9, 3.694961798578432*^9, {3.694961857257934*^9, 
   3.694961870329897*^9}, 3.694961950595647*^9}]
}, Open  ]],

Cell["6.", "Text",
 CellChangeTimes->{{3.694870378581524*^9, 3.69487037876248*^9}}],

Cell[CellGroupData[{

Cell[BoxData["DataMean"], "Input",
 CellChangeTimes->{{3.6949537869580584`*^9, 3.69495378862015*^9}}],

Cell[BoxData["5.085`"], "Output",
 CellChangeTimes->{{3.6949537891844397`*^9, 3.694953813099601*^9}, 
   3.694953863380659*^9, 3.694953894602667*^9, {3.694954015096918*^9, 
   3.694954030263217*^9}, 3.694957672730197*^9, {3.694957721504225*^9, 
   3.694957733572214*^9}, 3.694958565069086*^9, 3.694958601035866*^9, 
   3.694961800073456*^9, {3.6949618586607656`*^9, 3.694961872056342*^9}, 
   3.694961952256941*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myGauss", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"2", "*", 
      SuperscriptBox[
       RowBox[{"(", "sig", ")"}], "2"], "*", "\[Pi]"}]]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "DataMean"}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", "sig", ")"}], "2"]}]]}]]}]}]], "Input",
 CellChangeTimes->{{3.6948710696867847`*^9, 3.694871135299767*^9}, {
   3.694871186555769*^9, 3.694871206946321*^9}, {3.694871270514352*^9, 
   3.6948713158832684`*^9}, {3.694871518796906*^9, 3.694871531553501*^9}, 
   3.6948717638090153`*^9, {3.694871811120906*^9, 3.694871838156869*^9}, {
   3.694871978621767*^9, 3.694871982678454*^9}, {3.69487269409569*^9, 
   3.69487271890224*^9}, {3.694879585725645*^9, 3.6948796072633247`*^9}, {
   3.694880674048616*^9, 3.694880674951932*^9}, {3.694882334632807*^9, 
   3.694882334672858*^9}, {3.694882407066803*^9, 3.694882438620082*^9}, {
   3.6948825783516893`*^9, 3.694882579793954*^9}, {3.6948827110712137`*^9, 
   3.694882735694758*^9}, {3.694882997536367*^9, 3.694883000095336*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Abscissa", " ", "labels", " ", "correspond", " ", "to", " ", "the", " ", 
    "value", " ", "of", " ", "the", " ", 
    RowBox[{"bin", ".", " ", "The"}], " ", "plotted", " ", "Gaussian", " ", 
    "curve", " ", "values", " ", "correspond", " ", "to", " ", "the", " ", 
    "center", " ", "of", " ", "each", " ", "bin"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"histTwo", "=", 
     RowBox[{"Histogram", "[", "Data", "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"histThree", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"TwoDList", ",", 
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DataMean", "-", 
             RowBox[{"5", "*", "sig"}]}], ",", 
            RowBox[{"DataMean", "+", 
             RowBox[{"5", "*", "sig"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"Max", "[", "TwoDList", "]"}], "*", "1.1"}]}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
       RowBox[{"FillingStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Lighter", "[", 
          RowBox[{"Orange", ",", "0.5"}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Orange", "}"}]}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Counts\>\"", ",", "Black", ",", "24"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Observed\>\"", ",", "Black", ",", "24"}], "]"}]}], 
         "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{
           "\"\<Gaussian Approximation of\\nPoisson Distribution, \[Mu]=\>\"",
             ",", 
            RowBox[{"ToString", "[", "distributionMean", "]"}]}], "]"}], ",", 
          "Black", ",", "30"}], "]"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", "\"\<Data Histogram\>\"", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.15", ",", "0.85"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "\"\<\>\""}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curve", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "Data", "]"}], "*", 
        RowBox[{"myGauss", "[", "x", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"DataMean", "-", 
          RowBox[{"5", "*", "sig"}]}], ",", 
         RowBox[{"DataMean", "+", 
          RowBox[{"5", "*", "sig"}]}]}], "}"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", "\"\<Gaussian Fit\>\"", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.15", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"histThree", ",", "curve"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.694871345071589*^9, 3.694871353900381*^9}, {
   3.694871993351482*^9, 3.694871997005947*^9}, {3.6948724240601873`*^9, 
   3.694872571558282*^9}, {3.694872649736195*^9, 3.694872658316926*^9}, {
   3.694879951705316*^9, 3.694879974338986*^9}, {3.694880023626165*^9, 
   3.6948800376624203`*^9}, {3.6948806340533333`*^9, 3.69488065099675*^9}, {
   3.694880788997962*^9, 3.6948807930848913`*^9}, {3.694880841287221*^9, 
   3.694880845328081*^9}, {3.694880946986289*^9, 3.6948809476192417`*^9}, {
   3.694880989614086*^9, 3.694881008408209*^9}, {3.694881105950426*^9, 
   3.694881113710277*^9}, {3.694881227626403*^9, 3.694881290594887*^9}, {
   3.694881401705105*^9, 3.694881479397346*^9}, {3.6948815910878563`*^9, 
   3.694881646014421*^9}, 3.69488169982333*^9, {3.694882034029793*^9, 
   3.694882092626787*^9}, {3.6948821361779213`*^9, 3.694882206924073*^9}, {
   3.6948830407338247`*^9, 3.694883040781056*^9}, {3.694883076950695*^9, 
   3.6948830901027*^9}, 3.694883144182349*^9, {3.694883308840632*^9, 
   3.6948833530576057`*^9}, {3.694883383800889*^9, 3.694883417174474*^9}, {
   3.69488344856146*^9, 3.6948835618416843`*^9}, 3.694883609088745*^9, {
   3.694883738054162*^9, 3.694883757537024*^9}, {3.694885294243062*^9, 
   3.694885347463114*^9}, {3.6948854656026783`*^9, 3.694885467524753*^9}, {
   3.694885586519328*^9, 3.694885613862914*^9}, {3.694885696509283*^9, 
   3.69488570591849*^9}, {3.694885740061631*^9, 3.694885875701406*^9}, {
   3.694885923842495*^9, 3.694885940440901*^9}, 3.6948859705177317`*^9, {
   3.69488611901254*^9, 3.694886193918309*^9}, {3.694886535268056*^9, 
   3.694886607640799*^9}, {3.694886660762775*^9, 3.694886697258871*^9}, {
   3.694886884295713*^9, 3.694886940714075*^9}, {3.694887393747323*^9, 
   3.694887399148135*^9}, {3.6949535387550287`*^9, 3.6949535460112677`*^9}, {
   3.694953615623062*^9, 3.694953772319428*^9}, {3.6949540760587597`*^9, 
   3.694954076613863*^9}, {3.6949576371274223`*^9, 3.694957637522797*^9}, {
   3.6949578424715776`*^9, 3.6949578672894993`*^9}, {3.694957909887656*^9, 
   3.6949580057323236`*^9}, {3.694958043815888*^9, 3.6949580460093117`*^9}, {
   3.694958205903722*^9, 3.6949582204657097`*^9}, {3.694958264971743*^9, 
   3.694958303256921*^9}, {3.6949583777616158`*^9, 3.694958385267918*^9}, {
   3.694961693462778*^9, 3.694961759521596*^9}, {3.694961835133524*^9, 
   3.694961835802408*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{{}, 
        {RGBColor[1., 0.75, 0.5], EdgeForm[None], 
         GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQoUHDCEwEDLAQcfSmvg4MPMU8PB14PSKjj4LlBa
CQffD81cNP6BeChfBjtfIRXKl8DOfwDji2DnH0iG8gVw8OOgfA7sfIcwKJ8B
O5/BCkp/sMfOV3AAABIVIRg=
           "]]]}, {}, {}}, {{}, {}, 
        {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJyF0DsKwkAQxvHBytLCwsIiBhERCb4f8ZGNWitYWCpEUnuFPVqO4hE8goqz
RWRmv4Hlz69aZlrZ45xXiOj0ed+WJzC/vhLZMZuMaHNhV2UXV3ZN8Z1dl/3M
2Q3ZgXNTdnEzpb3+TUduqPjAbSuOuB3F7p+uYnfXnmaePnAEPAAeAo+Ax8AT
4CnwDHgOvABeAsfAK+A18AZ4C5wAG78tMKV+W2Da+W2Bae+31f0GZDk+Bw==

          "]]}}, {
        {RGBColor[1, 0.5, 0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
         GeometricTransformationBox[
          TagBox[InsetBox["", {0., 0.}],
           "InsetString"], CompressedData["
1:eJyF0DsKwkAQBuBRG0sLCwuLKCIiEnw/ojHro1awsFRQUnuFPVqO4hE8ggFn
isjO/j8MPx9TLDutx+uSVojonE8pnzJJPsmvA0OFiGUfyd44ba7sqtvZjV1T
/GTX3X6n7IbbgbjpdnY3hX/9m07cbcVH7o7ikLurWN7pKZa79jVzBsAh8BB4
BDwGngBPgWfAc+AF8BJ4BRwBr4E3wDHwFjgBNn5bYNr5bYFp77cFpoPfVvcX
iQ0+CQ==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJw1mnk4Vd/XwE0ZMrsX15B55nKFQrJXilCSzEMSVySZKhGZComUypiZJDKG
ZOgeZcpUKJV8lUjmkHn83feP959zns9Zz9p77bXX2muv5znizt5nXOloaGg+
Uh//9879aJSkQSOMOeS3Xvwkewx5CK6bZq4JYZ9Pm5ncvX4MqZELWZgWhLDY
Kz4ZXu3HUPMq482vI0IY9z3lkv7L+mhcpNkl6J0QJv0nZu5umwFSvKyr2hQl
hElotnyorzNCSzWzU/KhQlj1QSa+IFFj1ECTkf/wuhB28RFnWFWkMTr1eJOf
7C6EtSobLRVZnUA+9bU7jMZC2FD6RrMuqwmqYlHrOskuhDEavoqmdT6Ngs1/
RVbvEcIGZZoqb+WcRvoZCUhkRxBzL64oWBg5jQZI85V/5wQxpdLO9QxXM7Rm
XZL68KMg1nc7TS4p4AzSKZB1+/pIEEuM4eYQ+GiBGOYHxI7ECWIsOa3Kq6KW
qFsravD5bUHMV5br8YaPJXLsHjMJuiaIGRyq0wrns0JhSznqItZU+YirFq2P
NWrRE6YjCwpiNz8ONzxyskNvVdMN5HkEMSYTMy69bjuEiQnHzrEIYiciS6+k
H7JHDTtC+MB1Aez3gmuk1z4HVFknJBP/VQDb+Dd+VWflLCp//sTD/KMAdm4u
z2zXxxGVpAiVEdoFMJ6SW025s46o0F9IM++VAKb84arts5lzKGu/kHFtkgDW
6clE1qQ9j9LFn8TfjBfAjJw+3AgzOI/SuIT69aIEMJvKNNGBuPMoaU7Qofua
APaUPbv4tbAziisS9PplIYB5qRxe6jVyQYESgg/ZcALYJe4awuqQK/LnThvo
3SuAqbe7sbNoXEBXaQSFkukEsOPR7N6X4y8gn2GBfPFFAna0KrEd9N3QhTSB
mgO9BKx1yikv/Z07Isekbmy2E7Bfohcdu2QuovMBAqgJI2BbxOLv/rEXkYOV
QPuJcgKWnvDioZmtBzLnERh0uk/A1tp6iLVMnug0baqITDQBG/6iWWd93ROd
mie4TIcQsH/0X75kTngi4x7CzDUvAta4Rnhy6ONlBHcJO3dNCBj7HbEguypv
RKQjSFSzErCiLDHJ8SlfFLLylI6RgYA9OoI6a5X8UM+U2qjVFj/2c19Shq+3
H/LpN81fm+HHxvQdi3JW/VBVfrSMTg8/9raepvs07irSOb6q8O4BP3a1o2O5
+oY/uncokhUfw4+9u+dsSu7yR8MquBlyOD/mljf9TUn0OgojqJQw+vFjxjS8
U4Lt11Hz5AUVY3N+bChzUatPNhCdjBtQ6+XlxyJDhKXYJYJRRhgZL8HBj3lK
zanLRAejuauLS36M/JjuQUWTlNlg9OAsRw1+lQ8T133yL+XNTfRJ2UDT5isf
9u1g28M7vqHIobda50caHyZty12ccj8clbQc3Ud6xIe1kEPmd7vD0c7r3u2w
WD4swO7WfS32CJSdO/tGIpgP23dH+KRyfAQauyJ95MJZPkwyXfmee9ot5MmX
qD8ryoeRad9/ezAciRjnfRvIBD6saeGH0qh8FMp+f0ptiIsPS3AXNFT0j0Kf
g5nFO2n5sMHt7ZxC7mikOxq0VTjKiwml7jF8YXEHcZU7vyQ/48XobVwYk9lj
UVEMUhjK4sXUjFMjXl+MRcdchHPMU3ix/KSZSYa2WBTINxCvF8OLmR+JiZSK
jEO/go08xC7xYl37Ny9Oc8ajKiOS+JAyLybCnh7jVfEAnZJkTzGX5cW2Qz7p
5U8+QBNbkxydorzYxQ/Zg3ESCWhfed7Way5eDN3/sxWSlICi+Pi/Ji/isd7w
nVKJ6IfIZnQ73rwGj5XKSFjb3HuMFhsG93SW4jGNi932b3sfo7ikV8F6z/DY
ZqStKT1/Imoy8vVQTcFjJQ7rv3D5iUihfEyf8wYea9f2OFPTnoQ2gzu3Og7j
MZo/S3kndFNRx2bATqYGHsvmfcHsm5KK0m7I0Fwh4jH3zQM9Lf9SkWZAOL3Q
PjyWtDXvzFaahvyvHNx7aQuHvRdVdQpQTUfzF/P4Wetx2FOfwHj961mIMnFa
4EclDkuRZZg/MJ6F4t12BF8W4bA7n+JIJxWzEdHVVsQ+DYfhiEoZwxnZyMOJ
U7o4EIdJSHbTMcXloN9WQftPaOKwnCcPjgTE56Gqz3LqoiQcxjurGh3Tl4du
Wwxo/JPFYb/PN9kH8ucjiTOqWk/4cdjLON1ju3n5yMnkD5pe4cEqrgSU/W17
igaPmpvEVvNgXmOxuV8PF6Lnb2lMz5XwYDsF1+NFEwpRwJHS02pPebCY58Mt
fr8LET9isfj+mAcrWGDMNE54jiy0KXaKV3mwuHsRYQIrRegDSdG9cz8PhhXE
7N+3WoIWq8b3KCryYDXCG8QRy1KE18rNuyvJg90ymqQ0VpciuyMCP4zwPNja
XtXnXQFlaMyMyap9mRuL0WjPOhFVjjb8Ro+21HJjqZ53d/sOVCLh1cwRqQpu
LNTbvqjauxKhILvQ28+5ManAT+d1n1ei27d6646mUfUr7/0zFHmJOB9TVN8G
cWP3ZlQDr3JVIanqJ6IUXW6sfYfE9pavBh3Xsm4UOciNaV6P4/1pV4M8Gnns
Q1S4MZ9WnODbrBpU1hKTdFiMGxOa21IZVHyFtAeuszfQcmM96ZIOj01qkemq
+WZtMxfGbOt1ivN1HfIL4kwlNHJh+nrzFzz21qPHux0HAqq5sI0wC9kXDvVo
kEnP72ABFxYJg7sz9A2ITCBNVkdzYdeVDUYKzjaiG1psXyqNubCd9IciPGIY
6nNO2fXS48JkhGe3n1hgSCFOSk5Rmwub1JhZao7B0LdhncA8eS6swqKfbXMZ
Q5q3Lws9ZubCarvOMsoPNKGZjAzKVBwnVmAz4Sf56h1Kn6/mcgnmxFLaxKz9
V96hE0d7zn+/xIldvRrxLfJAMyqa2KHvMubEhmyw179qm5G7mpNhCTMn9tr5
3WZXawsaa5fo9b7NgUm+/3FUh6UdPRY6JDFxhQOj4R4zMLdsR0e9zK84uXBg
Uxi7vFFuO8rF3eY10+PAlJmZPgzqvkdOjr9t99NwYEXX2kq+RHSgoX/Pfi0F
sWNrJyvATrMbxRlgapcvsWOWUtqpYY+60aHUr7d/27FjSQUVF0r+dqM0XRbZ
AS127LYhP5d0cQ+yifG49GqVDSMq/nX05P+I+kWIS4FX2DBP3zK/0epexKsz
6otc2LDm5Y/XzaZ7kbVt6l8GczasTYVtwly8D31/tGf6/n42jNlG7qvQ/T40
yjw88nSBFROo1zox4tuP/i3Gf+j1ZsX0Gdnyky0/Iw0ufZPkc6wYG6eAFG3i
Z3SduNnhYMqKSWsIvuH//Blturm1/lFmxaavmPw8Yz2A6P9Djduze7H7b6Pp
SOQvCNc2XyTvuRfT84i5uzfnG7IcK5D7a78X2/VneYeb+YaSac8WVJ3Yi7HY
TquNHxxEQjrvc5DiXixmWO34XO8gkqzISbGcYsH+xOw2Y5xDSO3Jmahwdxbs
qsuXa3JVw8jcu+r8NzIz1nHWcvK09S+kkxzFX2PJjPG9Ncz9L/oXkqLYdD80
YMYY2KVdf9T+Qisc25on5ZixKOzXnL7wKEop1eeiTDNhuYRTlLqJUTQ8O/Am
348JE2cJuymT+hu18T6/Gu7ChHkc++IT3PsblR8OUnC0YMLqX93ut947jsLv
iSbxH2DCjBa9UN7NcSRFdL98d50RW0kuiCz2+IM8PNeFfMIYMdBtygo5N4nM
H3f2nvRlxJofDvVUZE8inYaMaHlnRuy895Hi4F+TiJ1N79+vo4yY3BNAw25T
qLz4boclEyNmagis/wKn0cqUUOCh+D2YoWVPfFDDLAq/qDvAmM6AOSU7Lwk5
L6BP3yty0mMZsPG6I8uCCQtI5pT05f1BDJjdMV2tOGwBde1nY3C0Y8AOJ4ee
eC+2iAhb31SrCQxYofCPA+3ji6g0/to9l0R6zJkm5sjLmCVESztps36bHjPm
enzaGFtCFlccpO5fpcfQ08izLqtLaMP6aH2dOT32eZ09RdRtGemLc09y89Bj
lycttv47uYKGXr44hsXTYQpZrTYu+9eQiowYl1UIHSb8dPdomu8aikh59H36
Mh2msvEmhlyxhuRu3vDjN6HDfq5zv3q1fx1dMTDM9mKlw2TlFdcDdDbQ3m+j
m8J3aLHgz1zd3pe30EFqOQkMp8FyhHXNJgpogBRUVCPjR4MpSRgfIvTQgMKa
Vl2/Mw1mG/+0JnWZBkQWbZqIx2iwdLfE1Ef6tMAwnvRhhJEG6xU61+Q3SQvZ
T6S/PiLsUh5bFl5yPEIPjxKP/Zhd36GkWjlem75MD1H3XcaPf9+h/HF4qtef
Rg+et3KWNjN2KJlkznvVy/SgdWkfN1lyh5LMSt/9uYwB+rR5jdWVtykLi87P
OQ4wQou6ulk85zal8uXI4QR3RqhVNreZmN+ivBouCw54wgiZEgkX0l9uUe66
1sVep2OCS3vZbzFobVHk3zYRjD8zAcMgQ8Ono5uUUNrB2E/xLHAwcIl4zXad
sk/+5jewYofTzKbxFw+tU3ov9T0+l8gO7snP587uW6fQqY4LL31ih5RqxzKD
kTXKRJipRbglB6wttJMIF9codMI/O5ADJ9R5ZKjVB6xSmqfkRK9hXHDYwUCL
NmWZMrk0HkPDhwOr6ezU5cBlimfMlF3GYRx43dhcn7RfpoT+96UkzBUHmSnl
dX2iy5QyMv154Roc7HwS1Ml/tkT5x/S6qdIOD5jJX93jr/5RJM9/jais4IWj
KOXYvYEFykXvQM6WVAKQXDQ+/qteoNQ9vQGyHwggHN1nb5e4QJFKXwmfZhCA
pR62K7IWC5ScwiHLdF8BKHAMz2nqnad8OtyjUmoqCPitT1vTqX8pilL3pVhF
hSE3MNCnMWqaEjoveFOXSQyCml5G39WfptQJHeRKlhMDC5a5TGuGaQrjwWVv
eWMxYEx17l4In6KUVynWbN0Tg4u1JxRkbk5SeuxbDV0J4kBa3TcWf+UPJfgV
KIVoSgDl6ltrJ6dRyqXXB7Y+PJOC/X88Te9KjlJ2GX4xE3ukoMCW/3jV+C9K
+DzxXPOSFMTreh5gvvyLsvnD+1uunjScZebjLQ8coWhmR6ZJj0jDysH+/F3p
HxStHy07/vKy4BUlnqYb+4XiEqqAm5uQB6tL/jEPub9QGkSK+5j5FeDw6c6A
8eQBCquQu72rvgKwCV6zjs//THF1+VE9lqsARSXt+OHGfsrwTgMT/XlF6Hr+
Q2Tz5wcKp2pq3sKkEjQaBLMEFmOUwtaa//gIJHDwunabfJxCUfM/0dCmQQJd
08XlgYONlAzi34g8cxLQc898rSe8pjRaSFsN3SdB3OMfmZGD5ZSTReJzVntV
AftTUGEcZU3pb0o5Ec+0H0SKq4fPmWBo7BC+ckFSHUq0V5/KWDYhyZtbTUeO
q4NOh+blWYe3yOpK4RjmoQ52k/WbNzybUUL1w6GTleqQKPuWkBTbjlTS0kcz
j2oA4xk3+XHyR8TefZRF3/sA3Oy54iKc9xX9LB4ctJ/WhPIjMs5JUt/QD/tR
MXq8FoxVfXXiKviGtiN39n7X0QLjJ4cdGZ4PovdNrhL77msBwZ3JdqZ0CBmf
+Vs2o6EN38JMZB3P/kSDMUN/O+IOwRXBEWHli2PoJTFbmM5JF56ZMDP3hM0g
7DrhTaapHhQ4LMgoN84gQwJ6et1dD/IvDerHr88g+/MHty+E60FuzItbp/xm
UfKE4u6dl3qQ2XJ6t8dlDj3h3dYdJByFjsyTm26S88hjvvNt+Z+jgPElLroz
LqLWAtWUfUn68IJRZsSjaxnxrYSP/qduBNbr1i1ys8vItW3Dv93SCOhmYp6P
s68gjlBKS6e/Edj0zvo6m66gjFRaG+HXRrAnvZrOrm8F2RtoPhrVNQZHVX0p
o6+ryHl/64PNUyeAy4HsJju2jqZJ78s7w0zgSkXu7OjmNopMEf7wk8cMfBjY
/X9+oANO9xNW/c2WkMG7EhfzjxEaL0nUhwrag3yEZ/AfelZ4oMvbk8PjBOpm
HA3cOFZ425L0IVrICUCsfPOQBCsQnvl/dJdyAqs3/248AFZY7IxPFTrgBLc3
bgRq3WSF5Q7tDj1bJ/jpF+Mfu8IKI4viNbGZTpDiUuCjMskGmiLF44VS5yF/
v2G57Rob/O6ju/VJ6TyU0U79vcXEDrKEBq919fPQmkX0/irNDr0OcbvK+udh
6XvV5XBndnBzT0o67noeTlu88+j/zg7LfxVIkvnngUn/J/l6DwcYXTY0UxB2
hsL3P+MnhjnAykXNh07KGYxPjdTa/uUAS1Pf3o+KzhBn/YtNh4sTrvrvCp8+
5Aw8HmNVNGc4wb/YUuGLrTMI359guPuZE44cVP65/tgZUj0Dzpzy4oKVnDUN
RXoXmCoN+BPlzwX2U7H9pSwuoL0QEEwJ4YKsV5OjMlwuMHQtsIB0nwtOZS3J
Lgm7gEjojQ2eci6Qs7/QQ3vABfITgnO/LHDBp8wNl2FXFyitCVt0usYNZRzx
bccbXKD4n980+01ueKSdd38Wc4FCkutY3W1uMMJnr0e3uEBekdEA/jE3SKk+
SkjrcYGUTJ669kpuuHM8dFLjpwvcisoPJ81zw/MUcR1dWjKEvUu68d8qN/Af
fWetsIcMITQxV+7uckMql3fyXhYyBNy47DrGwQOyC4cvPOMig5fXAaMUIg/w
XXh/00yUDDZW7Vw0l3jgmFdE/XltMlg+qmMp8eOB0ZWAibjDZDjz8QWd3Q0e
SHV88rEYyGBinLD0MoYHxiMV65sNyKCna/fVrZAH/A9+sXc+QwYIOtmLL+eB
MeLfdwqWZDhcq9vR9IoHLjxhrR+3JoPmfskGoTYeUJOePaJ1lgxEmZmsD795
QJ4pWc7QjQwKLsMpwbM8cM/9esiLi2SQy/6YIL/MAyW6kzoMnmSQEKy+dYsB
B6f30vy650MGAkeI20FJHOi03bdmCSQD7wkfpzEFHPQ1zAUxB5GB546zbcJ+
HJASdCc2gsnATnf8xPQRHEhgYndfh5GBboVTJcsJB2Tr/Q8zoslQY/IyQdod
B6NnxF4ox5DB46nVUrE3DgyW6K68vEuGPouM17Uh1LpaU7eVfI8MUS9AGEXh
gPmlWd1qPBm0GcZCWu7hYFf4vOCJB2TIfalwrC8dB9JyzrVdD8lgxdpTYJOP
Awfx9oWNR2TY6+LL8qMYB43695uFE8ngx1PbM12HAwWimPKhZDLIeNir+r3F
wbFs7qaDKWQYbNp5tPaeak/Ry9+yqWQ46qtvu+cbDq5bn/7vVxoZ1ton6mN/
4uB9g0xJyRMyvBCLE+GZwEGHgSuzZzoZnAJUwlP+4uD80crZfRlkwH/sGxVZ
xQFdWof9Oyq3y/obPN3BwZ0P4WYOmWQIDhV4rsiIh0qWt90TVCZ9aWCtZMdD
GE/cB/csMowpO3lp8uJByX7VcojKKVH0vW+E8fBnR9XpaDYZTg4XqOlL4eF8
S9hsBpVpDhgndSriYUUKbU9Tuere7JqZGh5yj/2IJ+aQwf33A/uv2nh4uT2Z
40xl4cPqbxz1qOP/t6MRS+WPj7+I/TbCw5zUJ+NnVL49c+PWJTM8POo68LOG
yprHRMYXbPDAFrF35TWVZ540GQY4Ued7bhRXTuXsf+TiHTc8FJ/bk5dGZYsT
zByR3nhgveaqHUBl5rxiH9breGDxKzxjROWGjVP9CSF4mHokOcNOZZ8zixqE
KDwc6dJjaqXaL1WUmJJ5Dw/llDv5vlT+Squ1KZWIB7Pm+GYuKsfZDp0tTsfD
/A8G9zyqf6AiFFPNp9rfUnFfnspLzJKStcVU+Sc/nTyqfwudWiN1X+JBA6/j
zUVlh9qLE811eKCQCPK+1P1pdisv6X2PB4kf+QfYqfsZQDHnsumlrm/ye5wh
db+V+Ff9hr/iwblhv/d1ajw8bj2sOf0HDxuC+sNl1PgxFBlJ8/2Lh7+1h7xe
U+Nr69rt7dUVPOhptj+oSSIDWbrzLQMjL9BkcyXGPqbm100v6Vh2XkhNqr/h
Qo3Xrk/cd7h5eYEhdHBDmRrP6rdtTESkeKF/zLA/+z4Z9oz+/nJQjxfYGTJk
56n5czuxtuy8MS9wZBLZj96h5pthbHTsGV543Rl5JTqKGg8lpIM/nHlhgN2v
dyyCao9/UFLULV7Ys65yZPEGGYLkT3mVx/LCoSyhJ70BZNj4LmYw+IgXmoVe
JuX6U+MdWpeJ+bxwfjolUsCP6s+93Jafm6n2tjZ22ruT4UrjqNJuFy+Ev6mo
b3clw6J3DYP8Z16YVW25JutCpvrdvir4Ny/wXat3rKOeRzOZBTgpRj6Qfur7
7AD1PBvbr9Pnd5wPYjS8H8RrksHlN0dRuikflNeeohHSIMOv5JHwVms+8L9p
kpOqSoafW1Gqgu588OqA1ePLCmQYau190HSHD6y3ruF9hcjwyc7NlKuDD4gn
/kXNbriAObu2rHYfHwjaPW/IXnGBPgrbrssgH5wqrS8wWHSBj1KVpa+m+GBh
yb/BY9IFuua22M+x8sMN44R/+C8u0BzxsKvkJD8E55lzbpS5wLyKNfNJC37o
3qz+oV7sAkL/CR2bsueHNXJtPrnABfwOPq2XucQPvntcVfLSXUB85lVRVgw/
RLj16mbccYEQy//uJLTyQ9YLd517ji6gKSenfw0IkFlNM59F5wLkzzNhOEMC
mPTQB8ZuOcP9iIqGClMCXJ/uIV5ecYbxIW31OUcCCBAH9HFTzpCYYCLpdpMA
53djnKY/OsPihh+tbR0Bzq2rrXxKd4YX3Y2NOuoC0OZewjVMdIbczxVeITrU
PkIqK41Fhlqf/3sqih0TAF5BNRNFEWeImr0XftRSAF53o0tmHM7gxO6ob+wv
ADbVtMcV5s4Dr8lOl3WtAAygsrvCL85DSJfukJ+OILxrkdPyF6feLzopG4XH
hCDOu2/r0vQ5yPNnzvc+sQ9YxoI+0/+wA9HuD0amKqJAYLYOY9q1BMXpmn2M
mWJAiQ7OfbB0Ghz0W/ALD8Wh/8Wz/JEYIxBju3GtIkkckngrdh9cMoKxPuUB
3zRxUNsaELA0MQJPp5TkxRxxYHL7/VqI2whuBl0SXCqnymU//cpLNYTMCm6x
1R5xaMfidwtLj8PPfY6K23slIOvZb9eWCX3IH+OJa+SQANKdHQ/Rbn1wL26b
uckjAeSekKP3K/RhXlO1dEdAAqrUsm6X39AHWgsGVRp5CTDNLRxYZ9cHibtF
B+iPS4CFR3RmseYxIK+sHGG5JQGxo1ytOZl6EO9x9KxQtAQYtE5A9i09eDV8
P4AYKwF74g9/q6Xel/e2yZWZPZKApsK7zppqelCRbCeclicBz+5/7fJ5fwR2
NN+sKDRLwDlyymrLBkByUGTxyT2SkMz3xva/EV3A/va2OrJIwniJP51dpS5M
uYj88mGXBNeGDvG9t3RB9+QrQiKvJBziOfSQQVoXxoQnI/+TloTHB/3anS4d
BtKbk05eBpLgIOM+/JxWBzpo8LwPoiWB4W28LbMFtV/ws3V2iJWE9MfZhklE
LegYzSyTu0/Vdy4SNWWicqu8cVOSJJgQd3WO1GtCRxwKXXwqCSsO/5SkpTXh
PeHSpEUz1b5/GO13moPQTnrbKEArBWOuhIXLX9TBMJeJdZxBCrjSkdT+GnVo
x5nYVDJLQcguKUckkcorXxaNuaTAQ69NwMdcHdoaZmWDRaXA+ZyG22KvGrQa
CjwcPiwFNE9c2c8N7IcWJ58LeTekYCO257PMFgmKQk28mkKkYLcM3+f8Hwke
ZCr4/4iQArROce54QwK7obFIoVgpeIb7Ui0UQYJ5a9unj55IQX2B3cl3e0kg
bKo3dqtBCgYERU9zGCqD32G8M3mHOn/FydG2KQWwcVi4GEEnDUe901ZTX1H7
0aAe32xGadjZKRepu60AzK/vhA9xSEPE6ScBo6IKkKG+nW0hKg3/1Cn7+mzl
oV1x/McxkAY7upyNoe+yICJYe1Y6Qhq+bpebP+ajfj8Qn7wdKQ2XmTif2/+V
gqQz5N7PMdIQbX+907FdCthjufSjEqQBZxoRwh8kBVub7kp/sqVBUlXk44lR
Sfj2n8BmIUUahljPvI95IwGPc4JSlLalQemO74Eiat59bDTrY6CVgRGeSaUr
IWLANijL9h+DDGhb+Gr7OIrBLZ5PoffYZECdofnZHlEx8Lul5DYnJAMTFyqt
lPVF4bTrfxrl2jJwEUevDRf2Aas86lcLkAE7ufkGs3kByO2bbVoLkoH5rBQ5
pkYB0A5OL28MlQHPhtJAnrsC4P5h/d7xaBnIP8kiJC8tAM3Xqgztk2Qg0HXg
vvE5AgS/lX8TUSUDlviFGppRPpizxz/vnafKv4rO2EnjIXLPu+SkJRmQe1c6
vruJA+Ey3yj7NRkobB2one3DgTHdB5ffuzJQGuRskRuOg4LCGJF1DllYvVgf
S/7FA+eWdx6JEWWhYvs4+2o5N3yMnwzxvigLx2Y3Qi/uckDXbxW5qMuycCG4
E/v5igPe6/j3pvvKwpbiqOkfHw54O0Un1REoC9Kvypsyx9ihykD4vdRdWQhV
labP7GOD1J1TuMEiWRD7HXJRoH0vJFkmNsyXygKtyLNyoZi98PDFd1eml7IA
qyZmWcZ7Ic7OvVa9XhYYKx8ekf3AAiE14Wfvd8qCX831CIlhZnD2qnp2bEYW
rtrWFHHgmMCxZeO0/bws/EjnD3z3nRHshY9s+C7JwmDnvsSZfEaw6Og+mbUl
C9Fhho9SNBnBQObPwjqbHDjZzP054roHFIYFdMqIcuBVwLei3E8P/0xCPwp4
ywGHitmy8RYNGOS+KZ7ykwN9GvOS0U80kLKyHVXvLwdvQx9c7C6hAd2s4MNn
Q+Tg9r0+LMGJBu7OBxZl35OD110WmRmPdpHYo6u3ZV/IwQe68MTjltvoyp+X
59bK5CDXLD5VgGsbtR76p/3+pRxA51R/cOcW8hzzXfColwN6L/bxxaNb6JWG
t2NphxzUOpXnhR/aRKe+XtTUmJSD5zfeLJ86to5ylJ7jGGfl4Kyv2rU3TOto
KWxibmBeDvZ5PC0p61xDafJuTwPW5OB36etknOUa+n2DzNPAJA9VyQv1bZdX
UfC+czN6MvLwqy24g1CzjIqcLbJPu8iDvad0t336InImKx644iYP8cbn4m54
LCLBC3RdiZfkoUix/im31iKKvVi+OnhFHoRH7m/lf1lAnj5spq635UEgrEpJ
X3ABqYQ0bwc+lYeW5eP1pIt/0UTok0fpz+VBUSiXmIj7i7LD/eQpJdTxbxX4
dr2ZQ1yRYpYMNfKwaFfj/IJ/Di3GBr+Ib5WHh08ddWn7Z1BVqrp93h95INtG
m97ymkKeT1gXWqbl4ZJdYcFx6SkknfErauKvPFz1Cl57NzSJkrIfVBLX5GFM
Xk1n2GQSXX82w1LLrABXoi5UXNacQNrV+bVd8grAaCk5lE8cR5SPeL6VSwpw
8GE07kL8L9R3rtlpj48C3B7jEdO3+4XG564U468qwB27sx+fy/xCHOz9oBas
APhv3512sRHkYJRwySdOAfwCjLLqNn+ijSb2pqkXClDmXnHxD9cPxGHWyLpR
rgA0Q+bqx2uHkcRPTyuWagXICk1zi3caRkY7ndOyjQrg2an6tOPlfyhF+y6f
a7cCjI0klGDkIXTgJaPnj1mqfITuxcjcN2SsV1Mzt6AA+q8PtjbnfUOOva60
O8sKcPerYry37TcU+bc5SXhHAR4WRGH4tq/ok+KtJlsORSg5fqbco/gL8s3f
5fukrAi6+yvbapM+oxeJa03t3oqw0mktdnCmF/FJ5Og+vKIILPP+2Om6XhRW
alRvf10R6F3zYqfu9CKLtrSquRBFKJMSpEuT7UVbazrP8PGK8CPyfky7x0d0
0iE8zumFIsieZY/4ytGDaibkWRTKFeHXU61ehrpuJHatL/LfS0VITfAP5LjQ
jZbuSYZG1StCIoourcC6UDqlxfdFhyKc5bkVtRvaiWYk9lqvTSjCgsG42h7p
98iqrLK/aUYRfBNSOYX+a0fYIfvTsfOK0P7LIOJvYjt6bPHCSGRNEQ7r5e7p
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
336oqAr//7/z/wAbOovT
          "]]},
        Annotation[#, "Charting`Private`Tag$188870#1"]& ]}, {}, {}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"Data Histogram\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\"\"", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Gaussian Fit\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.15, 0.85}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Observed\"", 
        GrayLevel[0], 24, StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Counts\"", 
        GrayLevel[0], 24, StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->Directive[
     GrayLevel[0], 18],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->700,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox["\"Gaussian Approximation of\\nPoisson Distribution, \[Mu]=5\"", 
      GrayLevel[0], 30, StripOnInput -> False], TraditionalForm],
   PlotRange->{{-7.000204911699524, 17.170204911699525`}, {
     0, 192.50000000000003`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {
          EdgeForm[], 
          RGBColor[1., 0.75, 0.5], 
          GraphicsGroup[{{
             Polygon[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQoUHDCEwEDLAQcfSmvg4MPMU8PB14PSKjj4LlBa
CQffD81cNP6BeChfBjtfIRXKl8DOfwDji2DnH0iG8gVw8OOgfA7sfIcwKJ8B
O5/BCkp/sMfOV3AAABIVIRg=
              "]]}}]}, {}, {}}, {{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          Line[CompressedData["
1:eJyF0DsKwkAQxvHBytLCwsIiBhERCb4f8ZGNWitYWCpEUnuFPVqO4hE8goqz
RWRmv4Hlz69aZlrZ45xXiOj0ed+WJzC/vhLZMZuMaHNhV2UXV3ZN8Z1dl/3M
2Q3ZgXNTdnEzpb3+TUduqPjAbSuOuB3F7p+uYnfXnmaePnAEPAAeAo+Ax8AT
4CnwDHgOvABeAsfAK+A18AZ4C5wAG78tMKV+W2Da+W2Bae+31f0GZDk+Bw==

           "]]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset["", {0., 0.}], CompressedData["
1:eJyF0DsKwkAQBuBRG0sLCwuLKCIiEnw/ojHro1awsFRQUnuFPVqO4hE8ggFn
isjO/j8MPx9TLDutx+uSVojonE8pnzJJPsmvA0OFiGUfyd44ba7sqtvZjV1T
/GTX3X6n7IbbgbjpdnY3hX/9m07cbcVH7o7ikLurWN7pKZa79jVzBsAh8BB4
BDwGngBPgWfAc+AF8BJ4BRwBr4E3wDHwFjgBNn5bYNr5bYFp77cFpoPfVvcX
iQ0+CQ==
           "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1: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
Q+Tg9r0+LMGJBu7OBxZl35OD110WmRmPdpHYo6u3ZV/IwQe68MTjltvoyp+X
59bK5CDXLD5VgGsbtR76p/3+pRxA51R/cOcW8hzzXfColwN6L/bxxaNb6JWG
t2NphxzUOpXnhR/aRKe+XtTUmJSD5zfeLJ86to5ylJ7jGGfl4Kyv2rU3TOto
KWxibmBeDvZ5PC0p61xDafJuTwPW5OB36etknOUa+n2DzNPAJA9VyQv1bZdX
UfC+czN6MvLwqy24g1CzjIqcLbJPu8iDvad0t336InImKx644iYP8cbn4m54
LCLBC3RdiZfkoUix/im31iKKvVi+OnhFHoRH7m/lf1lAnj5spq635UEgrEpJ
X3ABqYQ0bwc+lYeW5eP1pIt/0UTok0fpz+VBUSiXmIj7i7LD/eQpJdTxbxX4
dr2ZQ1yRYpYMNfKwaFfj/IJ/Di3GBr+Ib5WHh08ddWn7Z1BVqrp93h95INtG
m97ymkKeT1gXWqbl4ZJdYcFx6SkknfErauKvPFz1Cl57NzSJkrIfVBLX5GFM
Xk1n2GQSXX82w1LLrABXoi5UXNacQNrV+bVd8grAaCk5lE8cR5SPeL6VSwpw
8GE07kL8L9R3rtlpj48C3B7jEdO3+4XG564U468qwB27sx+fy/xCHOz9oBas
APhv3512sRHkYJRwySdOAfwCjLLqNn+ijSb2pqkXClDmXnHxD9cPxGHWyLpR
rgA0Q+bqx2uHkcRPTyuWagXICk1zi3caRkY7ndOyjQrg2an6tOPlfyhF+y6f
a7cCjI0klGDkIXTgJaPnj1mqfITuxcjcN2SsV1Mzt6AA+q8PtjbnfUOOva60
O8sKcPerYry37TcU+bc5SXhHAR4WRGH4tq/ok+KtJlsORSg5fqbco/gL8s3f
5fukrAi6+yvbapM+oxeJa03t3oqw0mktdnCmF/FJ5Og+vKIILPP+2Om6XhRW
alRvf10R6F3zYqfu9CKLtrSquRBFKJMSpEuT7UVbazrP8PGK8CPyfky7x0d0
0iE8zumFIsieZY/4ytGDaibkWRTKFeHXU61ehrpuJHatL/LfS0VITfAP5LjQ
jZbuSYZG1StCIoourcC6UDqlxfdFhyKc5bkVtRvaiWYk9lqvTSjCgsG42h7p
98iqrLK/aUYRfBNSOYX+a0fYIfvTsfOK0P7LIOJvYjt6bPHCSGRNEQ7r5e7p
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
336oqAr//7/z/wAbOovT
            "]]}, 
          "Charting`Private`Tag$188870#1"]}}, {}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0., 0.}, 
      PlotRange -> {{-7.000204911699524, 17.170204911699525`}, {
        0, 192.50000000000003`}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0.},
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Observed", 
          GrayLevel[0], 24], None}, {
         Style["Counts", 
          GrayLevel[0], 24], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> Directive[
        GrayLevel[0], 18], GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 700, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> 
      Style["Gaussian Approximation of\nPoisson Distribution, \[Mu]=5", 
        GrayLevel[0], 30], 
      PlotRange -> {{-7.000204911699524, 17.170204911699525`}, {
        0, 192.50000000000003`}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       LineLegend[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {"Gaussian Fit"}, LegendMarkers -> None, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.15, 0.85}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.694882207917678*^9, 3.694882367756971*^9, 3.694882411463676*^9, 
   3.69488247168438*^9, 3.694882583837235*^9, {3.6948826788532877`*^9, 
   3.694882739240567*^9}, 3.694883004480667*^9, 3.694883041768289*^9, 
   3.694883192782148*^9, 3.6948833239014997`*^9, 3.694883354605307*^9, {
   3.694883385212072*^9, 3.6948834177963047`*^9}, {3.694883449787372*^9, 
   3.694883562795312*^9}, 3.694883609900198*^9, {3.6948837396433973`*^9, 
   3.6948837584327497`*^9}, {3.694885302932273*^9, 3.694885348466179*^9}, {
   3.694885384525268*^9, 3.694885399665627*^9}, {3.6948854408800077`*^9, 
   3.6948854684531393`*^9}, 3.694885615111663*^9, 3.6948856663467283`*^9, {
   3.694885698169222*^9, 3.6948857069021683`*^9}, 3.694885749699444*^9, {
   3.6948858530590763`*^9, 3.694885876785775*^9}, {3.694885933617826*^9, 
   3.6948859414864817`*^9}, 3.6948859715968657`*^9, 3.6948861975509644`*^9, {
   3.694886537971259*^9, 3.694886608786929*^9}, 3.6948866987126226`*^9, {
   3.6948869261200438`*^9, 3.694886942242477*^9}, {3.694887400771389*^9, 
   3.694887427493783*^9}, 3.694953483440304*^9, 3.694953620068934*^9, {
   3.694953683287149*^9, 3.6949537029997168`*^9}, 3.6949537414343567`*^9, 
   3.694953772991507*^9, 3.694953816870265*^9, 3.694953866316279*^9, 
   3.694953899792186*^9, {3.694954018526648*^9, 3.69495403326396*^9}, 
   3.6949540774847507`*^9, 3.6949576383306217`*^9, 3.694957676421668*^9, 
   3.6949578690430727`*^9, 3.6949579204042387`*^9, 3.694958011092506*^9, 
   3.694958047233939*^9, 3.694958221585494*^9, {3.6949582693368683`*^9, 
   3.6949583043982964`*^9}, {3.694958381029763*^9, 3.69495838622567*^9}, 
   3.694958568145525*^9, 3.6949586039365263`*^9, {3.6949617280916147`*^9, 
   3.694961762144279*^9}, 3.694961803351012*^9, {3.694961836730802*^9, 
   3.694961875188827*^9}, 3.694961955289934*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{{}, {{{}, 
       {RGBColor[1., 0.75, 0.5], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQoUHDCEwEDLAQcfSmvg4MPMU8PB14PSKjj4LlBa
CQffD81cNP6BeChfBjtfIRXKl8DOfwDji2DnH0iG8gVw8OOgfA7sfIcwKJ8B
O5/BCkp/sMfOV3AAABIVIRg=
          "]]]}, {}, {}}, {{}, {}, 
       {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJyF0DsKwkAQxvHBytLCwsIiBhERCb4f8ZGNWitYWCpEUnuFPVqO4hE8goqz
RWRmv4Hlz69aZlrZ45xXiOj0ed+WJzC/vhLZMZuMaHNhV2UXV3ZN8Z1dl/3M
2Q3ZgXNTdnEzpb3+TUduqPjAbSuOuB3F7p+uYnfXnmaePnAEPAAeAo+Ax8AT
4CnwDHgOvABeAsfAK+A18AZ4C5wAG78tMKV+W2Da+W2Bae+31f0GZDk+Bw==

         "]]}}, {
       {RGBColor[1, 0.5, 0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["", {0., 0.}],
          "InsetString"], CompressedData["
1:eJyF0DsKwkAQBuBRG0sLCwuLKCIiEnw/ojHro1awsFRQUnuFPVqO4hE8ggFn
isjO/j8MPx9TLDutx+uSVojonE8pnzJJPsmvA0OFiGUfyd44ba7sqtvZjV1T
/GTX3X6n7IbbgbjpdnY3hX/9m07cbcVH7o7ikLurWN7pKZa79jVzBsAh8BB4
BDwGngBPgWfAc+AF8BJ4BRwBr4E3wDHwFjgBNn5bYNr5bYFp77cFpoPfVvcX
iQ0+CQ==
         "]]}, {}}}, {}, {}, {{}, {}}}, {{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
Q+Tg9r0+LMGJBu7OBxZl35OD110WmRmPdpHYo6u3ZV/IwQe68MTjltvoyp+X
59bK5CDXLD5VgGsbtR76p/3+pRxA51R/cOcW8hzzXfColwN6L/bxxaNb6JWG
t2NphxzUOpXnhR/aRKe+XtTUmJSD5zfeLJ86to5ylJ7jGGfl4Kyv2rU3TOto
KWxibmBeDvZ5PC0p61xDafJuTwPW5OB36etknOUa+n2DzNPAJA9VyQv1bZdX
UfC+czN6MvLwqy24g1CzjIqcLbJPu8iDvad0t336InImKx644iYP8cbn4m54
LCLBC3RdiZfkoUix/im31iKKvVi+OnhFHoRH7m/lf1lAnj5spq635UEgrEpJ
X3ABqYQ0bwc+lYeW5eP1pIt/0UTok0fpz+VBUSiXmIj7i7LD/eQpJdTxbxX4
dr2ZQ1yRYpYMNfKwaFfj/IJ/Di3GBr+Ib5WHh08ddWn7Z1BVqrp93h95INtG
m97ymkKeT1gXWqbl4ZJdYcFx6SkknfErauKvPFz1Cl57NzSJkrIfVBLX5GFM
Xk1n2GQSXX82w1LLrABXoi5UXNacQNrV+bVd8grAaCk5lE8cR5SPeL6VSwpw
8GE07kL8L9R3rtlpj48C3B7jEdO3+4XG564U468qwB27sx+fy/xCHOz9oBas
APhv3512sRHkYJRwySdOAfwCjLLqNn+ijSb2pqkXClDmXnHxD9cPxGHWyLpR
rgA0Q+bqx2uHkcRPTyuWagXICk1zi3caRkY7ndOyjQrg2an6tOPlfyhF+y6f
a7cCjI0klGDkIXTgJaPnj1mqfITuxcjcN2SsV1Mzt6AA+q8PtjbnfUOOva60
O8sKcPerYry37TcU+bc5SXhHAR4WRGH4tq/ok+KtJlsORSg5fqbco/gL8s3f
5fukrAi6+yvbapM+oxeJa03t3oqw0mktdnCmF/FJ5Og+vKIILPP+2Om6XhRW
alRvf10R6F3zYqfu9CKLtrSquRBFKJMSpEuT7UVbazrP8PGK8CPyfky7x0d0
0iE8zumFIsieZY/4ytGDaibkWRTKFeHXU61ehrpuJHatL/LfS0VITfAP5LjQ
jZbuSYZG1StCIoourcC6UDqlxfdFhyKc5bkVtRvaiWYk9lqvTSjCgsG42h7p
98iqrLK/aUYRfBNSOYX+a0fYIfvTsfOK0P7LIOJvYjt6bPHCSGRNEQ7r5e7p
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
336oqAr//7/z/wAbOovT
         "]]},
       Annotation[#, "Charting`Private`Tag$188870#1"]& ]}, {}, {}}}, 
   InsetBox[
    TagBox[GridBox[{
       {
        FormBox[
         TemplateBox[{"\"Data Histogram\""},
          "PointLegend",
          DisplayFunction->(StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"\"\"", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
         
         TraditionalForm]},
       {
        FormBox[
         TemplateBox[{"\"Gaussian Fit\""},
          "LineLegend",
          DisplayFunction->(StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
         
         TraditionalForm]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0}}}],
     "Grid"], Scaled[{0.15, 0.85}], ImageScaled[{0.5, 0.5}],
    BaseStyle->{FontSize -> Larger},
    FormatType->StandardForm]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Observed\"", 
       GrayLevel[0], 24, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"Counts\"", 
       GrayLevel[0], 24, StripOnInput -> False], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 18],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Gaussian Approximation of\\nPoisson Distribution, \[Mu]=5\"", 
     GrayLevel[0], 30, StripOnInput -> False], TraditionalForm],
  PlotRange->{{-7.000204911699524, 17.170204911699525`}, {
    0, 192.50000000000003`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.694961963653805*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {{{}, 
       {RGBColor[1., 0.75, 0.5], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{7., 0.}, {8., 0.}, {8., 2.}, {7., 2.}}], 
          PolygonBox[{{38., 0.}, {39., 0.}, {39., 1.}, {39., 1.}, {38., 1.}}],
           PolygonBox[CompressedData["
1:eJyF0kkKAjEQheHCU7jUICIi4mw7djuALgSh1QsIrr1CHc0jeQSnV4JQzwTC
z7dJBZLy+ZpfCiKSPPernxUy+VlL4nv6ji7+WyLWjLiIxpxGPCcO6IzY5kyJ
7ZwJ8QodE2/RkW/dwIlvOaJD4hwdEB/Qvm8193zfTnDXt5g7vtXu2/Yte7RF
vEObxGu0QWzvWCe2OTXiEloltv9eiTh8/QDr6EPC
           
           "]]}]}, {}, {}}, {{}, {}, 
       {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJyF0zsKwkAUheGLlaWFhYWFBhEREd9vTXyAFkIg6gYEa7cwS3NJLkGFcy2G
ezIXhp+vmEwYkvr9mT0KIpJ+16/2vON8S5LvYsClgMsBVwKuMqM1ZkxErPfQ
CLhJrOe0iHtom3iFdogPaJf47D3Xd4r2bbsrPLAtN3Ro+6Ue2XYXeGxb1BPi
DJ0S6/vObLsjPLctJ3RBvEeXxBt0RZyga+LI2+db/4M44CTfjlm/522+XcCy
I8a4gP/36lvP4/4ApINT1A==
         "]]}}, {
       {RGBColor[1, 0.5, 0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["", {0., 0.}],
          "InsetString"], CompressedData["
1:eJyF0zsKwkAUheGrNpYWFhYWGkRERHw/o4kP0EIIRN2AYO0WZmkuySWY4lyL
cU7mwvDzEZIJQ9J8vNJnSUSSbBWyVRSdTyS583c9znfZ44rHVY9rHteZ0QYz
JiDWc2h53CbWfTrEA7RLHKI94iPaJ75Yz7WdoEO3zQ0euS13dOz2Wz1x21zh
qduinhGn6JxY33fhtjnBS7fljK6ID+iaeIuGxDG6IQ6s+2zrfxB5HOfbMOv3
vMu38Vj2xBjj8e9cbet+3F/JV1PW
         "]]}, {}}}, {}, {}, {{}, {}}}, {{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
A86YUBU=
         "]]},
       Annotation[#, "Charting`Private`Tag$187047#1"]& ]}, {}, {}}}, 
   InsetBox[
    TagBox[GridBox[{
       {
        FormBox[
         TemplateBox[{"\"Data Histogram\""},
          "PointLegend",
          DisplayFunction->(StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"\"\"", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
         
         TraditionalForm]},
       {
        FormBox[
         TemplateBox[{"\"Gaussian Fit\""},
          "LineLegend",
          DisplayFunction->(StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
         
         TraditionalForm]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0}}}],
     "Grid"], Scaled[{0.15, 0.85}], ImageScaled[{0.5, 0.5}],
    BaseStyle->{FontSize -> Larger},
    FormatType->StandardForm]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Observed\"", 
       GrayLevel[0], 24, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"Counts\"", 
       GrayLevel[0], 24, StripOnInput -> False], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 18],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"Gaussian Approximation of\\nPoisson Distribution, \[Mu]=20\"", 
     GrayLevel[0], 30, StripOnInput -> False], TraditionalForm],
  PlotRange->{{-3.0874485842665607`, 43.543448584266564`}, {0, 95.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.694961890846409*^9, 3.694961891906433*^9}}],

Cell["\<\
In the \[Mu]=5 case, the Gaussian fit seems to be shifted to the right of the \
histogram, probably due to the fact that observed counts will always be \
\[GreaterEqual]0 while the Gaussian extends to infinity in each direction \
(even including only \[PlusMinus]5\[Sigma] means that the graph will extend \
in the approximate range [-6.18,16.2]). In the \[Mu]=20 case this has less \
impact, and the Gaussian fits the data better. This is to be expected since \
as N\[LongRightArrow]\[Infinity], the Poisson distribution approaches the \
Gaussian distribution.\
\>", "Text",
 CellChangeTimes->{{3.6949586654823437`*^9, 3.69495879451895*^9}, {
  3.694958845746489*^9, 3.694958974391918*^9}, {3.694959010980907*^9, 
  3.694959011913115*^9}}]
},
WindowSize->{1110, 928},
WindowMargins->{{Automatic, -1340}, {Automatic, -135}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 131, 1, 29, "Text"],
Cell[692, 23, 83, 1, 29, "Text"],
Cell[778, 26, 829, 16, 32, "Input"],
Cell[1610, 44, 86, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[1721, 49, 2154, 46, 117, "Input"],
Cell[3878, 97, 3901, 103, 75, "Output"]
}, Open  ]],
Cell[7794, 203, 84, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[7903, 208, 1299, 29, 75, "Input"],
Cell[9205, 239, 1401, 19, 32, "Output"]
}, Open  ]],
Cell[10621, 261, 88, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[10734, 266, 805, 20, 32, "Input"],
Cell[11542, 288, 1301, 19, 32, "Output"]
}, Open  ]],
Cell[12858, 310, 86, 1, 29, "Text"],
Cell[12947, 313, 1183, 25, 69, "Input"],
Cell[CellGroupData[{
Cell[14155, 342, 1222, 26, 75, "Input"],
Cell[15380, 370, 1415, 20, 32, "Output"]
}, Open  ]],
Cell[16810, 393, 83, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[16918, 398, 101, 1, 32, "Input"],
Cell[17022, 401, 415, 6, 32, "Output"]
}, Open  ]],
Cell[17452, 410, 1231, 27, 71, "Input"],
Cell[CellGroupData[{
Cell[18708, 441, 6295, 133, 264, "Input"],
Cell[25006, 576, 50452, 923, 531, "Output"]
}, Open  ]],
Cell[75473, 1502, 29632, 564, 531, "Input"],
Cell[105108, 2068, 29853, 566, 537, "Input"],
Cell[134964, 2636, 750, 12, 65, "Text"]
}
]
*)

