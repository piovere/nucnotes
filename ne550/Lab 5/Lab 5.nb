(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    376117,       8132]
NotebookOptionsPosition[    369166,       7916]
NotebookOutlinePosition[    369580,       7934]
CellTagsIndexPosition[    369537,       7931]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Lab 5 : Detector Efficiency and Multidimensional Sources\n", 
  "Title"],
 StyleBox["J.R. Powers - Luhn", "Text",
  FontWeight->"Plain"],
 StyleBox["\n",
  FontWeight->"Plain"],
 StyleBox["16 February 2017\nThursday\nLab Partner: Eric Francis", "Text",
  FontWeight->"Plain"]
}], "Input",
 CellChangeTimes->{{3.696270218007279*^9, 3.6962702565977707`*^9}, {
   3.6962703117782993`*^9, 3.696270341146665*^9}, 3.6969341030705805`*^9, {
   3.6969341362018347`*^9, 3.696934138344844*^9}},
 FormatType->"TextForm"],

Cell[TextData[StyleBox["Pre-Laboratory Questions", "Chapter"]], "Text",
 CellChangeTimes->{{3.696270400772377*^9, 3.69627042694809*^9}}],

Cell["1. What are the two main components of detection efficiency?", "Text",
 CellChangeTimes->{{3.696270428696796*^9, 3.696270440445858*^9}, {
  3.6962706061966*^9, 3.696270606346489*^9}}],

Cell["\<\
The two main components are geometric and intrinsic efficiency. Intrinsic \
efficiency is broken down into three sub-components: the density and size of \
detector material, the type and energy of the radiation, and the electronics \
in the detector system (Tsoulfanidis 259). Geometric efficiency has to do \
with the solid angle presented by the detector.\
\>", "Text",
 CellChangeTimes->{{3.696270948806203*^9, 3.696270978494952*^9}, {
  3.696271018924317*^9, 3.696271094110965*^9}}],

Cell["\<\
2. Using the NIST database, determine the linear and mass attenuation \
coefficient of air for the primary gamma from Cs-137 and Co-60.\
\>", "Text",
 CellChangeTimes->{{3.696270444746159*^9, 3.69627047870824*^9}, {
  3.696270609335678*^9, 3.69627060947366*^9}}],

Cell["\<\
Primary gamma for Cs-137 is 661.657 keV, primary gammas for Co-60 \
(co-emitted) are 1173.237 keV and 1332.501 keV.\
\>", "Text",
 CellChangeTimes->{{3.696271217254751*^9, 3.6962712242644033`*^9}, {
  3.6962712677686377`*^9, 3.6962713530820303`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"Nuclide", 
    RowBox[{"Energy", " ", 
     RowBox[{"(", "keV", ")"}]}], 
    RowBox[{
     RowBox[{"Linear", " ", "Attenuation", " ", "Coefficient"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      SuperscriptBox["cm", 
       RowBox[{"-", "1"}]], ")"}]}], 
    RowBox[{
     RowBox[{"Mass", " ", "Attenuation", " ", "Coefficient"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["cm", "2"], "/", "g"}], ")"}]}]},
   {
    RowBox[{"Cs", "-", "137"}], "661.657", 
    RowBox[{
     RowBox[{"9.49690121", "e"}], "-", "05"}], "0.0775257"},
   {
    RowBox[{"Co", "-", "60"}], "1173.237", 
    RowBox[{
     RowBox[{"7.21896407", "e"}], "-", "05"}], "0.05893032"},
   {"\[Placeholder]", "1332.501", 
    RowBox[{
     RowBox[{"6.75959649", "e"}], "-", "05"}], "0.05518038"}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]], "Input",
 CellChangeTimes->{{3.69627186963418*^9, 3.696272031545992*^9}, {
  3.6962721009562674`*^9, 3.696272117063834*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Nuclide", ",", 
     RowBox[{"Energy", " ", "keV"}], ",", 
     FractionBox[
      RowBox[{"Attenuation", " ", "Coefficient", " ", "Linear"}], "cm"], ",", 
     FractionBox[
      RowBox[{"Attenuation", " ", 
       SuperscriptBox["cm", "2"], " ", "Coefficient", " ", "Mass"}], "g"]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "137"}], "+", "Cs"}], ",", "661.657`", ",", 
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"9.49690121`", " ", "e"}]}], ",", "0.0775257`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "60"}], "+", "Co"}], ",", "1173.237`", ",", 
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"7.21896407`", " ", "e"}]}], ",", "0.05893032`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Placeholder]", ",", "1332.501`", ",", 
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"6.75959649`", " ", "e"}]}], ",", "0.05518038`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6969025330944185`*^9}]
}, Open  ]],

Cell["\<\
3. Using the NNDC database, find the emission probability of energetic \
photons (x-rays and gamma-rays) above 30 keV for Cs-137 and Co-60.\
\>", "Text",
 CellChangeTimes->{{3.696270481483925*^9, 3.6962705188173113`*^9}, {
  3.696270612053574*^9, 3.696270612193803*^9}}],

Cell["Cs - 137", "Input",
 CellChangeTimes->{{3.696272212699875*^9, 3.696272215663053*^9}, 
   3.69690446399664*^9, 3.696938269036252*^9},
 FormatType->"TextForm"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {
    RowBox[{"Energy", " ", 
     RowBox[{"(", "keV", ")"}]}], 
    RowBox[{"Intensity", " ", 
     RowBox[{"(", "%", ")"}]}]},
   {"31.817", "1.99"},
   {"32.194", "3.64"},
   {"36.304", "0.348"},
   {"36.378", "0.672"},
   {"37.255", "0.213"},
   {"283.5", 
    RowBox[{
     RowBox[{"5.8", "e"}], "-", "4"}]},
   {"661.657", "85.10"}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]], "Input",
 CellChangeTimes->{{3.696272209256776*^9, 3.696272317001498*^9}, {
  3.6962723832473097`*^9, 3.696272438333338*^9}, {3.696938280891766*^9, 
  3.696938284361668*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Energy", " ", "keV"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"86.36`", " ", "Intensity"}], ",", 
         RowBox[{"5.533333333333333`", " ", "Intensity"}]}], "}"}], ",", 
       RowBox[{"Intensity", " ", 
        RowBox[{"ErrorBar", "[", 
         RowBox[{"5.`", ",", "5.`"}], "]"}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31.817`", ",", "1.99`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32.194`", ",", "3.64`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36.304`", ",", "0.348`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36.378`", ",", "0.672`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37.255`", ",", "0.213`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"283.5`", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      RowBox[{"5.8`", " ", "e"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"661.657`", ",", "85.1`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6969025331289425`*^9, 3.696938285490655*^9}]
}, Open  ]],

Cell["Co-60", "Input",
 CellChangeTimes->{{3.696938290506152*^9, 3.6969382987892523`*^9}},
 FormatType->"TextForm"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"Energy", " ", 
     RowBox[{"(", "keV", ")"}]}], 
    RowBox[{"Intensity", " ", 
     RowBox[{"(", "%", ")"}]}]},
   {"347.14", "0.0075"},
   {"826.10", "0.0076"},
   {"1173.228", "99.85"},
   {"1332.492", "99.9826"},
   {"2158.57", "0.00120"},
   {"2505.692", 
    RowBox[{
     RowBox[{"2.0", "e"}], "-", "6"}]}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]], "Input",
 CellChangeTimes->{{3.696938306086193*^9, 3.6969383070611753`*^9}}],

Cell["\<\
4. In the rule of thumb described below, justify this assumption based upon \
angle and curvature arguments and estimate the uncertainty in the assumed \
projected detector area for a point source.\
\>", "Text",
 CellChangeTimes->{{3.6962705209532948`*^9, 3.696270562392481*^9}, {
  3.6962706144955683`*^9, 3.696270614600636*^9}}],

Cell[TextData[{
 "At this distance (~ 3 ",
 Cell[BoxData[
  FormBox[
   SqrtBox["A"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "), the error in the solid angle is approximately 1%. Any greater distance \
will reduce this error even further. Therefore we can ignore the specific \
geometry of the area source and treat the source as a point."
}], "Text",
 CellChangeTimes->{{3.696272746373468*^9, 3.696272834798221*^9}}],

Cell[TextData[StyleBox["In-Lab", "Chapter"]], "Text",
 CellChangeTimes->{{3.696270643164023*^9, 3.6962706442323103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BackgroundFileName", "=", "\"\<background.tsv\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BackgroundCounts", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "BackgroundFileName"}], 
      "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"12", ";;"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "3"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"BackgroundTime", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "BackgroundFileName"}], 
      "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"12", ";;"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "4"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"BackgroundCountRate", "=", 
  RowBox[{"BackgroundCounts", "/", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "BackgroundFileName"}],
        "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"12", ";;"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "4"}], "]"}], "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.696612674106126*^9, 3.696612685529052*^9}, {
  3.696612732545335*^9, 3.6966127865832767`*^9}, {3.696612818294446*^9, 
  3.696612821955723*^9}, {3.69661287812188*^9, 3.6966129596374702`*^9}, {
  3.696873665178795*^9, 3.696873672922526*^9}}],

Cell[BoxData["171"], "Output",
 CellChangeTimes->{
  3.696612791659237*^9, 3.6966128227282476`*^9, {3.696612948545814*^9, 
   3.696612960350782*^9}, 3.6968713212656403`*^9, 3.696873674875453*^9, 
   3.6969025333941307`*^9, 3.696937338141403*^9}],

Cell[BoxData["300.`"], "Output",
 CellChangeTimes->{
  3.696612791659237*^9, 3.6966128227282476`*^9, {3.696612948545814*^9, 
   3.696612960350782*^9}, 3.6968713212656403`*^9, 3.696873674875453*^9, 
   3.6969025333941307`*^9, 3.696937338195356*^9}],

Cell[BoxData["0.5700000000000001`"], "Output",
 CellChangeTimes->{
  3.696612791659237*^9, 3.6966128227282476`*^9, {3.696612948545814*^9, 
   3.696612960350782*^9}, 3.6968713212656403`*^9, 3.696873674875453*^9, 
   3.6969025333941307`*^9, 3.696937338253902*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BackgroundCountRateError", "=", 
  RowBox[{
   SqrtBox["BackgroundCounts"], "/", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "BackgroundFileName"}],
        "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"12", ";;"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "4"}], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.696612979059266*^9, 3.696612983239688*^9}, {
  3.6966131670093193`*^9, 3.696613195590046*^9}}],

Cell[BoxData["0.04358898943540674`"], "Output",
 CellChangeTimes->{3.696613196880887*^9, 3.696871323777091*^9, 
  3.696902533526725*^9, 3.696937343511935*^9}]
}, Open  ]],

Cell["The Background count rate is 0.57\[PlusMinus]0.04 cps", "Text",
 CellChangeTimes->{{3.696613200519305*^9, 3.6966132253790903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "BackgroundFileName"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6966128259537153`*^9, 3.696612866866949*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Description\"\>", ",", "\<\"\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Number of Runs\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Preset Time\"\>", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Preset Counts\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pause Time\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Alarm Level\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"High Voltage\"\>", ",", "900"}], "}"}], ",", 
   RowBox[{"{", "\<\"\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Run\"\>", ",", "\<\"High\"\>", ",", "\<\"\"\>", 
     ",", "\<\"Elapsed\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Number\"\>", ",", "\<\"Voltage\"\>", ",", "\<\"Counts\"\>", 
     ",", "\<\"Time\"\>", ",", "\<\"Date/Time\"\>", ",", "\<\"Notes\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", "\<\"\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "900", ",", "35", ",", "60.`", 
     ",", "\<\"02/16/2017 06:06:28 PM\"\>", ",", "\<\"\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "900", ",", "25", ",", "60.`", 
     ",", "\<\"02/16/2017 06:07:29 PM\"\>", ",", "\<\"\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "900", ",", "47", ",", "60.`", 
     ",", "\<\"02/16/2017 06:08:30 PM\"\>", ",", "\<\"\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "900", ",", "29", ",", "60.`", 
     ",", "\<\"02/16/2017 06:09:31 PM\"\>", ",", "\<\"\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "900", ",", "35", ",", "60.`", 
     ",", "\<\"02/16/2017 06:10:32 PM\"\>", ",", "\<\"\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.69661286716464*^9, 3.696871331908188*^9, 
  3.696902533600277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Point Source", "Subchapter",
 CellChangeTimes->{{3.696612315366952*^9, 3.696612316568308*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PartACsDetectorHeight", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"1", "/", "16"}]}], ",", " ", 
      RowBox[{"3", "+", 
       RowBox[{"1", "/", "16"}]}], ",", " ", 
      RowBox[{"6", "+", 
       RowBox[{"1", "/", "16"}]}], ",", " ", 
      RowBox[{"9", "+", 
       RowBox[{"1", "/", "16"}]}], ",", " ", 
      RowBox[{"12", "+", 
       RowBox[{"1", "/", "16"}]}]}], "}"}], " ", "*", " ", "2.54"}]}], " ", 
  RowBox[{"(*", " ", "centimeters", " ", "*)"}], ";"}]], "Input",
 CellChangeTimes->{{3.696612321721044*^9, 3.696612397458394*^9}, {
  3.696612489945751*^9, 3.6966124914694157`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PartACsRawCounts", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "17612", ",", " ", "4548", ",", " ", "1357", ",", " ", "746", ",", " ", 
     "501"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartACsCountTimes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "190.8", ",", " ", "200", ",", " ", "200", ",", " ", "200", ",", " ", 
     "200"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.696612407826653*^9, 3.696612497913591*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PartACoDetectorHeight", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"12", "+", 
        RowBox[{"1", "/", "16"}]}], ",", " ", 
       RowBox[{"9", "+", 
        RowBox[{"1", "/", "8"}]}], ",", 
       RowBox[{"6", "+", 
        RowBox[{"1", "/", "16"}]}], ",", " ", 
       RowBox[{"3", "+", 
        RowBox[{"1", "/", "16"}]}], ",", " ", 
       RowBox[{"1", "+", 
        RowBox[{"1", "/", "16"}]}]}], "}"}], "*", "2.54"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartACoRawCounts", "=", 
   RowBox[{"{", 
    RowBox[{
    "426", ",", " ", "661", ",", " ", "1302", ",", " ", "3694", ",", " ", 
     "16014"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartACoCountTimes", "=", 
   RowBox[{"{", 
    RowBox[{
    "200", ",", " ", "200", ",", " ", "200", ",", " ", "200", ",", " ", 
     "200"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.696612518007676*^9, 3.69661260353863*^9}, {
  3.696905099112445*^9, 3.696905099751648*^9}, {3.6969373566611853`*^9, 
  3.696937357703182*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Post-Lab", "Chapter",
 CellChangeTimes->{{3.696864936936837*^9, 3.696864943546801*^9}}],

Cell[CellGroupData[{

Cell["Utility Functions", "Section",
 CellChangeTimes->{{3.696865479690826*^9, 3.696865481889687*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Corrects", " ", "the", " ", "count", " ", "rate", " ", "for", " ", 
    "deadtime"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "=", 
    RowBox[{"262", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"deadtime", " ", "in", " ", "seconds"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DTC", "[", "r_", "]"}], ":=", 
   FractionBox["r", 
    RowBox[{"1", "+", 
     RowBox[{"r", "*", "tau"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DTCError", "[", 
    RowBox[{"v_", ",", "e_"}], "]"}], "=", 
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{
        RowBox[{
         RowBox[{"Derivative", "[", "1", "]"}], "[", "DTC", "]"}], "[", "v", 
        "]"}], "2"], "*", 
      SuperscriptBox["e", "2"]}]], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DoPlot", "[", 
   RowBox[{"xlist_", ",", "ylist_", ",", "xerror_", ",", "yerror_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"ylist", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ErrorBar", "[", 
     RowBox[{
      RowBox[{"xerror", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"yerror", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "xlist", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Radius", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"5", "/", "16."}]}], ")"}], "/", "2"}], ")"}], "*", "2.54", 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Radius", " ", "of", " ", "detector", " ", "in", " ", "cm"}], " ",
     "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.696865501587802*^9, 3.6968655729003477`*^9}, {
   3.696865659838767*^9, 3.696865670926675*^9}, {3.6968657169950037`*^9, 
   3.696865728513576*^9}, {3.696868317689848*^9, 3.696868456110937*^9}, {
   3.6968710054548273`*^9, 3.696871041105064*^9}, {3.69687111942762*^9, 
   3.696871182342681*^9}, {3.696871740397596*^9, 3.6968717558529882`*^9}, {
   3.696872854020426*^9, 3.696872890732403*^9}, {3.696872966647855*^9, 
   3.696872969630373*^9}, {3.696873964304576*^9, 3.696873967689313*^9}, {
   3.696876328514915*^9, 3.69687642306409*^9}, {3.696902738540703*^9, 
   3.696902933040718*^9}, {3.6969031256214547`*^9, 3.69690319566698*^9}, {
   3.696933697054091*^9, 3.696933724366339*^9}, 3.6969337591120358`*^9, {
   3.696933804769178*^9, 3.6969338065756397`*^9}, {3.696933850852436*^9, 
   3.6969339600975842`*^9}, {3.696937378296379*^9, 3.6969373805707903`*^9}, {
   3.6969381096383553`*^9, 3.696938138900888*^9}, {3.6969385084642677`*^9, 
   3.6969385112979593`*^9}, {3.696938625763771*^9, 3.696938682106649*^9}, {
   3.696938755466694*^9, 3.6969387570614653`*^9}, {3.696938869652032*^9, 
   3.696938880819474*^9}, {3.696938941166779*^9, 3.696938993481097*^9}, 
   3.696939063623969*^9, {3.6969559939578133`*^9, 3.6969560429316187`*^9}}],

Cell[BoxData["1.666875`"], "Output",
 CellChangeTimes->{3.6969560464522877`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Deadtime", "=", 
   RowBox[{"262", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696864955547636*^9, 3.696864957907153*^9}, {
  3.696871672650648*^9, 3.696871680593239*^9}, {3.696871779779593*^9, 
  3.696871792311545*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"muCsAir", "=", "0.0000949"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muCoAir", "=", "0.0000723"}], ";"}]}], "Input",
 CellChangeTimes->{{3.696956166070221*^9, 3.696956168813245*^9}, {
  3.696956219388336*^9, 3.696956241451877*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Point Source", "Subchapter",
 CellChangeTimes->{{3.696871297432671*^9, 3.696871300875867*^9}}],

Cell["1. Determine the background count rate.", "Text",
 CellChangeTimes->{{3.69687135833956*^9, 3.696871376022523*^9}}],

Cell["\<\
Performed in the lab section above. The background count rate is 0.57\
\[PlusMinus]0.04 cps.\
\>", "Text",
 CellChangeTimes->{{3.696871397820393*^9, 3.696871417306732*^9}}],

Cell["\<\
2. Make a table for each isotope (i.e., Cs-137 and Co-60) that lists the \
source-detector distance, gross count rate, background corrected, background \
and dead time corrected count rate, and uncertainty in the background and \
dead time corrected count rate. Each data set identified should be a column \
in the dataset.\
\>", "Text",
 CellChangeTimes->{{3.696871420836747*^9, 3.696871511556191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PartACsDetectorHeight", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"from", " ", "in"}], "-", 
    RowBox[{"lab", " ", "above"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartACsRawCounts", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"from", " ", "in"}], "-", 
    RowBox[{"lab", " ", "above"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartACsCountTimes", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"from", " ", "in"}], "-", 
    RowBox[{"lab", " ", "above"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartACsGrossCountRates", " ", "=", " ", 
  RowBox[{
   RowBox[{"PartACsRawCounts", " ", "/", " ", "PartACsCountTimes"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartACsBGCorrectedCountRate", " ", "=", " ", 
  RowBox[{
  "PartACsGrossCountRates", "-", 
   "BackgroundCountRate"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartACsBGDTCorrectedCountRate", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"DTC", "[", 
     RowBox[{"PartACsBGCorrectedCountRate", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "PartACsBGCorrectedCountRate", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartACsBGDTCorrectedRateError", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"DTCError", "[", 
     RowBox[{
      RowBox[{"PartACsBGCorrectedCountRate", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      SqrtBox[
       RowBox[{"PartACsBGCorrectedCountRate", "[", 
        RowBox[{"[", "i", "]"}], "]"}]]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "PartACsBGCorrectedCountRate", "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6968718162716923`*^9, 3.696871827922544*^9}, {
  3.69687187964957*^9, 3.696871901833267*^9}, {3.696871941433416*^9, 
  3.696872066339332*^9}, {3.69687217008113*^9, 3.696872186272275*^9}, {
  3.696872224464326*^9, 3.696872294382327*^9}, {3.696872345407344*^9, 
  3.6968724160641623`*^9}, {3.696872463572509*^9, 3.696872492415781*^9}, {
  3.696872982043003*^9, 3.696873040279346*^9}, {3.696873076993026*^9, 
  3.696873197539122*^9}, {3.6968733907397413`*^9, 3.6968733924786158`*^9}, {
  3.696873951141343*^9, 3.696873953290502*^9}, {3.696902974230949*^9, 
  3.696903059406459*^9}, {3.696939135072194*^9, 3.696939184029264*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.69875`", ",", "7.7787500000000005`", ",", "15.39875`", ",", "23.01875`", 
   ",", "30.63875`"}], "}"}]], "Output",
 CellChangeTimes->{{3.69687197832979*^9, 3.696871984971581*^9}, 
   3.696872058830884*^9, {3.696872259007036*^9, 3.696872295054159*^9}, {
   3.696872396154585*^9, 3.6968724171438637`*^9}, {3.6968731647509727`*^9, 
   3.6968731896493*^9}, 3.696873393561562*^9, 3.696902533734872*^9, {
   3.696903047016637*^9, 3.6969030607619185`*^9}, 3.69693738548279*^9, 
   3.696938725549879*^9, 3.696939097746612*^9, 3.696939187276638*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17612", ",", "4548", ",", "1357", ",", "746", ",", "501"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.69687197832979*^9, 3.696871984971581*^9}, 
   3.696872058830884*^9, {3.696872259007036*^9, 3.696872295054159*^9}, {
   3.696872396154585*^9, 3.6968724171438637`*^9}, {3.6968731647509727`*^9, 
   3.6968731896493*^9}, 3.696873393561562*^9, 3.696902533734872*^9, {
   3.696903047016637*^9, 3.6969030607619185`*^9}, 3.69693738548279*^9, 
   3.696938725549879*^9, 3.696939097746612*^9, 3.696939187283927*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"190.8`", ",", "200", ",", "200", ",", "200", ",", "200"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.69687197832979*^9, 3.696871984971581*^9}, 
   3.696872058830884*^9, {3.696872259007036*^9, 3.696872295054159*^9}, {
   3.696872396154585*^9, 3.6968724171438637`*^9}, {3.6968731647509727`*^9, 
   3.6968731896493*^9}, 3.696873393561562*^9, 3.696902533734872*^9, {
   3.696903047016637*^9, 3.6969030607619185`*^9}, 3.69693738548279*^9, 
   3.696938725549879*^9, 3.696939097746612*^9, 3.696939187289444*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "92.30607966457022`", ",", "22.74`", ",", "6.785`", ",", "3.73`", ",", 
   "2.505`"}], "}"}]], "Output",
 CellChangeTimes->{{3.69687197832979*^9, 3.696871984971581*^9}, 
   3.696872058830884*^9, {3.696872259007036*^9, 3.696872295054159*^9}, {
   3.696872396154585*^9, 3.6968724171438637`*^9}, {3.6968731647509727`*^9, 
   3.6968731896493*^9}, 3.696873393561562*^9, 3.696902533734872*^9, {
   3.696903047016637*^9, 3.6969030607619185`*^9}, 3.69693738548279*^9, 
   3.696938725549879*^9, 3.696939097746612*^9, 3.696939187294989*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "91.73607966457023`", ",", "22.169999999999998`", ",", "6.215`", ",", 
   "3.16`", ",", "1.9349999999999998`"}], "}"}]], "Output",
 CellChangeTimes->{{3.69687197832979*^9, 3.696871984971581*^9}, 
   3.696872058830884*^9, {3.696872259007036*^9, 3.696872295054159*^9}, {
   3.696872396154585*^9, 3.6968724171438637`*^9}, {3.6968731647509727`*^9, 
   3.6968731896493*^9}, 3.696873393561562*^9, 3.696902533734872*^9, {
   3.696903047016637*^9, 3.6969030607619185`*^9}, 3.69693738548279*^9, 
   3.696938725549879*^9, 3.696939097746612*^9, 3.696939187300654*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "89.58296625088241`", ",", "22.041968345188238`", ",", "6.204896381075803`",
    ",", "3.1573859370350097`", ",", "1.93401951012895`"}], "}"}]], "Output",
 CellChangeTimes->{{3.69687197832979*^9, 3.696871984971581*^9}, 
   3.696872058830884*^9, {3.696872259007036*^9, 3.696872295054159*^9}, {
   3.696872396154585*^9, 3.6968724171438637`*^9}, {3.6968731647509727`*^9, 
   3.6968731896493*^9}, 3.696873393561562*^9, 3.696902533734872*^9, {
   3.696903047016637*^9, 3.6969030607619185`*^9}, 3.69693738548279*^9, 
   3.696938725549879*^9, 3.696939097746612*^9, 3.6969391873059883`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.133571065726919`", ",", "4.65427680947699`", ",", "2.484891138303164`", 
   ",", "1.7746990493191208`", ",", "1.3896334122607203`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.69687197832979*^9, 3.696871984971581*^9}, 
   3.696872058830884*^9, {3.696872259007036*^9, 3.696872295054159*^9}, {
   3.696872396154585*^9, 3.6968724171438637`*^9}, {3.6968731647509727`*^9, 
   3.6968731896493*^9}, 3.696873393561562*^9, 3.696902533734872*^9, {
   3.696903047016637*^9, 3.6969030607619185`*^9}, 3.69693738548279*^9, 
   3.696938725549879*^9, 3.696939097746612*^9, 3.6969391873115396`*^9}]
}, Open  ]],

Cell["Cs-137 Table", "Text",
 CellChangeTimes->{{3.6968747463867826`*^9, 3.696874750065702*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PartACsDetectorHeight", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
        RowBox[{"PartACsGrossCountRates", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
        RowBox[{"PartACsBGCorrectedCountRate", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
        RowBox[{"PartACsBGDTCorrectedCountRate", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
        RowBox[{"PartACsBGDTCorrectedRateError", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Distance (cm)\>\"", ",", " ", "\"\<Count Rate (cps)\>\"", ",", 
        " ", "\"\<BKG Corrected (cps)\>\"", ",", " ", 
        "\"\<BKG-\[Tau] Corrected (cps)\>\"", ",", " ", "\"\<Error\>\""}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696874035585134*^9, 3.696874289230641*^9}, {
  3.6969403068972054`*^9, 3.696940325256509*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Distance (cm)\"\>",
       HoldForm], 
      TagBox["\<\"Count Rate (cps)\"\>",
       HoldForm], 
      TagBox["\<\"BKG Corrected (cps)\"\>",
       HoldForm], 
      TagBox["\<\"BKG-\[Tau] Corrected (cps)\"\>",
       HoldForm], 
      TagBox["\<\"Error\"\>",
       HoldForm]},
     {"2.69875`", "92.30607966457022`", "91.73607966457023`", 
      "89.58296625088241`", "9.133571065726919`"},
     {"7.7787500000000005`", "22.74`", "22.169999999999998`", 
      "22.041968345188238`", "4.65427680947699`"},
     {"15.39875`", "6.785`", "6.215`", "6.204896381075803`", 
      "2.484891138303164`"},
     {"23.01875`", "3.73`", "3.16`", "3.1573859370350097`", 
      "1.7746990493191208`"},
     {"30.63875`", "2.505`", "1.9349999999999998`", "1.93401951012895`", 
      "1.3896334122607203`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Distance (cm)", "Count Rate (cps)", "BKG Corrected (cps)", 
       "BKG-\[Tau] Corrected (cps)", "Error"}}]]]], "Output",
 CellChangeTimes->{
  3.6968741843715878`*^9, {3.696874266925394*^9, 3.696874290002618*^9}, 
   3.6969025337894115`*^9, 3.696939190749384*^9, 3.6969403267059317`*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.69694520037367*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PartACoDetectorHeight", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"from", " ", "in"}], "-", 
    RowBox[{"lab", " ", "above"}]}], " ", "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PartACoRawCounts", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"from", " ", "in"}], "-", 
    RowBox[{"lab", " ", "above"}]}], " ", "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PartACoCountTimes", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"from", " ", "in"}], "-", 
    RowBox[{"lab", " ", "above"}]}], " ", "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PartACoGrossCountRates", " ", "=", " ", 
  RowBox[{
   RowBox[{"PartACoRawCounts", " ", "/", " ", "PartACoCountTimes"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartACoBGCorrectedCountRate", " ", "=", " ", 
  RowBox[{
  "PartACoGrossCountRates", "-", 
   "BackgroundCountRate"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartACoBGDTCorrectedCountRate", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"DTC", "[", 
     RowBox[{"PartACoBGCorrectedCountRate", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "PartACoBGCorrectedCountRate", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartACoBGTDCorrectedRateError", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"DTCError", "[", 
     RowBox[{
      RowBox[{"PartACoBGCorrectedCountRate", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      SqrtBox[
       RowBox[{"PartACoBGCorrectedCountRate", "[", 
        RowBox[{"[", "i", "]"}], "]"}]]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "PartACoBGCorrectedCountRate", "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6968744461886187`*^9, 3.6968744752831297`*^9}, {
  3.696905183856567*^9, 3.6969051912522697`*^9}, {3.6969390831365356`*^9, 
  3.696939083391283*^9}, {3.696939784575233*^9, 3.696939866937911*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.13`", ",", "3.305`", ",", "6.51`", ",", "18.47`", ",", "80.07`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6969398676589937`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.5599999999999998`", ",", "2.7350000000000003`", ",", 
   "5.9399999999999995`", ",", "17.9`", ",", "79.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.6969398676644697`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.5593626572947104`", ",", "2.7330415843918727`", ",", 
   "5.930770061169203`", ",", "17.816444438870583`", ",", 
   "77.87788160406885`"}], "}"}]], "Output",
 CellChangeTimes->{3.6969398676698914`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.2479792430497645`", ",", "1.6514159825960248`", ",", 
   "2.4296432264558834`", ",", "4.191433007903678`", ",", 
   "8.556133774263635`"}], "}"}]], "Output",
 CellChangeTimes->{3.696939867675542*^9}]
}, Open  ]],

Cell["Co-60 Table", "Text",
 CellChangeTimes->{{3.696874736814805*^9, 3.696874738953857*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"PartACoDetectorHeight", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "*", "2.54"}], ",", " ", 
        RowBox[{"PartACoGrossCountRates", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
        RowBox[{"PartACoBGCorrectedCountRate", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
        RowBox[{"PartACoBGDTCorrectedCountRate", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
        RowBox[{"PartACoBGTDCorrectedRateError", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Distance (cm)\>\"", ",", " ", "\"\<Count Rate (cps)\>\"", ",", 
        " ", "\"\<BKG Corrected (cps)\>\"", ",", " ", 
        "\"\<BKG-\[Tau] Corrected (cps)\>\"", ",", " ", "\"\<Error\>\""}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696874498447747*^9, 3.696874534530158*^9}, {
  3.696940192940084*^9, 3.6969402694934063`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Distance (cm)\"\>",
       HoldForm], 
      TagBox["\<\"Count Rate (cps)\"\>",
       HoldForm], 
      TagBox["\<\"BKG Corrected (cps)\"\>",
       HoldForm], 
      TagBox["\<\"BKG-\[Tau] Corrected (cps)\"\>",
       HoldForm], 
      TagBox["\<\"Error\"\>",
       HoldForm]},
     {"77.82242500000001`", "2.13`", "1.5599999999999998`", 
      "1.5593626572947104`", "1.2479792430497645`"},
     {"58.870850000000004`", "3.305`", "2.7350000000000003`", 
      "2.7330415843918727`", "1.6514159825960248`"},
     {"39.112825`", "6.51`", "5.9399999999999995`", "5.930770061169203`", 
      "2.4296432264558834`"},
     {"19.758025`", "18.47`", "17.9`", "17.816444438870583`", 
      "4.191433007903678`"},
     {"6.854825`", "80.07`", "79.5`", "77.87788160406885`", 
      "8.556133774263635`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Distance (cm)", "Count Rate (cps)", "BKG Corrected (cps)", 
       "BKG-\[Tau] Corrected (cps)", "Error"}}]]]], "Output",
 CellChangeTimes->{{3.6968745077897253`*^9, 3.6968745348040247`*^9}, 
   3.6969025338325324`*^9, 3.696937392401773*^9, 3.696939088738134*^9, {
   3.696940242103002*^9, 3.696940270061898*^9}}]
}, Open  ]],

Cell["\<\
3. For each source, determine the source energetic photon emission activity \
of each source with uncertainty. Assume that the source strength printed on \
each label is accurate to \[PlusMinus]5%. Include source decay (see born \
date).\
\>", "Text",
 CellChangeTimes->{{3.6968747577106943`*^9, 3.6968748162526417`*^9}}],

Cell["\<\
Cs-137 has a half life of 30.08yr. For each decay, there is a 91.963% chance \
of a photon emission with high enough energy to reach and trigger the \
detector. The source was born with an activity of 10\[Mu]Ci in April, 2011, \
meaning that it is 6*12-2=70 months old.\
\>", "Text",
 CellChangeTimes->{{3.6968749188754168`*^9, 3.6968749705218353`*^9}, {
  3.696875022333804*^9, 3.696875044752368*^9}, {3.696875104024376*^9, 
  3.696875162138255*^9}, {3.696875324124559*^9, 3.6968753767953577`*^9}, {
  3.696877178093865*^9, 3.696877185041821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Activity", "[", 
    RowBox[{"A0_", ",", "halflife_", ",", "time_", ",", "bf_"}], "]"}], ":=", 
   
   RowBox[{"bf", "*", "A0", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], "*", "3.7", "*", 
    SuperscriptBox["10", "10"], "*", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Log", "[", "2", "]"}]}], "/", 
       RowBox[{"(", "halflife", ")"}]}], "*", "time"}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pacsa", "=", 
  RowBox[{"Activity", "[", 
   RowBox[{"10.", ",", " ", 
    RowBox[{"30.08", "*", "12"}], ",", "70", ",", "0.91963"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ActivityError", "=", 
  RowBox[{
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"D", "[", 
       RowBox[{"Activity", ",", "A0"}], "]"}], "2"], "*", 
     SuperscriptBox["AE", "2"]}]], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A0", "\[Rule]", "10"}], ",", 
     RowBox[{"AE", "\[Rule]", "0.5"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.696875341090296*^9, 3.6968754866208477`*^9}, {
  3.6968765597738543`*^9, 3.696876565069482*^9}, {3.696876626853693*^9, 
  3.6968767901013536`*^9}, {3.696876825005611*^9, 3.696876932058938*^9}, {
  3.696876967626768*^9, 3.696876981425915*^9}, {3.6968771873791637`*^9, 
  3.696877187642145*^9}, {3.6969041352955947`*^9, 3.6969041668103256`*^9}, {
  3.696904339135266*^9, 3.6969043566015167`*^9}, {3.696948434196826*^9, 
  3.6969484362763567`*^9}}],

Cell[BoxData["297465.7157661701`"], "Output",
 CellChangeTimes->{{3.69687543015073*^9, 3.69687546585147*^9}, {
   3.696876537368702*^9, 3.696876565700386*^9}, 3.696876718027553*^9, {
   3.696876905297464*^9, 3.6968769328083677`*^9}, {3.696876968852013*^9, 
   3.696876982276469*^9}, 3.696877188639419*^9, 3.696902533852046*^9, {
   3.6969041553799562`*^9, 3.6969041690078597`*^9}, 3.6969043585649624`*^9, 
   3.696937395942575*^9, 3.6969484372084513`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.69687543015073*^9, 3.69687546585147*^9}, {
   3.696876537368702*^9, 3.696876565700386*^9}, 3.696876718027553*^9, {
   3.696876905297464*^9, 3.6968769328083677`*^9}, {3.696876968852013*^9, 
   3.696876982276469*^9}, 3.696877188639419*^9, 3.696902533852046*^9, {
   3.6969041553799562`*^9, 3.6969041690078597`*^9}, 3.6969043585649624`*^9, 
   3.696937395942575*^9, 3.6969484372163057`*^9}]
}, Open  ]],

Cell[TextData[{
 "The energetic photon activity of the Cs-137 source at the time of the \
experiment was ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2.97", "*", 
     SuperscriptBox["10", "5"]}], "\[PlusMinus]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " photons per second."
}], "Text",
 CellChangeTimes->{{3.696877005093364*^9, 3.6968770607600822`*^9}, {
  3.696904212416991*^9, 3.6969042768079004`*^9}, {3.6969043689268093`*^9, 
  3.696904369514528*^9}}],

Cell["\<\
For the Co-60 sources, since they are all of the same age I will treat them \
as a single 4\[PlusMinus]0.1\[Mu]Ci source. The sources were all born in May \
2012 and half a half life of 5.27 years.\
\>", "Text",
 CellChangeTimes->{{3.696877063869574*^9, 3.696877134634626*^9}, {
  3.6968773938447323`*^9, 3.696877395698138*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pacoa", "=", 
  RowBox[{"Activity", "[", 
   RowBox[{"4.", ",", " ", 
    RowBox[{"5.27", "*", "12"}], ",", " ", 
    RowBox[{"60", "-", "3"}], ",", " ", "1."}], "]"}]}]], "Input",
 CellChangeTimes->{{3.696877139682262*^9, 3.6968771502627*^9}, {
  3.696877207921616*^9, 3.696877211781769*^9}, {3.6969043960817375`*^9, 
  3.696904400510698*^9}, {3.696949003726399*^9, 3.696949004921224*^9}}],

Cell[BoxData["79238.24886092695`"], "Output",
 CellChangeTimes->{3.696877213071999*^9, 3.696902533873062*^9, 
  3.6969042795550685`*^9, 3.6969044013883686`*^9, 3.6969374015967197`*^9, 
  3.69694900608958*^9}]
}, Open  ]],

Cell[TextData[{
 "The Co-60 sources have an energetic photon activity of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"7.92", "*", 
    SuperscriptBox["10", "4"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\[PlusMinus]0.05 \[Mu]Ci"
}], "Text",
 CellChangeTimes->{{3.6968773223668623`*^9, 3.696877335459059*^9}, {
  3.696877373059376*^9, 3.696877388324048*^9}, {3.696904285878009*^9, 
  3.696904310914956*^9}}],

Cell["\<\
4. Using equations 5 and 6, create a function that can be plotted with data \
in Mathematica\
\>", "Text",
 CellChangeTimes->{{3.696877411295075*^9, 3.6968774311972017`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eq5", "[", 
   RowBox[{
   "Act_", ",", "\[Gamma]_", ",", "\[Epsilon]_", ",", "A_", ",", "r_", ",", 
    "\[Mu]_"}], "]"}], ":=", 
  RowBox[{"Act", "*", "\[Gamma]", "*", "\[Epsilon]", "*", 
   FractionBox["A", 
    RowBox[{"4", " ", "\[Pi]", " ", 
     SuperscriptBox["r", "2"]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[Mu]"}], " ", "r"}]]}]}]], "Input",
 CellChangeTimes->{{3.696877442750441*^9, 3.696877512640229*^9}, {
  3.696877574948101*^9, 3.696877656169846*^9}, {3.6968777128778143`*^9, 
  3.696877716313572*^9}, {3.6969484446285458`*^9, 3.696948447867363*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eq6", "[", 
   RowBox[{"Act_", ",", "\[Gamma]_", ",", "d_", ",", "r_", ",", "\[Mu]_"}], 
   "]"}], ":=", 
  RowBox[{"Act", "*", "\[Gamma]", "*", 
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"Cos", "[", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"r", "/", "d"}], "]"}], "]"}]}], "2"], "*", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[Mu]"}], " ", "r"}]]}]}]], "Input",
 CellChangeTimes->{{3.696877721379456*^9, 3.69687784278658*^9}, {
  3.696948345226132*^9, 3.696948351193109*^9}, {3.696948494099435*^9, 
  3.696948518389987*^9}, {3.696948610264696*^9, 3.696948611304413*^9}}],

Cell["\<\
5. Plot the properly corrected count rate (with error bars) vs. distance for \
each isotope (Cs-137 and Co-60) on different plots (two). Interpolate between \
the data points with an interpolation order of 2. Also include the \
theoretical detection efficiency using equations 5 and 6. Include a legend on \
each of the two plots to identify which curve is which (and also the dataset).\
\>", "Text",
 CellChangeTimes->{{3.696877949863064*^9, 3.696878040938612*^9}, {
  3.6968781097503757`*^9, 3.696878205763784*^9}, {3.696878259706962*^9, 
  3.696878266874601*^9}, {3.696878318699642*^9, 3.696878328793358*^9}}],

Cell[TextData[StyleBox["To make the theoretical detection efficiency viewable \
on the same plot, students should scale by the corresponding source energetic \
photon emission activity and estimate a constant intrinsic detection \
efficiency to get the two on the same order of magnitude (go with whatever \
value works).", "SubsubitemNumbered"]], "Item",
 CellChangeTimes->{3.696878320811901*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"partacslpd", "=", 
   RowBox[{
    RowBox[{"Multicolumn", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
       "PartACsDetectorHeight", ",", "PartACsBGDTCorrectedCountRate"}], "]"}],
       ",", "2"}], "]"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PACSEB", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ErrorBar", "[", 
      RowBox[{
       RowBox[{"1", "/", "32."}], ",", 
       RowBox[{"PartACsBGDTCorrectedRateError", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "PartACsBGDTCorrectedRateError", "]"}]}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartACsDataPlot", "=", 
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"partacslpd", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"partacslpd", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"PACSEB", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "partacslpd", "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Distance (cm)\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Count Rate (cps)\>\"", ",", "20"}], "]"}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Cs-137 Point Source\>\"", ",", "24"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1.1", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Max", "[", "PartACsDetectorHeight", "]"}], "+", 
             RowBox[{"1", "/", "32."}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"1.1", "*", 
            RowBox[{"Max", "[", "PartACsBGDTCorrectedCountRate", "]"}]}], "+", 
           RowBox[{"Max", "[", "PartACsBGDTCorrectedRateError", "]"}]}]}], 
         "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Measured\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"partacsinterp", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"partacslpd", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacsinterpplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"partacsinterp", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "35"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "}"}]}], ",", 
     
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Interpolation of Data\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacse5", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Eq5", "[", 
      RowBox[{"pacsa", ",", "0.005", ",", "1", ",", 
       RowBox[{"Pi", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2.54", "*", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"5", "/", "16"}]}], ")"}]}], ")"}], "*", "0.5"}], 
          ")"}], "2"]}], ",", "r", ",", "0.0000949"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "35"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", "Dotted"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Theoretical Point Source\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacse6", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Eq6", "[", 
      RowBox[{"pacsa", ",", "0.005", ",", "d", ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2.54", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"5", "/", "16"}]}], ")"}]}], ")"}], "*", "0.5"}], ")"}], 
       ",", "0.0000949"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "35"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "DotDashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Close-in Point Source\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "PartACsDataPlot", ",", "pacsinterpplot", ",", "pacse5", ",", "pacse6"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6969047334889655`*^9, 3.6969048684787865`*^9}, 
   3.6969049010705814`*^9, {3.696945281889028*^9, 3.696945370994219*^9}, {
   3.696945430110833*^9, 3.696945462261464*^9}, {3.6969455015880413`*^9, 
   3.696945622733638*^9}, {3.6969456580671597`*^9, 3.6969456614970913`*^9}, {
   3.696945778588831*^9, 3.696945780611858*^9}, {3.6969458119523087`*^9, 
   3.69694589298217*^9}, {3.696945932885872*^9, 3.696945980273067*^9}, {
   3.696946671147956*^9, 3.6969467193703737`*^9}, {3.696946828806797*^9, 
   3.696946946012329*^9}, 3.6969472912658863`*^9, {3.69694734836973*^9, 
   3.696947368219417*^9}, {3.6969474373585577`*^9, 3.696947466360963*^9}, {
   3.696947568336018*^9, 3.696947822947116*^9}, 3.696947916910675*^9, {
   3.696948360474266*^9, 3.696948377525757*^9}, {3.6969484565606613`*^9, 
   3.696948462512003*^9}, {3.696948535075074*^9, 3.696948790862661*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{2.69875, 89.58296625088241}, {7.7787500000000005`, 
         22.041968345188238`}, {15.39875, 6.204896381075803}, {23.01875, 
         3.1573859370350097`}, {30.63875, 
         1.93401951012895}}], {{
          LineBox[{{2.73, 89.58296625088241}, {2.6675, 89.58296625088241}}], 
          LineBox[{
           Offset[{0, 1.5}, {2.73, 89.58296625088241}], 
            Offset[{0, -1.5}, {2.73, 89.58296625088241}]}], 
          LineBox[{
           Offset[{0, 1.5}, {2.6675, 89.58296625088241}], 
            Offset[{0, -1.5}, {2.6675, 89.58296625088241}]}], 
          LineBox[{{2.69875, 98.71653731660933}, {2.69875, 
           80.44939518515548}}], 
          LineBox[{
           Offset[{1.5, 0}, {2.69875, 98.71653731660933}], 
            Offset[{-1.5, 0}, {2.69875, 98.71653731660933}]}], 
          LineBox[{
           Offset[{1.5, 0}, {2.69875, 80.44939518515548}], 
            Offset[{-1.5, 0}, {2.69875, 80.44939518515548}]}]}, {
          LineBox[{{7.8100000000000005`, 22.041968345188238`}, {
           7.7475000000000005`, 22.041968345188238`}}], 
          LineBox[{
           Offset[{0, 1.5}, {7.8100000000000005`, 22.041968345188238`}], 
            Offset[{0, -1.5}, {7.8100000000000005`, 22.041968345188238`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {7.7475000000000005`, 22.041968345188238`}], 
            Offset[{0, -1.5}, {7.7475000000000005`, 22.041968345188238`}]}], 
          LineBox[{{7.7787500000000005`, 26.696245154665228`}, {
           7.7787500000000005`, 17.387691535711248`}}], 
          LineBox[{
           Offset[{1.5, 0}, {7.7787500000000005`, 26.696245154665228`}], 
            Offset[{-1.5, 0}, {7.7787500000000005`, 26.696245154665228`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {7.7787500000000005`, 17.387691535711248`}], 
            Offset[{-1.5, 0}, {7.7787500000000005`, 
             17.387691535711248`}]}]}, {
          LineBox[{{15.43, 6.204896381075803}, {15.3675, 6.204896381075803}}],
           LineBox[{
           Offset[{0, 1.5}, {15.43, 6.204896381075803}], 
            Offset[{0, -1.5}, {15.43, 6.204896381075803}]}], 
          LineBox[{
           Offset[{0, 1.5}, {15.3675, 6.204896381075803}], 
            Offset[{0, -1.5}, {15.3675, 6.204896381075803}]}], 
          LineBox[{{15.39875, 8.689787519378967}, {15.39875, 
           3.7200052427726384`}}], 
          LineBox[{
           Offset[{1.5, 0}, {15.39875, 8.689787519378967}], 
            Offset[{-1.5, 0}, {15.39875, 8.689787519378967}]}], 
          LineBox[{
           Offset[{1.5, 0}, {15.39875, 3.7200052427726384`}], 
            Offset[{-1.5, 0}, {15.39875, 3.7200052427726384`}]}]}, {
          LineBox[{{23.05, 3.1573859370350097`}, {22.9875, 
           3.1573859370350097`}}], 
          LineBox[{
           Offset[{0, 1.5}, {23.05, 3.1573859370350097`}], 
            Offset[{0, -1.5}, {23.05, 3.1573859370350097`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {22.9875, 3.1573859370350097`}], 
            Offset[{0, -1.5}, {22.9875, 3.1573859370350097`}]}], 
          LineBox[{{23.01875, 4.9320849863541305`}, {23.01875, 
           1.3826868877158889`}}], 
          LineBox[{
           Offset[{1.5, 0}, {23.01875, 4.9320849863541305`}], 
            Offset[{-1.5, 0}, {23.01875, 4.9320849863541305`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {23.01875, 1.3826868877158889`}], 
            Offset[{-1.5, 0}, {23.01875, 1.3826868877158889`}]}]}, {
          LineBox[{{30.67, 1.93401951012895}, {30.6075, 1.93401951012895}}], 
          LineBox[{
           Offset[{0, 1.5}, {30.67, 1.93401951012895}], 
            Offset[{0, -1.5}, {30.67, 1.93401951012895}]}], 
          LineBox[{
           Offset[{0, 1.5}, {30.6075, 1.93401951012895}], 
            Offset[{0, -1.5}, {30.6075, 1.93401951012895}]}], 
          LineBox[{{30.63875, 3.3236529223896705`}, {30.63875, 
           0.5443860978682296}}], 
          LineBox[{
           Offset[{1.5, 0}, {30.63875, 3.3236529223896705`}], 
            Offset[{-1.5, 0}, {30.63875, 3.3236529223896705`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {30.63875, 0.5443860978682296}], 
            Offset[{-1.5, 0}, {30.63875, 
             0.5443860978682296}]}]}}}, {}}, {}, {}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV13k8VN8bB/AxhFK2KGbszFgjS8LM3PuhKFq0oBJ9RSqVpUhZKtu3FNGi
skYS2rRHEdXX1mKrkF0iQlSIpJnf/f01r/dr7j3n3nOf5znPUff03+BNp9Fo
6UI02v9/TY3PTN8Tl4bfkVcSb6vW4UjB/lmnx6VxeudvRuVDR0ySe1ZE/5wP
u655nGTCARUGZsGRPQuwIO5Y0qFAW2T03Fg5kamI6x0uK+vDrbFVgZt6IVkJ
Jo6aKs/COXCRlvl5+6oS9r5Pnf3Lk4MN4l/sKwuU8OhYtxhpz8HKqcTfv8qV
cHxdE1doAQdmHz9v3vxDCWLv98ba3bWCZHLcQqaDMo5sJXI/9Fvi+cK2pKw/
ynAKjZzhe1pAa2Fo4s1tqkgfPTY//uQSxDvRxeJ9VPHGZEB1adASTJw9dXRf
kCqaBfWXf2xbgsq5ab6LTqkibqnWeJLZEuyml6y680gVO5QbZpK6zdD0ix+9
RVQNH14uPx7KMYNiD+Duroa7QedD2mZMUEubFV7jqYY7Y3Obgr6aIEr1VSFv
txrOzIheU24ywaDbeiOVQDV8vxmemnHHBE+bt6t0xapBOdLvs4uXCdxqomY8
HqrBcNa+bwU1xsgqKi/aIaEOu6DaT+O3F8Np7ok1q2TUEfrPMQWhtMUQ97Dv
MV6ojhaH80dVYxcjQKxWQqChDmWN3o/nPBcDLs3bUqzUUfxOt3KjwmJ0j30V
qfVRx6nDp0SPSBpBzUhq/dJqdXC2H5by7zPAh6iGPuVadTyxSXWeX26A2Kbz
oSIf1JGgFTXdlm2A70cUchq61LHs61WPVg8DPH+rPrl3Uh3NwUaX4zr14bHH
LCOLrYGs7J2dZd16uHJty9fZ/2rgIdc50J+mi4ENXj5xpzRwO+UqP65PB4Y0
369zz2ggvXWTWfVrHTx1jfgqlaYBe/GflzMv6OCdVN5X+XsaaJX9FvDaQAf0
0PGv6h0aaOr9Kya9XRs71iYOWi7RBC/8FH3rJxZu/EneU2ylCfamC637XrPw
PT97kAtN8OVF3S8/YCFc+PEguUoT4aTido/jLFwoah+03a6JG9aiOz0WsVCp
oTe0/rQmhul/PNdFakF7snzIp08Tnw876n6nxtnX8rZ8+5Amtkom//Aw0MT9
4g8ZW35oIuN00civhZogInod7f9qIt4+8sS5UQ24zBZ5qCOvBZlCY9PYLA0c
Zy4L71+uhee7JQN9Z2vg7V8H5y4HLcilNcYaU+so273BsHmdFpYWBr1n9Knj
co5nd6WbFgZuWYm5v1DHo0VRy3ODtDB2um8gM0wdveSLud45WrjJLkxSnVSD
nsarPrcbWvg0MTNp3q+GAJGGUqe7WugrYJwJbFbDTHV3wPISLbh0dmxzK1LD
/A20Rs0PWvhiEh08HKYGmx1kRo8wCzn37RNE56gh1m5FcOtsFoJ5Skd7plRR
q+Po+E6KBXx1sqd3qsL12zahl0wW8osbldSvq2J/8FHvK6YsvF4lX9Rmo4qs
2GeLPLxYcFaML1seo4L0eZkLuD4sSBvHHdL1U0HKuQjBQn8W9mHwi/NmFZxL
X9ZQF8qCnF310L+LVBBz91UQeY4F2W/CCTZtyohYctOdmczC6Au6kHcVlfdP
4+0mM1jYm7Bdv+6BMoLLHRXuXGfBSZLMDT2tDJ+PjcUqL1h4fz3EzHC5Mna6
F+ZMV7JQwznsmWCiDM+e5NNNb6n5K5pWmKsrw2146z8JH1k4X/bAwl2ghLW0
Hjp/lIVkx2/3xcqouqUzYt+hwsbOzm2z61YpwfB2nckTLTZyBt1u3yCUoG9y
j3lBj42okafitcZK0OIGfVttzoZhx8W+IQUlLFg3faZkDRsWLrVLYwaZkG1s
C0neyMYF1bcXM7qYkHJ95hm0hY2kbt3b/A9MiO+IMDPwpsazn0VLfs7E9CHR
j2nhbEgWcgjtNCZ+zfQ/PxTFRjzPcvPRc0yMRb66vjGWjYLii7rKp5gYjosP
k0hio/3y/p/GoUwMSPvt6E9hY1B49GveASb6Ljiu+S+TjTSPt8nee5nozJRV
DbtJ/U/LUypyZ6JVa1xs0z02Ypfn/Fi9iYnm643fTQrZeH1M6KjueibqHyS/
HHzJBrejreSJLRM1FqE3K6vZ2C3Y7O8LJl4/25qUXcuGlaJ5y24OE/9Vqex0
baXuN5V+b27CxIbcFVYNXWyY00kzR0MmumMCJFf2seF6Nn/imh4T/l4pPaWD
bBh/Wr2Qo80E3/rl4yXf2Xj+Qz9FUouJeLWhU7cm2BD9zzZMTZ0JpmD+P5p/
2BByTn0WoMLEjQ6uaSpNG/fzdD0ETCYsSrzFZES1wSwe83yryERVakLbCQlt
WCROVTQvZMIlpPAOX1obc7QsTqovYKJ3U3f0wQXauBhy/9Z1OSYCzWdvHmZq
oylx1+KA+UzQ5U0MvNS18WbnJrmDskycGXOltbK1cZgfublIhgnVd9Ef1hlo
o9Wlf8aScsHdW/lVxtrwOxFV1ifNBDexMZxYqg1PmRMiZym/8eWve8TVxjz9
7/5WlAf01v3OXqGNmHnfn5yQYkLz2pj9UXdt0BJzGXMlmUhOsRoyO6kN9ZgR
yZI5TLAPe5XdTNBG6GzuU3vKj1ziz2skaeOEykhc42wm3s3v5EhnaqN68lh2
vzgT8xIi44ceaqNhp2v6hCgTUVHVi7K7tSG7dPBlEZ0J6e0/hBS/aKOmMOKD
DuVMktGUOKQNsjps7iUhJkpm9h498ksbK5IzR31pTEwGS9VtnquDnvGMqFl8
BvbtdQmQstCBddbBtrYpBqaPHsmY4ekg7DEzUZXyyXM5r78u0wFz7LL89kkG
cp/81Cp31MGFLm5axwQD3WKJLYd36cDt36bYkp8MbMypsum5qINVIpHfZIYZ
6Ckc8a9L18HviN+1JkMMBLyRzyjJ1oG0lmP0+kEG4n96TV4s0EFAx9kdsQMM
VIJ2a1WlDuYqH5zd3suAVYeF/KMJHVyuu9/O6GCg+vs/Ntl/dPDy/t8hhXYG
Nomc8E8U0sWaElatXBsDQfqNr3zm6eKSzTwJ0RYGCkL2H1Vh6UJEyWpX7QcG
1Bfc6D/hpAsOXeL6rzcMiDsyn7o+0IV6+skN14oY0Ck5+a6nSBdrJf9eCSxk
wF53anBPqS4W+8jMxWMGTgk3MsNe6YLWorT4/QMG5hYlHEnr0sVgVmlhTwED
0up063YJPXxtWFSRm8OAwthAlfsOPQQVPf34MoEBC49N3X0+eijGqnCn0wxs
qamY8vXXw4N74Va9cQyk5mXrHg3Vw6M1L0X5sQwoubnFXT6jB2G/j52MaAbU
KurWdpXo4T/Hxad/BzOge+lxo4e8PlouJfQ4uDPgYKm54h+mPhTt6HLhWxnY
05ZY5K6uj7/m5yRubmHghqpPmusifeR3i66huzBgkM/c7mSrj5MblyleXMuA
4ZOI4RUH9RFSKN68gWTAtM1B2KhRH8zDFf1qqgzwVLsW/00ywM520W1SHxUh
t4N1vyvVAJ+WfFZ71qiIwfy9pi+zDJA3d1/p7veKSDaZWnLilgEUTaJPPqlV
xLitDEeG6lsi3ar+sa5QxK19y2xZYwYIMsqbO3hPEUpP87asWb8I/TXluzJP
KuKPU0BUxjxDTA4f0kw1UcSOsb8jjPmGmJFKKho1UkTt2bityQqGqKtI9V+2
SBFZtblm5zUNMfB117I+bUUsX9nxJdbSEO3zhaJklRURz3FYFeRtiHcjhlvn
i1HzaWjJrXpmiKnnh48UtCiAGG2+NrXPCIZN5ZEOIQoo3rFTZCJoMbx/ffTN
SFgIRZG3Km/Yxijy6C18e34BVk97m2k2GkM0VLXJKEIeIWcqfezOmSBv8dOg
AVM5DGyWFa+yMcUGl+ejxZ2yWP9Cq1KWbobVF5u3RPnKIDFi77HuZ2Yoy3ps
OsSUhtSBjCsSvksgc7Z+V9zIPJwUvvhZSN8cgyx+ysYcCdhVhSQ4t5tDY/9s
/2sFs/Hx01kz/VNLUbJSvj72mxi80gOm39hZoOaDbIOwuSiMT1rpvv5lgd5L
RffrqkUwJf/m0PlHlqCHCNl99BUGvdHO6OkuK/xVqOtu2ESH6wWZd0F7rJCm
JT/Wv5GOe87tQUa+VthnRb9LW0eHR9P+pzkHrJAV06BrtZKO0uZ028QjVth8
frlyjQUdoa0/t+44bwWZ1HDhQAYdP7sux0qWWSF5tVlNaZcQPg3++uRJnRNE
7F46uxwQQlEF7m1W5CBWp7W63k8IZ7JORaxV4uBYrsY/a/cKgXBRUbXS4KA2
yHZiww4hpL+wdZMx5OCj67uqSBchbEpOaiqz5aB49WzRYI4QamxN3igd5KCg
auhLkZgQctTCU2UPc/BUYeHzSyJCCP9T4SMexoHFrMCSECEh6N3bIj4ewcHF
uyUqK/7QEKsUafsmnoPSdZdOio3SsGysriwkh4POxz5TKs00PMnyfdj0njr3
MKKt8q/T4Kqz9XdKEwefrKaUGHk0TN9ZSbi3cBBtJVmckEODVZlm9edODrqa
lPQiMmko6Whp+/6Vg7Ho8vfRF2h4zrATlqBxkXaH5ywZRUNlksoG0oCLntXN
0ovdadipNPcS3YiL0LW7d/12pUEs53dbhTEXDKPUkIrNNKx88MF79VIu9p/u
rvd2ouF1w6mQLTZcRJROOlStoqFGcjIrcDN1/U9H33kcGj7E1o3mxXBhm5m3
J5dJw7ged3vuCS42RFnyMhVpkKvJf5dziouo6162aQtpcJaJenTlDBdO5RG/
0ufT0JRiFpaWzkWRfmdbpQQNLTdSRBMfcjEQtWqnz28BOb1a9PDpQi5yaw6V
vpgQkIzRA1/jnnJxJ+tDpNpPAelquvpt7HMusrpUHX4MCsj2Yv7ZqLdcTD+f
6e5qF5Cdb72Ug3u5uCpTr/3jhYDk+9UnBPVzIfpJxPRuqYBUleHRAqkTwwOL
PdcPFgtID+cFn/2/czESUdk8/5GA/NRRne8zw0V3UIVVRr6A7B1ZZOYux8Oj
wXbF3jMC8qv0lMPy5TywJA9wbXYKyB0x68vNVvBgs1ROqtVLQHZP3uCxHHjI
Fj8tc3i7gPzY6b5YdB0PWjn03Eo3AVl56z/56q082JX+nVuwUUDmrEzsXhXI
Q+9R0/fXbASkWsnAFm4wD2oGuJoFAZlmZPPeIISHy5GaV68QAvLcgomKecd4
8GT5mTy2EpCRva43607xwHecn6hrKiC3RbCDN2bzcNE4A5YsAdk6dmx02TUe
fnrKSV7SFJDOu1p2m+XzkMj1lPijLiBXr43fKl/Aw5mByAuNKgKSo/QTzU94
uKHZ0P9BQUA+Tlz1tKqEB7lLf013LBSQJsLXTIvKeNT+Sbv7W15A6g1uYqdU
8NDdc2rp0vkCUqHomcTWBh6s2HdiZuYJyCT9hf+u+sDDw7Yzjs/mCkjpzAA+
p5mHAEt7hxgJASl2XPOHUgcPd7/x6rRmC8hfG082dQ5Q62O5dOFdEQF5oKrH
sW6Ih/rFtR7ZwgLymxX3VdkID2n1nNZUOvV91EeLs8Z5+C2e5naZJiDfjzpd
8aQRqHPzyRyd4ZMK0hvOqAkT6DiRRtOg7LbY8VjnLAIWimLlW/7wyS8B9u6u
EgRa/E7tb/nNJ/XO2q1WkCSgYpq9VZ2y/71lnCZpAvfdx/L8pvjk1A+e4oYF
BF72We9SnOSTPFmOuLQiAWIZ2Rr8i09GmVhM1jAJiIoF32mZ4JMSgSaN9uoE
Yl4kRtwZ55Mq4+yz1gYEWPSgZ2k/+aSXnFaEwJCA9DmujRblfDN1/2fGBOxi
Cd37P/ik8UHmGsulBLLyRpQ7v/PJ4AsK3ElLAuX16frhlJ8+ktd/xCVg4hGT
pkp5+S+p2cY2BP7cE1wJHuWTsQvmTY0sJ+AUdN5Cj3KN+Zz+WysITKd7GH8e
4ZOym8Sa9jgQGNXfFX+FssshkQqdNQSM1fPsvSmnXRJ6+MWRwPNwNR9Dyt2F
/OycDQQuE+8HZ77xSa2Pf856OhN4tbOstp6yz9RUhNpmAssmeuVuUC5Q+OXf
6UpgzuCyZ7GUf1qMbUt3J6Bq2161j/LSLd/XuHoQiBQtMHOhHB7yjavgRb2P
4RNhW8rPUwb1m7wJGJX8NbOkPOtpPyNpN4Gwu2HVJpQdWntnb9hLQF7CtNSY
csL0pykpPwJ/32guMKf8ntHVXxNAwHRsTT1JWYHT3hQXSOBxxL3htZTdtrZU
2AcTOB60dq8X5SthTQ/FQgjk1mqtPkL5S9r7qxVhBOYnmiWmU9YrqT8XfZTA
20dHzF5Q9m+vibSOJPDehsYdovxw5nWAIJqAvnnJNQa1Xr+Vqv95dpxAbeK9
/Y6UCV7F2rCTBMocuzNPUo5yf8mzjCcgOLhy8SvKVUfKDCYTCMTRBzUkqe81
93IJ89FZArsmyg9tpryu9MmcwCQCCWtbDPMpt/IfDIykENR5q+C/TdT3V1G9
13wrnUBrmd+VQspeZEHlnkwCnPu7PylR8TR8LD/nSw6BnlfisZP/j6+sa+dz
8qjnHS0Y2UfFX/Dz7CjPG1R8hSYU9lMW0DI8Ou9Q45X/9v82xifLOYrhzfcJ
GD7oc4qh4jk2+MKl+kdUPF1ZkqBOxbvs8Onal8UEaJFCfD8qH5rYcwaLS6n5
9x8xU6XyJW378VmPXlDxtt29rJGyVvNRbl4VlU/L7d85U/k2IPNnU9Zr6vnM
nV1Vp/nk7dWHAlNqCBzRrTAfpWz+0v9G3HsCytINw1eofF5520MhoIuA3Ofk
NRup/J870G7q00NApKX8sKOQgGzQ2OLo2UdgT53T1HqqXrgmrz/uNEQg71nW
uA9VX3yjbcYtJgm8yxz41CdO1dctWvVCUiT+hlokzqPqmUtS1tC0DImYwzk0
fzkByaxTEhuXI/FvcFBlE1X/cpbLE18YJH4HwvEJVS8LjURvvWaTOBMU6/ya
qqftswZOnCcox380UzIQkFnYcTXemsSDszHDPYsEpHdYd+m/y0msu5Q0dcdI
QI58/zhxyIHE1NXuee5UPae1v/Jyc6HGf6mzSJgjIFn3b5IsPxJ1C0OIY6sE
5P2UN/VDASR65K+pHF8jIBE5tP1+IAnaIDv6nKOAdFunH0OGkAiQM2gppvab
cyM3qrfEkJjZz32yjtqP+Ho31iekkmh0PGgf7Scg42Vf9zhlUC7g+/UECEjF
6a+BzCwS3Z87FFYECkizV7oX86+R0KrP+K12WEDu3XW99eVdEq73NEcXRFH7
3dV8r8lKEgkXV9yQuCQgd8ZVjz97ReKwi6H8fykCcuzAwL8xb0nsG94jEpEu
ICVtdPJl3pE4ldrnPydbQNp25w3rd5DwFXSHbr9NvZ9S3kGPMRKTQ6MeChXU
/vn63X+9UoDcOj/f61MC0kp7i7S1DHDzgYYxbUZA3onucsuQBb4MLbZxEwjI
ZO7whLM8oOS7iC0rTMOeglk6VQxAb9MB2vRsGiTPWcRfZwFg7J5YqUCDy5bL
Tn4cwMZN+NNnc6ofeqR15TUXEPsYqtBrQQMpe/MbmwCUicxfX6xo0HlTeLyL
ut3y1UjuOEH1b9yGonV2gGFbfrPRChouq4kom64HpEZiQ1hUv9XX79M3uRPI
r5sqnRdOQ2qDUfX+3cCatXOuXjhKw9riiRtDPoDj8J9rapE0PE6IDOjaB/gd
PyaO41R/uSTlT+UBgGkqjpwzNBhEV8tcPErN56caQs+l4YCKNmF2EdDa6z1/
wXsaaM69FwMqgOAIx4EUcyEoyoebNVQCDkJfS+5aCsGkcf4742qgKE/J/jVX
CDucl80bew3s8t4QO2uZEKqds6MP1gMSOZNX0h2FkOjiERDaBuw11LVZ4yME
lc3t9jE/gLhDOuZFl4XA2/ph5pKyNZzaLg0/lKGDLfsqXV3VGsW/c8UG5emQ
fPWMe1PNGqX9Mf9qUP19p3leeKmmNbJNbl/P0KDjqGzoTK+uNTqi75wvMaXj
+SvVGWNzaxjKhY2ku9BhY7H3z5u11lAbXlTWf5kOvdF/0pzXWWM3f4HZyat0
yOY6cbrWW2NNd62EYT4dPfOJsJ9O1piSvfk58h4d0aPSfxS2WqPcVH7JhnI6
ynMfT3vvsoaR191tFwbpuOV+M3V0tzV2+R+n+Y7SkSSXZRWyxxpYpT9r5Tgd
3lEnQ+N9rdGw/5O5OJ8O0W1u0/cDrbEjVMC5JyOMEbn1qdyD1rggvHr86gJh
NL2xtaoMtsZOt11SqUxh5FoahbaEWKMvfI7fGZYwEr5rMrzCrHF++bl7Z/SE
EZyn8HQ43Bqf2gY2JRkJY9u2ea7BR61RYyO5Pc1MGCvk6dOCY9ZwD6HXXLMU
xv8AD/Bxcw==
          "]]},
        Annotation[#, "Charting`Private`Tag$39150#1"]& ]}, {}, {}}, {{{}, {}, 
       
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[1.6],
          Opacity[1.], Dashing[{0, Small}], LineBox[CompressedData["
1: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
YSvFN7sYRaLAc9xgsm+I+B8qMccH
          "]]},
        Annotation[#, "Charting`Private`Tag$39200#1"]& ]}, {}, {}}, {{{}, {}, 
       
       TagBox[
        {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1:eJwVlnk01IsDxWVNqWEYuzFjmLEzGfvyvZMtVEpa6PFE1BTl4ekR2YUWKi+8
dOSFiqhkCZWUCJVosVS2R8WIkhDh1++Pe+655/PvPedeuu9hN39BAQGBq7/0
f/9Gn2TIq68FLXn4dN8LVwS4iGzYwiQh/k0by1BgM6Yslc8HWJGwbXaTQUvv
JsToGg1HuZGgbaMhV1i5Cdlr9sReO0bCpOALLUbgJrS1370j2EVCsQdB13y3
EfLatZm9tpK4d/BGYnezC6LL/hA5NS0JL8/KApNWJzzMiOhLFJCCcxOLl3fN
CStD46qjJKTA1Xt40TbVCZmmZ3iB6lIwKafoWzk54fqDm89c3KXg5rxZpb9t
A951Tv69quJXrtc8GvnWERazQcyUUDJ6rAndepoDYnv+XI6JISN8YkC4QNQB
TXXR3UdOkKGxeDS9ctwebrGn0vZdJqM6P4HtVWMPnnjphMNLMh7r59Er3O2R
rTReJWIkDZ9w3asG5+wwSxxwTJiSRpn2xkPCerYo3qcB2yVpmMS5hxnL28I7
fcBMaJUM/pbV3HtcyBaNfTu0E+gyeMjxmz7Zux4Z0bZrErbI4HB5fr5c2npo
1ym/jC+TQRcj+tS3CS68Tdq94w9QoBOrrcJ6Dkh5p+1cH07BtkbJxKW7QGOS
/RbBeArOr7Y/MVkC6Lyu48bnUBDYzq5QSQPmQq+qxz+hQMj8tnKhI3D2VtxY
HFMW3Ucfmx86TeCxLic8bkgWe26GkvaXWSNX7Jj9kc+yoFnrpNWcs0bYULNM
0Jws9n2ONNaPsIZa9u7bu9bKofrhn7qxdtaIFUr4YmAhB3F7D5UH76xg2dtx
oO+MHChLBUXR0la4dfzw75Zcedj5PW4OzbZAim+NPnujPK61vVStj7OAj7XQ
EnOnPNTaV/1gHrTA2m/nc8lB8ngRsD3MxcYCgd73e0az5cGQ3JsyNGIOlvEa
9+wvv7hVPVXNwhwXh4o3fM9TQCezxeHBd1OEsb62dJUo4K2+6+GCAVM4B5q6
1FYrQKR0xeLlNlPMfX+0KaZdAYV+2qen803hLv7eTXxZATExNilvXE0hYUjy
UvFWxOCnM+QjN00QFR36h72yEp6EbrMSTTTGtoc1UyxNJfBvX7krFGIMbTGB
sFUcJfxVbxIl52OM7oyT4e0uSvjkpKkVZ2UMTkHhUY+jSjD/1uPpMcPBeGtX
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

          "]]},
        Annotation[#, "Charting`Private`Tag$39250#1"]& ]}, {}, {}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"Measured\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Interpolation of Data\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Theoretical Point Source\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], "}"}],
                 ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Close-in Point Source\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.85, 0.85}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Count Rate (cps)\"", 20, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Distance (cm)\"", 20, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->Directive[
     GrayLevel[0], 18],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Full,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox["\"Cs-137 Point Source\"", 24, StripOnInput -> False], 
     TraditionalForm],
   PlotRange->{{0, 33.737}, {0, 107.67483394169759`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           Point[{{2.69875, 89.58296625088241}, {7.7787500000000005`, 
            22.041968345188238`}, {15.39875, 6.204896381075803}, {23.01875, 
            3.1573859370350097`}, {30.63875, 1.93401951012895}}], {{
             Line[{{2.73, 89.58296625088241}, {2.6675, 89.58296625088241}}], 
             Line[{
               Offset[{0, 1.5}, {2.73, 89.58296625088241}], 
               Offset[{0, -1.5}, {2.73, 89.58296625088241}]}], 
             Line[{
               Offset[{0, 1.5}, {2.6675, 89.58296625088241}], 
               Offset[{0, -1.5}, {2.6675, 89.58296625088241}]}], 
             
             Line[{{2.69875, 98.71653731660933}, {2.69875, 
              80.44939518515548}}], 
             Line[{
               Offset[{1.5, 0}, {2.69875, 98.71653731660933}], 
               Offset[{-1.5, 0}, {2.69875, 98.71653731660933}]}], 
             Line[{
               Offset[{1.5, 0}, {2.69875, 80.44939518515548}], 
               Offset[{-1.5, 0}, {2.69875, 80.44939518515548}]}]}, {
             
             Line[{{7.8100000000000005`, 22.041968345188238`}, {
              7.7475000000000005`, 22.041968345188238`}}], 
             Line[{
               Offset[{0, 1.5}, {7.8100000000000005`, 22.041968345188238`}], 
               
               Offset[{0, -1.5}, {7.8100000000000005`, 
                22.041968345188238`}]}], 
             Line[{
               Offset[{0, 1.5}, {7.7475000000000005`, 22.041968345188238`}], 
               
               Offset[{0, -1.5}, {7.7475000000000005`, 
                22.041968345188238`}]}], 
             
             Line[{{7.7787500000000005`, 26.696245154665228`}, {
              7.7787500000000005`, 17.387691535711248`}}], 
             Line[{
               Offset[{1.5, 0}, {7.7787500000000005`, 26.696245154665228`}], 
               
               Offset[{-1.5, 0}, {7.7787500000000005`, 
                26.696245154665228`}]}], 
             Line[{
               Offset[{1.5, 0}, {7.7787500000000005`, 17.387691535711248`}], 
               
               Offset[{-1.5, 0}, {7.7787500000000005`, 
                17.387691535711248`}]}]}, {
             Line[{{15.43, 6.204896381075803}, {15.3675, 6.204896381075803}}], 
             Line[{
               Offset[{0, 1.5}, {15.43, 6.204896381075803}], 
               Offset[{0, -1.5}, {15.43, 6.204896381075803}]}], 
             Line[{
               Offset[{0, 1.5}, {15.3675, 6.204896381075803}], 
               Offset[{0, -1.5}, {15.3675, 6.204896381075803}]}], 
             
             Line[{{15.39875, 8.689787519378967}, {15.39875, 
              3.7200052427726384`}}], 
             Line[{
               Offset[{1.5, 0}, {15.39875, 8.689787519378967}], 
               Offset[{-1.5, 0}, {15.39875, 8.689787519378967}]}], 
             Line[{
               Offset[{1.5, 0}, {15.39875, 3.7200052427726384`}], 
               Offset[{-1.5, 0}, {15.39875, 3.7200052427726384`}]}]}, {
             
             Line[{{23.05, 3.1573859370350097`}, {22.9875, 
              3.1573859370350097`}}], 
             Line[{
               Offset[{0, 1.5}, {23.05, 3.1573859370350097`}], 
               Offset[{0, -1.5}, {23.05, 3.1573859370350097`}]}], 
             Line[{
               Offset[{0, 1.5}, {22.9875, 3.1573859370350097`}], 
               Offset[{0, -1.5}, {22.9875, 3.1573859370350097`}]}], 
             
             Line[{{23.01875, 4.9320849863541305`}, {23.01875, 
              1.3826868877158889`}}], 
             Line[{
               Offset[{1.5, 0}, {23.01875, 4.9320849863541305`}], 
               Offset[{-1.5, 0}, {23.01875, 4.9320849863541305`}]}], 
             Line[{
               Offset[{1.5, 0}, {23.01875, 1.3826868877158889`}], 
               Offset[{-1.5, 0}, {23.01875, 1.3826868877158889`}]}]}, {
             Line[{{30.67, 1.93401951012895}, {30.6075, 1.93401951012895}}], 
             Line[{
               Offset[{0, 1.5}, {30.67, 1.93401951012895}], 
               Offset[{0, -1.5}, {30.67, 1.93401951012895}]}], 
             Line[{
               Offset[{0, 1.5}, {30.6075, 1.93401951012895}], 
               Offset[{0, -1.5}, {30.6075, 1.93401951012895}]}], 
             
             Line[{{30.63875, 3.3236529223896705`}, {30.63875, 
              0.5443860978682296}}], 
             Line[{
               Offset[{1.5, 0}, {30.63875, 3.3236529223896705`}], 
               Offset[{-1.5, 0}, {30.63875, 3.3236529223896705`}]}], 
             Line[{
               Offset[{1.5, 0}, {30.63875, 0.5443860978682296}], 
               
               Offset[{-1.5, 0}, {30.63875, 
                0.5443860978682296}]}]}}}}, {}}}, {}, {}, {{}, {}}}, {{{{}, \
{}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 
             Rational[2, 3], 0], 
            Dashing[{Small, Small}]], 
           Line[CompressedData["
1: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
xv8AD/Bxcw==
            "]]}, 
          "Charting`Private`Tag$39150#1"]}}, {}, {}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
             Rational[2, 3], 0, 0], 
            Dashing[{0, Small}]], 
           Line[CompressedData["
1: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
YSvFN7sYRaLAc9xgsm+I+B8qMccH
            "]]}, 
          "Charting`Private`Tag$39200#1"]}}, {}, {}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0.5, 0], 
            Dashing[{0, Small, Small, Small}]], 
           Line[CompressedData["
1:eJwVlnk01IsDxWVNqWEYuzFjmLEzGfvyvZMtVEpa6PFE1BTl4ekR2YUWKi+8
dOSFiqhkCZWUCJVosVS2R8WIkhDh1++Pe+655/PvPedeuu9hN39BAQGBq7/0
f/9Gn2TIq68FLXn4dN8LVwS4iGzYwiQh/k0by1BgM6Yslc8HWJGwbXaTQUvv
JsToGg1HuZGgbaMhV1i5Cdlr9sReO0bCpOALLUbgJrS1370j2EVCsQdB13y3
EfLatZm9tpK4d/BGYnezC6LL/hA5NS0JL8/KApNWJzzMiOhLFJCCcxOLl3fN
CStD46qjJKTA1Xt40TbVCZmmZ3iB6lIwKafoWzk54fqDm89c3KXg5rxZpb9t
A951Tv69quJXrtc8GvnWERazQcyUUDJ6rAndepoDYnv+XI6JISN8YkC4QNQB
TXXR3UdOkKGxeDS9ctwebrGn0vZdJqM6P4HtVWMPnnjphMNLMh7r59Er3O2R
rTReJWIkDZ9w3asG5+wwSxxwTJiSRpn2xkPCerYo3qcB2yVpmMS5hxnL28I7
fcBMaJUM/pbV3HtcyBaNfTu0E+gyeMjxmz7Zux4Z0bZrErbI4HB5fr5c2npo
1ym/jC+TQRcj+tS3CS68Tdq94w9QoBOrrcJ6Dkh5p+1cH07BtkbJxKW7QGOS
/RbBeArOr7Y/MVkC6Lyu48bnUBDYzq5QSQPmQq+qxz+hQMj8tnKhI3D2VtxY
HFMW3Ucfmx86TeCxLic8bkgWe26GkvaXWSNX7Jj9kc+yoFnrpNWcs0bYULNM
0Jws9n2ONNaPsIZa9u7bu9bKofrhn7qxdtaIFUr4YmAhB3F7D5UH76xg2dtx
oO+MHChLBUXR0la4dfzw75Zcedj5PW4OzbZAim+NPnujPK61vVStj7OAj7XQ
EnOnPNTaV/1gHrTA2m/nc8lB8ngRsD3MxcYCgd73e0az5cGQ3JsyNGIOlvEa
9+wvv7hVPVXNwhwXh4o3fM9TQCezxeHBd1OEsb62dJUo4K2+6+GCAVM4B5q6
1FYrQKR0xeLlNlPMfX+0KaZdAYV+2qen803hLv7eTXxZATExNilvXE0hYUjy
UvFWxOCnM+QjN00QFR36h72yEp6EbrMSTTTGtoc1UyxNJfBvX7krFGIMbTGB
sFUcJfxVbxIl52OM7oyT4e0uSvjkpKkVZ2UMTkHhUY+jSjD/1uPpMcPBeGtX
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

            "]]}, "Charting`Private`Tag$39250#1"]}}, {}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 33.737}, {0, 107.67483394169759`}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Count Rate (cps)", 20], None}, {
         Style["Distance (cm)", 20], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> Directive[
        GrayLevel[0], 18], GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Full, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> Style["Cs-137 Point Source", 24],
       PlotRange -> {{0, 33.737}, {0, 107.67483394169759`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       Unevaluated[
        Unevaluated[
         LineLegend[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0.5, 0], 
            Dashing[{0, Small, Small, Small}]]}, {"Close-in Point Source"}, 
          LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
          "Column"]]]]], {0.85, 0.85}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.696947823656149*^9, 3.696947917651232*^9, {3.696948599956375*^9, 
   3.696948724933654*^9}, {3.696948759403084*^9, 3.696948791771968*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"partacolpd", "=", 
   RowBox[{
    RowBox[{"Multicolumn", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
       "PartACoDetectorHeight", ",", "PartACoBGDTCorrectedCountRate"}], "]"}],
       ",", "2"}], "]"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"partacolpderr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ErrorBar", "[", 
      RowBox[{
       RowBox[{"2.54", "/", "32."}], ",", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "partacolpd", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartACoDataPlot", "=", 
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"partacolpd", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"partacolpderr", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "partacolpd", "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Distance (cm)\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Count Rate (cps)\>\"", ",", "20"}], "]"}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Co-60 Point Source\>\"", ",", "24"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1.1", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Max", "[", "PartACoDetectorHeight", "]"}], "+", 
             RowBox[{"1", "/", "32."}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"1.1", "*", 
            RowBox[{"Max", "[", "PartACoBGDTCorrectedCountRate", "]"}]}], "+", 
           RowBox[{"Max", "[", "PartACoBGTDCorrectedRateError", "]"}]}]}], 
         "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Measured\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"partacointerp", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"partacolpd", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
     RowBox[{"Method", "->", "\"\<Spline\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartAInterpPlot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"partacointerp", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "35"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "}"}]}], ",", 
     
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Interpolation of Data\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacoe5", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Eq5", "[", 
      RowBox[{"pacoa", ",", "0.02", ",", "1", ",", 
       RowBox[{"Pi", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2.54", "*", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"5", "/", "16"}]}], ")"}]}], ")"}], "*", "0.5"}], 
          ")"}], "2"]}], ",", "r", ",", "0.0000949"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "35"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", "Dotted"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Theoretical Point Source\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacoe6", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Eq6", "[", 
      RowBox[{"pacoa", ",", "0.02", ",", "d", ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2.54", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"5", "/", "16"}]}], ")"}]}], ")"}], "*", "0.5"}], ")"}], 
       ",", "0.0000949"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "35"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "DotDashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Close-in Point Source\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "PartACoDataPlot", ",", "PartAInterpPlot", ",", "pacoe5", ",", "pacoe6"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.696905006372013*^9, 3.6969050641643057`*^9}, {
   3.696905388866019*^9, 3.696905510434826*^9}, {3.696905547150529*^9, 
   3.6969057733381076`*^9}, {3.6969058495276575`*^9, 3.696905865559091*^9}, {
   3.696905903411413*^9, 3.6969059038281317`*^9}, {3.6969059412570534`*^9, 
   3.696905974347324*^9}, {3.6969060459257455`*^9, 3.696906049076763*^9}, {
   3.696933452382843*^9, 3.6969335809327497`*^9}, {3.696933967420827*^9, 
   3.6969340678419323`*^9}, {3.696945691214094*^9, 3.696945749264876*^9}, {
   3.696946030310196*^9, 3.6969461937155867`*^9}, {3.696946342898017*^9, 
   3.696946345726824*^9}, {3.696946463144971*^9, 3.6969465159258537`*^9}, 
   3.696946575230825*^9, {3.696946632077505*^9, 3.696946658159624*^9}, {
   3.696946729392742*^9, 3.696946801865595*^9}, {3.6969470118693647`*^9, 
   3.696947053680584*^9}, {3.696947311985258*^9, 3.6969473327675734`*^9}, {
   3.696947374635957*^9, 3.696947377635264*^9}, {3.696949017594212*^9, 
   3.696949078248727*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{30.63875, 1.5593626572947104`}, {23.177500000000002`, 
         2.7330415843918727`}, {15.39875, 5.930770061169203}, {
         7.7787500000000005`, 17.816444438870583`}, {2.69875, 
         77.87788160406885}}], {{
          LineBox[{{30.718125, 1.5593626572947104`}, {30.559375000000003`, 
           1.5593626572947104`}}], 
          LineBox[{
           Offset[{0, 1.5}, {30.718125, 1.5593626572947104`}], 
            Offset[{0, -1.5}, {30.718125, 1.5593626572947104`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {30.559375000000003`, 1.5593626572947104`}], 
            Offset[{0, -1.5}, {30.559375000000003`, 1.5593626572947104`}]}], 
          LineBox[{{30.63875, 11.55936265729471}, {
           30.63875, -8.44063734270529}}], 
          LineBox[{
           Offset[{1.5, 0}, {30.63875, 11.55936265729471}], 
            Offset[{-1.5, 0}, {30.63875, 11.55936265729471}]}], 
          LineBox[{
           Offset[{1.5, 0}, {30.63875, -8.44063734270529}], 
            Offset[{-1.5, 0}, {30.63875, -8.44063734270529}]}]}, {
          LineBox[{{23.256875, 2.7330415843918727`}, {23.098125000000003`, 
           2.7330415843918727`}}], 
          LineBox[{
           Offset[{0, 1.5}, {23.256875, 2.7330415843918727`}], 
            Offset[{0, -1.5}, {23.256875, 2.7330415843918727`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {23.098125000000003`, 2.7330415843918727`}], 
            Offset[{0, -1.5}, {23.098125000000003`, 2.7330415843918727`}]}], 
          LineBox[{{23.177500000000002`, 12.733041584391874`}, {
           23.177500000000002`, -7.266958415608127}}], 
          LineBox[{
           Offset[{1.5, 0}, {23.177500000000002`, 12.733041584391874`}], 
            Offset[{-1.5, 0}, {23.177500000000002`, 12.733041584391874`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {23.177500000000002`, -7.266958415608127}], 
            Offset[{-1.5, 0}, {23.177500000000002`, -7.266958415608127}]}]}, {
          LineBox[{{15.478125, 5.930770061169203}, {15.319374999999999`, 
           5.930770061169203}}], 
          LineBox[{
           Offset[{0, 1.5}, {15.478125, 5.930770061169203}], 
            Offset[{0, -1.5}, {15.478125, 5.930770061169203}]}], 
          LineBox[{
           Offset[{0, 1.5}, {15.319374999999999`, 5.930770061169203}], 
            Offset[{0, -1.5}, {15.319374999999999`, 5.930770061169203}]}], 
          LineBox[{{15.39875, 15.930770061169202`}, {
           15.39875, -4.069229938830797}}], 
          LineBox[{
           Offset[{1.5, 0}, {15.39875, 15.930770061169202`}], 
            Offset[{-1.5, 0}, {15.39875, 15.930770061169202`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {15.39875, -4.069229938830797}], 
            Offset[{-1.5, 0}, {15.39875, -4.069229938830797}]}]}, {
          LineBox[{{7.858125, 17.816444438870583`}, {7.699375000000001, 
           17.816444438870583`}}], 
          LineBox[{
           Offset[{0, 1.5}, {7.858125, 17.816444438870583`}], 
            Offset[{0, -1.5}, {7.858125, 17.816444438870583`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {7.699375000000001, 17.816444438870583`}], 
            Offset[{0, -1.5}, {7.699375000000001, 17.816444438870583`}]}], 
          LineBox[{{7.7787500000000005`, 27.816444438870583`}, {
           7.7787500000000005`, 7.816444438870583}}], 
          LineBox[{
           Offset[{1.5, 0}, {7.7787500000000005`, 27.816444438870583`}], 
            Offset[{-1.5, 0}, {7.7787500000000005`, 27.816444438870583`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {7.7787500000000005`, 7.816444438870583}], 
            Offset[{-1.5, 0}, {7.7787500000000005`, 7.816444438870583}]}]}, {
          LineBox[{{2.778125, 77.87788160406885}, {2.619375, 
           77.87788160406885}}], 
          LineBox[{
           Offset[{0, 1.5}, {2.778125, 77.87788160406885}], 
            Offset[{0, -1.5}, {2.778125, 77.87788160406885}]}], 
          LineBox[{
           Offset[{0, 1.5}, {2.619375, 77.87788160406885}], 
            Offset[{0, -1.5}, {2.619375, 77.87788160406885}]}], 
          LineBox[{{2.69875, 87.87788160406885}, {2.69875, 
           67.87788160406885}}], 
          LineBox[{
           Offset[{1.5, 0}, {2.69875, 87.87788160406885}], 
            Offset[{-1.5, 0}, {2.69875, 87.87788160406885}]}], 
          LineBox[{
           Offset[{1.5, 0}, {2.69875, 67.87788160406885}], 
            Offset[{-1.5, 0}, {2.69875, 
             67.87788160406885}]}]}}}, {}}, {}, {}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag$42074#1"]& ]}, {}, {}}, {{{}, {}, 
       
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[1.6],
          Opacity[1.], Dashing[{0, Small}], LineBox[CompressedData["
1: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
XlJ32MT/AMAE5qQ=
          "]]},
        Annotation[#, "Charting`Private`Tag$42124#1"]& ]}, {}, {}}, {{{}, {}, 
       
       TagBox[
        {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1: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
HOJ/njuW+A==
          "]]},
        Annotation[#, "Charting`Private`Tag$42174#1"]& ]}, {}, {}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"Measured\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, GridBoxSpacings -> {\
"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Interpolation of Data\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Theoretical Point Source\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], "}"}],
                 ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Close-in Point Source\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.85, 0.85}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Count Rate (cps)\"", 20, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Distance (cm)\"", 20, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->Directive[
     GrayLevel[0], 18],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Full,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox["\"Co-60 Point Source\"", 24, StripOnInput -> False], 
     TraditionalForm],
   PlotRange->{{0, 33.737}, {0, 94.22180353873938}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           Point[{{30.63875, 1.5593626572947104`}, {23.177500000000002`, 
            2.7330415843918727`}, {15.39875, 5.930770061169203}, {
            7.7787500000000005`, 17.816444438870583`}, {2.69875, 
            77.87788160406885}}], {{
             
             Line[{{30.718125, 1.5593626572947104`}, {30.559375000000003`, 
              1.5593626572947104`}}], 
             Line[{
               Offset[{0, 1.5}, {30.718125, 1.5593626572947104`}], 
               Offset[{0, -1.5}, {30.718125, 1.5593626572947104`}]}], 
             Line[{
               Offset[{0, 1.5}, {30.559375000000003`, 1.5593626572947104`}], 
               
               Offset[{0, -1.5}, {30.559375000000003`, 
                1.5593626572947104`}]}], 
             
             Line[{{30.63875, 11.55936265729471}, {
              30.63875, -8.44063734270529}}], 
             Line[{
               Offset[{1.5, 0}, {30.63875, 11.55936265729471}], 
               Offset[{-1.5, 0}, {30.63875, 11.55936265729471}]}], 
             Line[{
               Offset[{1.5, 0}, {30.63875, -8.44063734270529}], 
               Offset[{-1.5, 0}, {30.63875, -8.44063734270529}]}]}, {
             
             Line[{{23.256875, 2.7330415843918727`}, {23.098125000000003`, 
              2.7330415843918727`}}], 
             Line[{
               Offset[{0, 1.5}, {23.256875, 2.7330415843918727`}], 
               Offset[{0, -1.5}, {23.256875, 2.7330415843918727`}]}], 
             Line[{
               Offset[{0, 1.5}, {23.098125000000003`, 2.7330415843918727`}], 
               
               Offset[{0, -1.5}, {23.098125000000003`, 
                2.7330415843918727`}]}], 
             
             Line[{{23.177500000000002`, 12.733041584391874`}, {
              23.177500000000002`, -7.266958415608127}}], 
             Line[{
               Offset[{1.5, 0}, {23.177500000000002`, 12.733041584391874`}], 
               Offset[{-1.5, 0}, {23.177500000000002`, 
                12.733041584391874`}]}], 
             Line[{
               Offset[{1.5, 0}, {23.177500000000002`, -7.266958415608127}], 
               
               Offset[{-1.5, 0}, {
                23.177500000000002`, -7.266958415608127}]}]}, {
             
             Line[{{15.478125, 5.930770061169203}, {15.319374999999999`, 
              5.930770061169203}}], 
             Line[{
               Offset[{0, 1.5}, {15.478125, 5.930770061169203}], 
               Offset[{0, -1.5}, {15.478125, 5.930770061169203}]}], 
             Line[{
               Offset[{0, 1.5}, {15.319374999999999`, 5.930770061169203}], 
               Offset[{0, -1.5}, {15.319374999999999`, 5.930770061169203}]}], 
             
             
             Line[{{15.39875, 15.930770061169202`}, {
              15.39875, -4.069229938830797}}], 
             Line[{
               Offset[{1.5, 0}, {15.39875, 15.930770061169202`}], 
               Offset[{-1.5, 0}, {15.39875, 15.930770061169202`}]}], 
             Line[{
               Offset[{1.5, 0}, {15.39875, -4.069229938830797}], 
               Offset[{-1.5, 0}, {15.39875, -4.069229938830797}]}]}, {
             
             Line[{{7.858125, 17.816444438870583`}, {7.699375000000001, 
              17.816444438870583`}}], 
             Line[{
               Offset[{0, 1.5}, {7.858125, 17.816444438870583`}], 
               Offset[{0, -1.5}, {7.858125, 17.816444438870583`}]}], 
             Line[{
               Offset[{0, 1.5}, {7.699375000000001, 17.816444438870583`}], 
               Offset[{0, -1.5}, {7.699375000000001, 17.816444438870583`}]}], 
             
             
             Line[{{7.7787500000000005`, 27.816444438870583`}, {
              7.7787500000000005`, 7.816444438870583}}], 
             Line[{
               Offset[{1.5, 0}, {7.7787500000000005`, 27.816444438870583`}], 
               
               Offset[{-1.5, 0}, {7.7787500000000005`, 
                27.816444438870583`}]}], 
             Line[{
               Offset[{1.5, 0}, {7.7787500000000005`, 7.816444438870583}], 
               Offset[{-1.5, 0}, {7.7787500000000005`, 
                7.816444438870583}]}]}, {
             
             Line[{{2.778125, 77.87788160406885}, {2.619375, 
              77.87788160406885}}], 
             Line[{
               Offset[{0, 1.5}, {2.778125, 77.87788160406885}], 
               Offset[{0, -1.5}, {2.778125, 77.87788160406885}]}], 
             Line[{
               Offset[{0, 1.5}, {2.619375, 77.87788160406885}], 
               Offset[{0, -1.5}, {2.619375, 77.87788160406885}]}], 
             
             Line[{{2.69875, 87.87788160406885}, {2.69875, 
              67.87788160406885}}], 
             Line[{
               Offset[{1.5, 0}, {2.69875, 87.87788160406885}], 
               Offset[{-1.5, 0}, {2.69875, 87.87788160406885}]}], 
             Line[{
               Offset[{1.5, 0}, {2.69875, 67.87788160406885}], 
               
               Offset[{-1.5, 0}, {2.69875, 
                67.87788160406885}]}]}}}}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 
             Rational[2, 3], 0], 
            Dashing[{Small, Small}]], 
           Line[CompressedData["
1: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
            "]]}, 
          "Charting`Private`Tag$42074#1"]}}, {}, {}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
             Rational[2, 3], 0, 0], 
            Dashing[{0, Small}]], 
           Line[CompressedData["
1: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
XlJ32MT/AMAE5qQ=
            "]]}, 
          "Charting`Private`Tag$42124#1"]}}, {}, {}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0.5, 0], 
            Dashing[{0, Small, Small, Small}]], 
           Line[CompressedData["
1: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
HOJ/njuW+A==
            "]]}, "Charting`Private`Tag$42174#1"]}}, {}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 33.737}, {0, 94.22180353873938}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Count Rate (cps)", 20], None}, {
         Style["Distance (cm)", 20], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> Directive[
        GrayLevel[0], 18], GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Full, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> Style["Co-60 Point Source", 24], 
      PlotRange -> {{0, 33.737}, {0, 94.22180353873938}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       Unevaluated[
        Unevaluated[
         LineLegend[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0.5, 0], 
            Dashing[{0, Small, Small, Small}]]}, {"Close-in Point Source"}, 
          LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
          "Column"]]]]], {0.85, 0.85}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.696945751187806*^9, {3.696946045702313*^9, 3.6969460642145977`*^9}, {
   3.696946129546836*^9, 3.696946194777534*^9}, 3.6969463465341253`*^9, 
   3.6969464667645683`*^9, 3.696946517060465*^9, 3.696946575951169*^9, {
   3.696946632508803*^9, 3.6969466588794403`*^9}, {3.69694673278494*^9, 
   3.6969467611222687`*^9}, 3.696946803246436*^9, 3.6969470221506157`*^9, 
   3.69694705478477*^9, {3.69694731420446*^9, 3.696947333884365*^9}, 
   3.69694737819508*^9, {3.696949032546866*^9, 3.696949078827343*^9}}]
}, Open  ]],

Cell["\<\
6. From the plots created, determine at what distance, if ever, the detection \
efficiency can be described by equation 8.8 over equation 8.7 in the text \
with an error of no more than 5% for each source. Compare the two answers and \
discuss if they are different or not and whether they agree with our rule of \
thumb.\
\>", "Text",
 CellChangeTimes->{{3.696878335461763*^9, 3.6968784019441*^9}, {
  3.696878438287644*^9, 3.6968784384714203`*^9}}],

Cell["\<\
Note: use the best guess geometric efficiency equation based upon the \
inspection of the plot from question 6.\
\>", "Item",
 CellChangeTimes->{{3.6968784109127398`*^9, 3.6968784289355927`*^9}}],

Cell["For Cs-137:", "Text",
 CellChangeTimes->{{3.696949455836594*^9, 3.696949468720541*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Line Source", "Subchapter",
 CellChangeTimes->{{3.6968784601238956`*^9, 3.696878461282907*^9}}],

Cell["\<\
1. Make a table for the line source data with the same information contained \
within the table for the point source analysis.\
\>", "Text",
 CellChangeTimes->{{3.696878464188856*^9, 3.696878480758499*^9}, {
  3.696878837344265*^9, 3.696878837472171*^9}, {3.6969062464945073`*^9, 
  3.6969062498857894`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PartBDistance", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "2", ",", " ", "6", ",", " ", "10", ",", " ", "14", ",", " ", "18", ",", 
      " ", "22", ",", " ", "26", ",", " ", "30", ",", " ", "34"}], "}"}], "*",
     "2.54"}]}], " ", 
  RowBox[{"(*", " ", "cm", " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartBCounts", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "48692", ",", " ", "16490", ",", " ", "7018", ",", " ", "3564", ",", " ", 
     "1988", ",", " ", "1222", ",", " ", "795", ",", " ", "514", ",", " ", 
     "332"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartBTime", "=", "60"}], " ", 
  RowBox[{"(*", " ", "seconds", " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PartBCountRate", "=", 
  RowBox[{
   RowBox[{"PartBCounts", "/", "PartBTime"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartBBGCorrCountRate", "=", 
  RowBox[{
  "PartBCountRate", "-", "BackgroundCountRate"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartBBGCorrCountErrors", "=", 
   SqrtBox[
    RowBox[{
     RowBox[{"PartBCounts", "/", 
      SuperscriptBox["PartBTime", "2"]}], "+", 
     SuperscriptBox["BackgroundCountRateError", "2"]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PartBBGDTCorrCountRate", "=", 
  RowBox[{
  "DTC", "[", "PartBBGCorrCountRate", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartBBGDTCorrErrors", "=", 
  RowBox[{"DTCError", "[", 
   RowBox[{"PartBBGCorrCountRate", ",", "PartBBGCorrCountErrors"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6969062513800745`*^9, 3.6969062659615088`*^9}, {
  3.6969063284397235`*^9, 3.6969064425073347`*^9}, {3.6969066098558426`*^9, 
  3.6969066330558305`*^9}, {3.696949990956942*^9, 3.696949996896122*^9}, {
  3.696951554468931*^9, 3.696951588236058*^9}, {3.696951673422695*^9, 
  3.696951791708449*^9}, {3.6969519369867373`*^9, 3.696951962341599*^9}, {
  3.696952064554854*^9, 3.6969520687868547`*^9}, {3.696952169017906*^9, 
  3.6969522297927723`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "811.5333333333333`", ",", "274.8333333333333`", ",", "116.96666666666667`",
    ",", "59.4`", ",", "33.13333333333333`", ",", "20.366666666666667`", ",", 
   "13.25`", ",", "8.566666666666666`", ",", "5.533333333333333`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.696937421728649*^9, 3.696949998786599*^9, 3.696951581169504*^9, 
   3.69695179402604*^9, 3.6969519641171713`*^9, {3.696952065786635*^9, 
   3.6969520693964643`*^9}, 3.6969522307030067`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "810.9633333333333`", ",", "274.2633333333333`", ",", "116.39666666666668`",
    ",", "58.83`", ",", "32.56333333333333`", ",", "19.796666666666667`", ",",
    "12.68`", ",", "7.996666666666666`", ",", "4.963333333333333`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.696937421728649*^9, 3.696949998786599*^9, 3.696951581169504*^9, 
   3.69695179402604*^9, 3.6969519641171713`*^9, {3.696952065786635*^9, 
   3.6969520693964643`*^9}, 3.696952230711569*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "668.8509674878699`", ",", "255.87679610169886`", ",", "112.9520880719768`",
    ",", "57.93699051418917`", ",", "32.28786638771236`", ",", 
   "19.69451659227043`", ",", "12.63801449376938`", ",", "7.979947665514043`",
    ",", "4.956887429965322`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696937421728649*^9, 3.696949998786599*^9, 3.696951581169504*^9, 
   3.69695179402604*^9, 3.6969519641171713`*^9, {3.696952065786635*^9, 
   3.6969520693964643`*^9}, 3.696952230718248*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.501867698000595`", ",", "1.863268487591929`", ",", "1.3154501937672933`",
    ",", "0.9659354680893275`", ",", "0.731852850329791`", ",", 
   "0.5782330741530918`", ",", "0.468826119553689`", ",", 
   "0.37877648936339353`", ",", "0.3059971014228891`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696937421728649*^9, 3.696949998786599*^9, 3.696951581169504*^9, 
   3.69695179402604*^9, 3.6969519641171713`*^9, {3.696952065786635*^9, 
   3.6969520693964643`*^9}, 3.6969522307245693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartBPlotData", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PartBDistance", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"PartBBGDTCorrCountRate", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"ErrorBar", "[", 
       RowBox[{
        RowBox[{"2.54", "*", "0.25"}], ",", 
        RowBox[{"PartBBGDTCorrErrors", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "PartBCounts", "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.696906683829074*^9, 3.6969067381897063`*^9}, {
  3.696937905290161*^9, 3.696937922492612*^9}, {3.6969496565391293`*^9, 
  3.696949661417742*^9}, {3.69694971025802*^9, 3.696949751380493*^9}, {
  3.696952319567482*^9, 3.696952342301889*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5.08`", ",", "668.8509674878699`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", 
      RowBox[{"0.635`", ",", "2.501867698000595`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"15.24`", ",", "255.87679610169886`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", 
      RowBox[{"0.635`", ",", "1.863268487591929`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"25.4`", ",", "112.9520880719768`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", 
      RowBox[{"0.635`", ",", "1.3154501937672933`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"35.56`", ",", "57.93699051418917`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", 
      RowBox[{"0.635`", ",", "0.9659354680893275`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"45.72`", ",", "32.28786638771236`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", 
      RowBox[{"0.635`", ",", "0.731852850329791`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"55.88`", ",", "19.69451659227043`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", 
      RowBox[{"0.635`", ",", "0.5782330741530918`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"66.04`", ",", "12.63801449376938`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", 
      RowBox[{"0.635`", ",", "0.468826119553689`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"76.2`", ",", "7.979947665514043`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", 
      RowBox[{"0.635`", ",", "0.37877648936339353`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"86.36`", ",", "4.956887429965322`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", 
      RowBox[{"0.635`", ",", "0.3059971014228891`"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6969066254155655`*^9, 3.69690663367623*^9}, 
   3.6969067405894833`*^9, 3.6969374231466084`*^9, 3.69693792385049*^9, 
   3.696938146759124*^9, 3.696949662482778*^9, {3.696949745596744*^9, 
   3.696949751963079*^9}, 3.6969500000741777`*^9, 3.696952347204838*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PartBDataPlot", "=", 
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{"PartBPlotData", ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1.1", "*", 
           RowBox[{"Max", "[", 
            RowBox[{"PartBPlotData", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1", ",", "1"}], "]"}], "]"}], "]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1.1", "*", 
           RowBox[{"Max", "[", 
            RowBox[{"PartBPlotData", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1", ",", "2"}], "]"}], "]"}], "]"}]}]}], 
         "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Distance from source (cm)\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Count Rate (cps)\>\"", ",", "20"}], "]"}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", "18"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Count Rate vs. Range for Line Source\>\"", ",", "24"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "->", "Full"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Measured\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6969067512935667`*^9, 3.6969067641440086`*^9}, {
  3.696937928889118*^9, 3.69693792947635*^9}, {3.696949779580612*^9, 
  3.6969499184051*^9}, {3.696950026680162*^9, 3.696950031967134*^9}, {
  3.696950063018629*^9, 3.696950193964353*^9}, {3.696950249676649*^9, 
  3.696950252539407*^9}, {3.696952435988533*^9, 3.6969524446400957`*^9}, {
  3.696958030933382*^9, 3.69695803914852*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"Length", "[", "PartBCountRate", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.696952934615158*^9, 3.6969529442916718`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.6969529451480494`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PartBDistance", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"PartBCountRate", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"PartBBGCorrCountRate", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"PartBBGDTCorrCountRate", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"PartBBGDTCorrErrors", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "PartBDistance", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Distance (cm)\>\"", ",", " ", "\"\<Count rate (cps)\>\"", ",", 
        " ", "\"\<BG Corrected\>\"", ",", " ", 
        "\"\<BG/Deadtime Corrected\>\"", ",", " ", "\"\<Error\>\""}], "}"}]}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.69695255995442*^9, 3.696952570460352*^9}, {
  3.696952602741919*^9, 3.6969526411122723`*^9}, {3.696952684399808*^9, 
  3.696952819945183*^9}, {3.6969528948279753`*^9, 3.696952925799541*^9}, {
  3.696952978407432*^9, 3.696953001538028*^9}, {3.69695304834974*^9, 
  3.696953074205697*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Distance (cm)\"\>",
       HoldForm], 
      TagBox["\<\"Count rate (cps)\"\>",
       HoldForm], 
      TagBox["\<\"BG Corrected\"\>",
       HoldForm], 
      TagBox["\<\"BG/Deadtime Corrected\"\>",
       HoldForm], 
      TagBox["\<\"Error\"\>",
       HoldForm]},
     {"5.08`", "811.5333333333333`", "810.9633333333333`", 
      "668.8509674878699`", "2.501867698000595`"},
     {"15.24`", "274.8333333333333`", "274.2633333333333`", 
      "255.87679610169886`", "1.863268487591929`"},
     {"25.4`", "116.96666666666667`", "116.39666666666668`", 
      "112.9520880719768`", "1.3154501937672933`"},
     {"35.56`", "59.4`", "58.83`", "57.93699051418917`", 
      "0.9659354680893275`"},
     {"45.72`", "33.13333333333333`", "32.56333333333333`", 
      "32.28786638771236`", "0.731852850329791`"},
     {"55.88`", "20.366666666666667`", "19.796666666666667`", 
      "19.69451659227043`", "0.5782330741530918`"},
     {"66.04`", "13.25`", "12.68`", "12.63801449376938`", 
      "0.468826119553689`"},
     {"76.2`", "8.566666666666666`", "7.996666666666666`", 
      "7.979947665514043`", "0.37877648936339353`"},
     {"86.36`", "5.533333333333333`", "4.963333333333333`", 
      "4.956887429965322`", "0.3059971014228891`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Distance (cm)", "Count rate (cps)", "BG Corrected", 
       "BG/Deadtime Corrected", "Error"}}]]]], "Output",
 CellChangeTimes->{{3.696953055241531*^9, 3.696953074905427*^9}}]
}, Open  ]],

Cell[TextData[{
 "2. Determine the total line energetic photon emission activity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["E", "\[Gamma]"], "\[GreaterEqual]", 
     RowBox[{"30", "keV"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") with uncertainty. Assume the source strength of each source is known to \
\[PlusMinus]5%."
}], "Text",
 CellChangeTimes->{{3.69687848367227*^9, 3.6968785244643507`*^9}, {
  3.696878559928773*^9, 3.696878594804619*^9}, {3.696878839680401*^9, 
  3.696878839794662*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PartBSourceAges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"24", "-", "2"}], ",", "60", ",", 
     RowBox[{"60", "+", "6"}], ",", "60", ",", 
     RowBox[{"24", "-", "2"}]}], "}"}]}], ";", " ", 
  RowBox[{"(*", " ", "months", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PartBHalfLife", "=", 
   RowBox[{"30.08", "*", "12"}]}], " ", 
  RowBox[{"(*", " ", "months", " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PartBSingleSourceActivity", "=", 
  RowBox[{
   SuperscriptBox["10", 
    RowBox[{"-", "5"}]], "*", "3.7", "*", 
   SuperscriptBox["10", "10"]}]}], "\[IndentingNewLine]", 
 RowBox[{"PartBActivity", "=", 
  RowBox[{"Total", "[", 
   RowBox[{"PartBSingleSourceActivity", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Log", "[", "2.", "]"}]}], "/", "PartBHalfLife"}], "*", 
      "PartBSourceAges"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartBActivityError", "=", 
  RowBox[{
   SqrtBox[
    RowBox[{"Total", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.05", "*", "PartBSingleSourceActivity"}], ")"}], "2"], "*", 
      
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "*", 
        RowBox[{
         RowBox[{"Log", "[", "2.", "]"}], "/", "PartBHalfLife"}], "*", 
        "PartBSourceAges"}], "]"}]}], "]"}]], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.6969533418471527`*^9, 3.696953350379631*^9}, {
   3.6969533818750477`*^9, 3.696953465994149*^9}, 3.6969535608638697`*^9, {
   3.6969541686616993`*^9, 3.6969542021560287`*^9}, {3.696954275622925*^9, 
   3.696954282646805*^9}, {3.696954317958352*^9, 3.6969543822889338`*^9}, {
   3.696955331732664*^9, 3.696955426146763*^9}, {3.696955524129747*^9, 
   3.696955527272997*^9}, {3.6969557263617992`*^9, 3.696955795068108*^9}, {
   3.696957622523592*^9, 3.6969576707708273`*^9}}],

Cell[BoxData["370000.00000000006`"], "Output",
 CellChangeTimes->{{3.6969543727085943`*^9, 3.6969543830566807`*^9}, 
   3.69695539662782*^9, 3.6969554269412622`*^9, 3.696955528176703*^9, 
   3.6969557355406847`*^9, 3.696955795933094*^9, 3.6969576715965*^9}],

Cell[BoxData["1.6948130245645528`*^6"], "Output",
 CellChangeTimes->{{3.6969543727085943`*^9, 3.6969543830566807`*^9}, 
   3.69695539662782*^9, 3.6969554269412622`*^9, 3.696955528176703*^9, 
   3.6969557355406847`*^9, 3.696955795933094*^9, 3.6969576716045856`*^9}],

Cell[BoxData["37924.68581788595`"], "Output",
 CellChangeTimes->{{3.6969543727085943`*^9, 3.6969543830566807`*^9}, 
   3.69695539662782*^9, 3.6969554269412622`*^9, 3.696955528176703*^9, 
   3.6969557355406847`*^9, 3.696955795933094*^9, 3.696957671610961*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PartBPhotonActivity", "=", 
  RowBox[{"0.91963", "*", "PartBActivity"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartBPhotonActivityError", "=", 
  RowBox[{"0.91963", "*", "PartBActivityError"}]}]}], "Input",
 CellChangeTimes->{{3.696955570702694*^9, 3.696955581855781*^9}, {
  3.696955620995798*^9, 3.696955625310854*^9}, {3.696955808028182*^9, 
  3.6969558290673027`*^9}}],

Cell[BoxData["1.5586009017802996`*^6"], "Output",
 CellChangeTimes->{3.69695582973298*^9, 3.696957677593202*^9}],

Cell[BoxData["34876.67881870245`"], "Output",
 CellChangeTimes->{3.69695582973298*^9, 3.6969576776017437`*^9}]
}, Open  ]],

Cell[TextData[{
 "The total line energetic photon emission activity is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1.56", "*", 
     SuperscriptBox["10", "6"]}], "\[PlusMinus]", 
    RowBox[{"3", "*", 
     SuperscriptBox["10", "4"], "photons", " ", "per", " ", 
     RowBox[{"second", "."}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.696955841978527*^9, 3.6969559026476727`*^9}, {
  3.696957684003778*^9, 3.69695769815383*^9}}],

Cell["\<\
3. Create a function that can be plotted that will provide the count rate \
versus distance for the line source data.\
\>", "Text",
 CellChangeTimes->{{3.696878597479549*^9, 3.696878612276175*^9}, {
  3.696878842568013*^9, 3.696878842688088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"PartBPhotonFunction", "[", "d_", "]"}], "=", 
     RowBox[{"PartBPhotonActivity", "*", "0.05", "*", 
      FractionBox[
       RowBox[{"\[Pi]", "*", 
        SuperscriptBox["Radius", "2"]}], 
       RowBox[{"4", "*", "\[Pi]", "*", 
        SuperscriptBox["d", "2"]}]], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "muCsAir"}], "*", "d"}], "]"}]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PartBA1", "=", 
     RowBox[{"0.04", "*", "PartBPhotonActivity"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PartBA2", "=", 
     RowBox[{"0.04", "*", "PartBPhotonActivity"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PartBSourceLength", "=", 
     RowBox[{"8", "*", "2.54"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PartBPhotonFunction", "[", "d_", "]"}], "=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PartBA1", "*", 
          RowBox[{"1", "/", 
           SuperscriptBox["d", "2"]}]}], ",", 
         RowBox[{"d", ">", 
          RowBox[{"PartBSourceLength", "/", "2"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PartBA2", "*", 
          RowBox[{"1", "/", "d"}]}], ",", 
         RowBox[{"d", "<", 
          RowBox[{"PartBSourceLength", "/", "2"}]}]}], "}"}]}], "}"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.696955924519725*^9, 3.6969559774324703`*^9}, {
  3.696956054471159*^9, 3.6969561448026667`*^9}, {3.696956247904664*^9, 
  3.696956284407137*^9}, {3.696958654105853*^9, 3.6969587650186872`*^9}, {
  3.696958804422426*^9, 3.6969588351978407`*^9}, {3.696958876299571*^9, 
  3.696958942091713*^9}, {3.69695898534336*^9, 3.696958996283163*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["62344.03607121199`", 
         SuperscriptBox["d", "2"]], 
        RowBox[{"d", ">", "10.16`"}]},
       {
        FractionBox["62344.03607121199`", "d"], 
        RowBox[{"d", "<", "10.16`"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.696958756335907*^9, 3.6969587655978127`*^9}, {
  3.696958818661223*^9, 3.696958836281534*^9}, {3.696958879428146*^9, 
  3.6969589425333853`*^9}, {3.696958992921929*^9, 3.696958996892584*^9}}]
}, Open  ]],

Cell[TextData[{
 "4. Plot the properly corrected count rate (with error bars) vs. distance. \
Interpolate between the data points with an interpolation order of 2. Also \
include the theoretical detection efficiency for both a line source and a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox["r", "2"]}], TraditionalForm]]],
 " (point) source. Include a legend to identify which curve is which (i.e., \
data vs. calculated)."
}], "Text",
 CellChangeTimes->{{3.696878615964126*^9, 3.696878718938452*^9}, {
  3.696878845000188*^9, 3.696878845176697*^9}}],

Cell["\<\
To make the theoretical detection efficiency viewable on the same plot, \
students should scale by the corresponding source energetic photon emission \
activity and estimate a constant intrinsic detection efficiency to get the \
two on the same order of magnitude (go with whatever value works).\
\>", "Item",
 CellChangeTimes->{{3.6968787274431553`*^9, 3.696878781241335*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PartBCurvePlot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PartBPhotonFunction", "[", "d", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", 
       RowBox[{"35", "*", "2.54"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", "Dotted"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Theoretical piecewise\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartBInterpData", "=", 
   RowBox[{
    RowBox[{"Multicolumn", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"PartBDistance", ",", "PartBBGDTCorrCountRate"}], "]"}], ",", 
      "2"}], "]"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartBInterp", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"PartBInterpData", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartBInterpPlot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PartBInterp", "[", "d", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", 
       RowBox[{"35", "*", "2.54"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "}"}]}], ",", 
     
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Interpolation\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"PartBDataPlot", ",", "PartBCurvePlot", ",", "PartBInterpPlot"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.69695802046166*^9, 3.69695814173018*^9}, {
   3.696958176965757*^9, 3.696958536611217*^9}, 3.696958791960215*^9, 
   3.696958860498108*^9, {3.696959016944523*^9, 3.6969590282628927`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{5.08, 668.8509674878699}, {15.24, 255.87679610169886`}, {
         25.4, 112.9520880719768}, {35.56, 57.93699051418917}, {45.72, 
         32.28786638771236}, {55.88, 19.69451659227043}, {66.04, 
         12.63801449376938}, {76.2, 7.979947665514043}, {86.36, 
         4.956887429965322}}], {{
          LineBox[{{5.715, 668.8509674878699}, {4.445, 668.8509674878699}}], 
          LineBox[{
           Offset[{0, 1.5}, {5.715, 668.8509674878699}], 
            Offset[{0, -1.5}, {5.715, 668.8509674878699}]}], 
          LineBox[{
           Offset[{0, 1.5}, {4.445, 668.8509674878699}], 
            Offset[{0, -1.5}, {4.445, 668.8509674878699}]}], 
          LineBox[{{5.08, 671.3528351858705}, {5.08, 666.3490997898692}}], 
          LineBox[{
           Offset[{1.5, 0}, {5.08, 671.3528351858705}], 
            Offset[{-1.5, 0}, {5.08, 671.3528351858705}]}], 
          LineBox[{
           Offset[{1.5, 0}, {5.08, 666.3490997898692}], 
            Offset[{-1.5, 0}, {5.08, 666.3490997898692}]}]}, {
          LineBox[{{15.875, 255.87679610169886`}, {14.605, 
           255.87679610169886`}}], 
          LineBox[{
           Offset[{0, 1.5}, {15.875, 255.87679610169886`}], 
            Offset[{0, -1.5}, {15.875, 255.87679610169886`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {14.605, 255.87679610169886`}], 
            Offset[{0, -1.5}, {14.605, 255.87679610169886`}]}], 
          LineBox[{{15.24, 257.7400645892908}, {15.24, 254.01352761410692`}}],
           LineBox[{
           Offset[{1.5, 0}, {15.24, 257.7400645892908}], 
            Offset[{-1.5, 0}, {15.24, 257.7400645892908}]}], 
          LineBox[{
           Offset[{1.5, 0}, {15.24, 254.01352761410692`}], 
            Offset[{-1.5, 0}, {15.24, 254.01352761410692`}]}]}, {
          LineBox[{{26.035, 112.9520880719768}, {24.764999999999997`, 
           112.9520880719768}}], 
          LineBox[{
           Offset[{0, 1.5}, {26.035, 112.9520880719768}], 
            Offset[{0, -1.5}, {26.035, 112.9520880719768}]}], 
          LineBox[{
           Offset[{0, 1.5}, {24.764999999999997`, 112.9520880719768}], 
            Offset[{0, -1.5}, {24.764999999999997`, 112.9520880719768}]}], 
          LineBox[{{25.4, 114.2675382657441}, {25.4, 111.63663787820951`}}], 
          LineBox[{
           Offset[{1.5, 0}, {25.4, 114.2675382657441}], 
            Offset[{-1.5, 0}, {25.4, 114.2675382657441}]}], 
          LineBox[{
           Offset[{1.5, 0}, {25.4, 111.63663787820951`}], 
            Offset[{-1.5, 0}, {25.4, 111.63663787820951`}]}]}, {
          LineBox[{{36.195, 57.93699051418917}, {34.925000000000004`, 
           57.93699051418917}}], 
          LineBox[{
           Offset[{0, 1.5}, {36.195, 57.93699051418917}], 
            Offset[{0, -1.5}, {36.195, 57.93699051418917}]}], 
          LineBox[{
           Offset[{0, 1.5}, {34.925000000000004`, 57.93699051418917}], 
            Offset[{0, -1.5}, {34.925000000000004`, 57.93699051418917}]}], 
          LineBox[{{35.56, 58.9029259822785}, {35.56, 56.97105504609984}}], 
          LineBox[{
           Offset[{1.5, 0}, {35.56, 58.9029259822785}], 
            Offset[{-1.5, 0}, {35.56, 58.9029259822785}]}], 
          LineBox[{
           Offset[{1.5, 0}, {35.56, 56.97105504609984}], 
            Offset[{-1.5, 0}, {35.56, 56.97105504609984}]}]}, {
          LineBox[{{46.355, 32.28786638771236}, {45.085, 32.28786638771236}}],
           LineBox[{
           Offset[{0, 1.5}, {46.355, 32.28786638771236}], 
            Offset[{0, -1.5}, {46.355, 32.28786638771236}]}], 
          LineBox[{
           Offset[{0, 1.5}, {45.085, 32.28786638771236}], 
            Offset[{0, -1.5}, {45.085, 32.28786638771236}]}], 
          LineBox[{{45.72, 33.01971923804216}, {45.72, 31.556013537382572`}}],
           LineBox[{
           Offset[{1.5, 0}, {45.72, 33.01971923804216}], 
            Offset[{-1.5, 0}, {45.72, 33.01971923804216}]}], 
          LineBox[{
           Offset[{1.5, 0}, {45.72, 31.556013537382572`}], 
            Offset[{-1.5, 0}, {45.72, 31.556013537382572`}]}]}, {
          LineBox[{{56.515, 19.69451659227043}, {55.245000000000005`, 
           19.69451659227043}}], 
          LineBox[{
           Offset[{0, 1.5}, {56.515, 19.69451659227043}], 
            Offset[{0, -1.5}, {56.515, 19.69451659227043}]}], 
          LineBox[{
           Offset[{0, 1.5}, {55.245000000000005`, 19.69451659227043}], 
            Offset[{0, -1.5}, {55.245000000000005`, 19.69451659227043}]}], 
          LineBox[{{55.88, 20.272749666423522`}, {55.88, 
           19.116283518117335`}}], 
          LineBox[{
           Offset[{1.5, 0}, {55.88, 20.272749666423522`}], 
            Offset[{-1.5, 0}, {55.88, 20.272749666423522`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {55.88, 19.116283518117335`}], 
            Offset[{-1.5, 0}, {55.88, 19.116283518117335`}]}]}, {
          LineBox[{{66.67500000000001, 12.63801449376938}, {65.405, 
           12.63801449376938}}], 
          LineBox[{
           Offset[{0, 1.5}, {66.67500000000001, 12.63801449376938}], 
            Offset[{0, -1.5}, {66.67500000000001, 12.63801449376938}]}], 
          LineBox[{
           Offset[{0, 1.5}, {65.405, 12.63801449376938}], 
            Offset[{0, -1.5}, {65.405, 12.63801449376938}]}], 
          LineBox[{{66.04, 13.106840613323069`}, {66.04, 12.16918837421569}}],
           LineBox[{
           Offset[{1.5, 0}, {66.04, 13.106840613323069`}], 
            Offset[{-1.5, 0}, {66.04, 13.106840613323069`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {66.04, 12.16918837421569}], 
            Offset[{-1.5, 0}, {66.04, 12.16918837421569}]}]}, {
          LineBox[{{76.83500000000001, 7.979947665514043}, {75.565, 
           7.979947665514043}}], 
          LineBox[{
           Offset[{0, 1.5}, {76.83500000000001, 7.979947665514043}], 
            Offset[{0, -1.5}, {76.83500000000001, 7.979947665514043}]}], 
          LineBox[{
           Offset[{0, 1.5}, {75.565, 7.979947665514043}], 
            Offset[{0, -1.5}, {75.565, 7.979947665514043}]}], 
          LineBox[{{76.2, 8.358724154877436}, {76.2, 7.6011711761506495`}}], 
          LineBox[{
           Offset[{1.5, 0}, {76.2, 8.358724154877436}], 
            Offset[{-1.5, 0}, {76.2, 8.358724154877436}]}], 
          LineBox[{
           Offset[{1.5, 0}, {76.2, 7.6011711761506495`}], 
            Offset[{-1.5, 0}, {76.2, 7.6011711761506495`}]}]}, {
          LineBox[{{86.995, 4.956887429965322}, {85.725, 4.956887429965322}}],
           LineBox[{
           Offset[{0, 1.5}, {86.995, 4.956887429965322}], 
            Offset[{0, -1.5}, {86.995, 4.956887429965322}]}], 
          LineBox[{
           Offset[{0, 1.5}, {85.725, 4.956887429965322}], 
            Offset[{0, -1.5}, {85.725, 4.956887429965322}]}], 
          LineBox[{{86.36, 5.262884531388211}, {86.36, 4.650890328542433}}], 
          LineBox[{
           Offset[{1.5, 0}, {86.36, 5.262884531388211}], 
            Offset[{-1.5, 0}, {86.36, 5.262884531388211}]}], 
          LineBox[{
           Offset[{1.5, 0}, {86.36, 4.650890328542433}], 
            Offset[{-1.5, 0}, {86.36, 
             4.650890328542433}]}]}}}, {}}, {}, {}, {{}, {}}}, {{{{}, {}, 
        TagBox[
         {RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[
          1.6], Opacity[1.], Dashing[{0, Small}], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, 
          "Charting`Private`Tag$66916#1"]& ], {}}, {{}, {}, {}}}, {}, {}}, \
{{{}, {}, 
       TagBox[
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
lww4uMOw5090EvA/PSJ9tg==
          "]]},
        Annotation[#, "Charting`Private`Tag$66967#1"]& ]}, {}, {}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"Measured\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Theoretical piecewise\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], "}"}],
                 ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Interpolation\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.85, 0.85}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Count Rate (cps)\"", 20, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Distance from source (cm)\"", 20, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->18,
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Full,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox[
     "\"Count Rate vs. Range for Line Source\"", 24, StripOnInput -> False], 
     TraditionalForm],
   PlotRange->{{0, 94.99600000000001}, {0, 735.736064236657}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           Point[{{5.08, 668.8509674878699}, {15.24, 255.87679610169886`}, {
            25.4, 112.9520880719768}, {35.56, 57.93699051418917}, {45.72, 
            32.28786638771236}, {55.88, 19.69451659227043}, {66.04, 
            12.63801449376938}, {76.2, 7.979947665514043}, {86.36, 
            4.956887429965322}}], {{
             Line[{{5.715, 668.8509674878699}, {4.445, 668.8509674878699}}], 
             Line[{
               Offset[{0, 1.5}, {5.715, 668.8509674878699}], 
               Offset[{0, -1.5}, {5.715, 668.8509674878699}]}], 
             Line[{
               Offset[{0, 1.5}, {4.445, 668.8509674878699}], 
               Offset[{0, -1.5}, {4.445, 668.8509674878699}]}], 
             Line[{{5.08, 671.3528351858705}, {5.08, 666.3490997898692}}], 
             Line[{
               Offset[{1.5, 0}, {5.08, 671.3528351858705}], 
               Offset[{-1.5, 0}, {5.08, 671.3528351858705}]}], 
             Line[{
               Offset[{1.5, 0}, {5.08, 666.3490997898692}], 
               Offset[{-1.5, 0}, {5.08, 666.3490997898692}]}]}, {
             
             Line[{{15.875, 255.87679610169886`}, {14.605, 
              255.87679610169886`}}], 
             Line[{
               Offset[{0, 1.5}, {15.875, 255.87679610169886`}], 
               Offset[{0, -1.5}, {15.875, 255.87679610169886`}]}], 
             Line[{
               Offset[{0, 1.5}, {14.605, 255.87679610169886`}], 
               Offset[{0, -1.5}, {14.605, 255.87679610169886`}]}], 
             Line[{{15.24, 257.7400645892908}, {15.24, 254.01352761410692`}}], 
             Line[{
               Offset[{1.5, 0}, {15.24, 257.7400645892908}], 
               Offset[{-1.5, 0}, {15.24, 257.7400645892908}]}], 
             Line[{
               Offset[{1.5, 0}, {15.24, 254.01352761410692`}], 
               Offset[{-1.5, 0}, {15.24, 254.01352761410692`}]}]}, {
             
             Line[{{26.035, 112.9520880719768}, {24.764999999999997`, 
              112.9520880719768}}], 
             Line[{
               Offset[{0, 1.5}, {26.035, 112.9520880719768}], 
               Offset[{0, -1.5}, {26.035, 112.9520880719768}]}], 
             Line[{
               Offset[{0, 1.5}, {24.764999999999997`, 112.9520880719768}], 
               Offset[{0, -1.5}, {24.764999999999997`, 112.9520880719768}]}], 
             
             Line[{{25.4, 114.2675382657441}, {25.4, 111.63663787820951`}}], 
             Line[{
               Offset[{1.5, 0}, {25.4, 114.2675382657441}], 
               Offset[{-1.5, 0}, {25.4, 114.2675382657441}]}], 
             Line[{
               Offset[{1.5, 0}, {25.4, 111.63663787820951`}], 
               Offset[{-1.5, 0}, {25.4, 111.63663787820951`}]}]}, {
             
             Line[{{36.195, 57.93699051418917}, {34.925000000000004`, 
              57.93699051418917}}], 
             Line[{
               Offset[{0, 1.5}, {36.195, 57.93699051418917}], 
               Offset[{0, -1.5}, {36.195, 57.93699051418917}]}], 
             Line[{
               Offset[{0, 1.5}, {34.925000000000004`, 57.93699051418917}], 
               Offset[{0, -1.5}, {34.925000000000004`, 57.93699051418917}]}], 
             
             Line[{{35.56, 58.9029259822785}, {35.56, 56.97105504609984}}], 
             Line[{
               Offset[{1.5, 0}, {35.56, 58.9029259822785}], 
               Offset[{-1.5, 0}, {35.56, 58.9029259822785}]}], 
             Line[{
               Offset[{1.5, 0}, {35.56, 56.97105504609984}], 
               Offset[{-1.5, 0}, {35.56, 56.97105504609984}]}]}, {
             Line[{{46.355, 32.28786638771236}, {45.085, 32.28786638771236}}], 
             Line[{
               Offset[{0, 1.5}, {46.355, 32.28786638771236}], 
               Offset[{0, -1.5}, {46.355, 32.28786638771236}]}], 
             Line[{
               Offset[{0, 1.5}, {45.085, 32.28786638771236}], 
               Offset[{0, -1.5}, {45.085, 32.28786638771236}]}], 
             Line[{{45.72, 33.01971923804216}, {45.72, 31.556013537382572`}}], 
             Line[{
               Offset[{1.5, 0}, {45.72, 33.01971923804216}], 
               Offset[{-1.5, 0}, {45.72, 33.01971923804216}]}], 
             Line[{
               Offset[{1.5, 0}, {45.72, 31.556013537382572`}], 
               Offset[{-1.5, 0}, {45.72, 31.556013537382572`}]}]}, {
             
             Line[{{56.515, 19.69451659227043}, {55.245000000000005`, 
              19.69451659227043}}], 
             Line[{
               Offset[{0, 1.5}, {56.515, 19.69451659227043}], 
               Offset[{0, -1.5}, {56.515, 19.69451659227043}]}], 
             Line[{
               Offset[{0, 1.5}, {55.245000000000005`, 19.69451659227043}], 
               Offset[{0, -1.5}, {55.245000000000005`, 19.69451659227043}]}], 
             
             
             Line[{{55.88, 20.272749666423522`}, {55.88, 
              19.116283518117335`}}], 
             Line[{
               Offset[{1.5, 0}, {55.88, 20.272749666423522`}], 
               Offset[{-1.5, 0}, {55.88, 20.272749666423522`}]}], 
             Line[{
               Offset[{1.5, 0}, {55.88, 19.116283518117335`}], 
               Offset[{-1.5, 0}, {55.88, 19.116283518117335`}]}]}, {
             
             Line[{{66.67500000000001, 12.63801449376938}, {65.405, 
              12.63801449376938}}], 
             Line[{
               Offset[{0, 1.5}, {66.67500000000001, 12.63801449376938}], 
               Offset[{0, -1.5}, {66.67500000000001, 12.63801449376938}]}], 
             Line[{
               Offset[{0, 1.5}, {65.405, 12.63801449376938}], 
               Offset[{0, -1.5}, {65.405, 12.63801449376938}]}], 
             Line[{{66.04, 13.106840613323069`}, {66.04, 12.16918837421569}}], 
             Line[{
               Offset[{1.5, 0}, {66.04, 13.106840613323069`}], 
               Offset[{-1.5, 0}, {66.04, 13.106840613323069`}]}], 
             Line[{
               Offset[{1.5, 0}, {66.04, 12.16918837421569}], 
               Offset[{-1.5, 0}, {66.04, 12.16918837421569}]}]}, {
             
             Line[{{76.83500000000001, 7.979947665514043}, {75.565, 
              7.979947665514043}}], 
             Line[{
               Offset[{0, 1.5}, {76.83500000000001, 7.979947665514043}], 
               Offset[{0, -1.5}, {76.83500000000001, 7.979947665514043}]}], 
             Line[{
               Offset[{0, 1.5}, {75.565, 7.979947665514043}], 
               Offset[{0, -1.5}, {75.565, 7.979947665514043}]}], 
             Line[{{76.2, 8.358724154877436}, {76.2, 7.6011711761506495`}}], 
             Line[{
               Offset[{1.5, 0}, {76.2, 8.358724154877436}], 
               Offset[{-1.5, 0}, {76.2, 8.358724154877436}]}], 
             Line[{
               Offset[{1.5, 0}, {76.2, 7.6011711761506495`}], 
               Offset[{-1.5, 0}, {76.2, 7.6011711761506495`}]}]}, {
             Line[{{86.995, 4.956887429965322}, {85.725, 4.956887429965322}}], 
             Line[{
               Offset[{0, 1.5}, {86.995, 4.956887429965322}], 
               Offset[{0, -1.5}, {86.995, 4.956887429965322}]}], 
             Line[{
               Offset[{0, 1.5}, {85.725, 4.956887429965322}], 
               Offset[{0, -1.5}, {85.725, 4.956887429965322}]}], 
             Line[{{86.36, 5.262884531388211}, {86.36, 4.650890328542433}}], 
             Line[{
               Offset[{1.5, 0}, {86.36, 5.262884531388211}], 
               Offset[{-1.5, 0}, {86.36, 5.262884531388211}]}], 
             Line[{
               Offset[{1.5, 0}, {86.36, 4.650890328542433}], 
               
               Offset[{-1.5, 0}, {86.36, 
                4.650890328542433}]}]}}}}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
             Rational[2, 3], 0, 0], 
            Dashing[{0, Small}]], 
           Line[CompressedData["
1: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
            "]]}, 
          "Charting`Private`Tag$66916#1"], {}}, {{}, {}, {}}}, {}, {}}, \
{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 
             Rational[2, 3], 0], 
            Dashing[{Small, Small}]], 
           Line[CompressedData["
1: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
lww4uMOw5090EvA/PSJ9tg==
            "]]}, 
          "Charting`Private`Tag$66967#1"]}}, {}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 94.99600000000001}, {0, 735.736064236657}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Count Rate (cps)", 20], None}, {
         Style["Distance from source (cm)", 20], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> 18, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Full, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> 
      Style["Count Rate vs. Range for Line Source", 24], 
      PlotRange -> {{0, 94.99600000000001}, {0, 735.736064236657}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       Unevaluated[
        LineLegend[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 
            Rational[2, 3], 0], 
           Dashing[{Small, Small}]]}, {"Interpolation"}, LegendMarkers -> 
         None, LabelStyle -> {}, LegendLayout -> "Column"]]]], {0.85, 0.85}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.69695845953122*^9, 3.696958476352453*^9}, {
  3.696958511259664*^9, 3.69695853740781*^9}, {3.696958777802657*^9, 
  3.6969589445636177`*^9}, {3.696958999087185*^9, 3.6969590289656878`*^9}}]
}, Open  ]],

Cell["\<\
5. From the plots created, determine at what distance, if ever, the detection \
efficiency can be described by equation 8.8 in the text vs. the appropriate \
line source equation with an error of no more than 5%. Does the result agree \
with our rule of thumb?\
\>", "Text",
 CellChangeTimes->{{3.696878784717065*^9, 3.696878847672018*^9}}],

Cell["\<\
The distance at which this line source can be treated as a point source \
(equation 8.8) is approximately equal to 10.6 cm, or L/2.\
\>", "Text",
 CellChangeTimes->{{3.696959065370618*^9, 3.696959125068445*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Area Source", "Subchapter",
 CellChangeTimes->{{3.696878861568791*^9, 3.696878864235818*^9}}],

Cell["\<\
1. Make a table for the square source data with the same information \
contained within the table for the point source analysis.\
\>", "Text",
 CellChangeTimes->{{3.696878871312168*^9, 3.6968788895593987`*^9}, {
  3.696879506161335*^9, 3.69687950628836*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PartCDistance", "=", 
   RowBox[{
    RowBox[{"List", "[", 
     RowBox[{
     "6", ",", "9", ",", "12", ",", "15", ",", "18", ",", "21", ",", "24", 
      ",", "27", ",", "30", ",", "33", ",", "36", ",", "39", ",", "42"}], 
     "]"}], "*", "2.54"}]}], " ", 
  RowBox[{"(*", " ", "cm", " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartCCounts", "=", 
   RowBox[{"{", 
    RowBox[{
    "9385", ",", "5086", ",", "2927", ",", "1818", ",", "1167", ",", "767", 
     ",", "550", ",", "1222", ",", "1000", ",", "775", ",", "655", ",", "506",
      ",", "480"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartCTimes", "=", 
   RowBox[{"{", 
    RowBox[{
    "60", ",", "60", ",", "60", ",", "60", ",", "60", ",", "60", ",", "60", 
     ",", "200", ",", "200", ",", "200", ",", "200", ",", "200", ",", "200"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PartCCountRates", "=", 
  RowBox[{
   RowBox[{"PartCCounts", "/", "PartCTimes"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartCCountRateErrors", "=", 
  RowBox[{
   SqrtBox[
    RowBox[{"PartCCounts", "/", 
     SuperscriptBox["PartCTimes", "2"]}]], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartCDistanceError", "=", 
   RowBox[{"0.25", "*", "2.54"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PartCBGCorrRates", "=", 
  RowBox[{
  "PartCCountRates", "-", "BackgroundCountRate"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartCBGCorrRateErrors", "=", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["PartCCountRateErrors", "2"], "+", 
    SuperscriptBox["BackgroundCountRateError", 
     "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{"PartCBGDTCorrRates", "=", 
  RowBox[{"DTC", "[", "PartCBGCorrRates", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartCBGDTCorrRateErrrors", "=", 
  RowBox[{"DTCError", "[", 
   RowBox[{"PartCBGCorrRates", ",", "PartCBGCorrRateErrors"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6969073701540756`*^9, 3.6969076131326365`*^9}, {
  3.696959212870598*^9, 3.696959220994519*^9}, {3.6969592569425793`*^9, 
  3.696959473422907*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "156.41666666666666`", ",", "84.76666666666667`", ",", "48.78333333333333`",
    ",", "30.3`", ",", "19.45`", ",", "12.783333333333333`", ",", 
   "9.166666666666666`", ",", "6.11`", ",", "5.`", ",", "3.875`", ",", 
   "3.275`", ",", "2.53`", ",", "2.4`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696907451610111*^9, {3.6969075558017693`*^9, 3.696907570035201*^9}, {
   3.696907608535754*^9, 3.6969076135647993`*^9}, 3.69693742503885*^9, {
   3.696959307971778*^9, 3.696959324402474*^9}, 3.6969593703850193`*^9, {
   3.6969594169033937`*^9, 3.6969594428761053`*^9}, 3.69695947462458*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.6146034944977805`", ",", "1.1886032886450288`", ",", 
   "0.9016959329815986`", ",", "0.7106335201775948`", ",", 
   "0.5693563617512908`", ",", "0.46157941413754094`", ",", 
   "0.3908679799852858`", ",", "0.17478558292948534`", ",", 
   "0.15811388300841897`", ",", "0.13919410907075055`", ",", 
   "0.1279648389206973`", ",", "0.11247221879201993`", ",", 
   "0.10954451150103323`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696907451610111*^9, {3.6969075558017693`*^9, 3.696907570035201*^9}, {
   3.696907608535754*^9, 3.6969076135647993`*^9}, 3.69693742503885*^9, {
   3.696959307971778*^9, 3.696959324402474*^9}, 3.6969593703850193`*^9, {
   3.6969594169033937`*^9, 3.6969594428761053`*^9}, 3.696959474633086*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "155.84666666666666`", ",", "84.19666666666667`", ",", "48.21333333333333`",
    ",", "29.73`", ",", "18.88`", ",", "12.213333333333333`", ",", 
   "8.596666666666666`", ",", "5.54`", ",", "4.43`", ",", 
   "3.3049999999999997`", ",", "2.705`", ",", "1.9599999999999997`", ",", 
   "1.8299999999999998`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696907451610111*^9, {3.6969075558017693`*^9, 3.696907570035201*^9}, {
   3.696907608535754*^9, 3.6969076135647993`*^9}, 3.69693742503885*^9, {
   3.696959307971778*^9, 3.696959324402474*^9}, 3.6969593703850193`*^9, {
   3.6969594169033937`*^9, 3.6969594428761053`*^9}, 3.696959474639675*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.615191767080443`", ",", "1.1894022775233692`", ",", 
   "0.9027488884266519`", ",", "0.7119691004531026`", ",", 
   "0.571022474747419`", ",", "0.4636329966207707`", ",", 
   "0.3932909581693657`", ",", "0.1801388353465182`", ",", 
   "0.16401219466856726`", ",", "0.14585952145814823`", ",", 
   "0.13518505834595776`", ",", "0.12062338081814819`", ",", 
   "0.11789826122551596`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696907451610111*^9, {3.6969075558017693`*^9, 3.696907570035201*^9}, {
   3.696907608535754*^9, 3.6969076135647993`*^9}, 3.69693742503885*^9, {
   3.696959307971778*^9, 3.696959324402474*^9}, 3.6969593703850193`*^9, {
   3.6969594169033937`*^9, 3.6969594428761053`*^9}, 3.696959474646262*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "149.7328028157786`", ",", "82.37941574818515`", ",", "47.611904830122405`",
    ",", "29.50021515410871`", ",", "18.787068637759205`", ",", 
   "12.174376626727978`", ",", "8.577347677762768`", ",", 
   "5.531970455523217`", ",", "4.424864237074597`", ",", 
   "3.3021406433954774`", ",", "2.7030842971277824`", ",", 
   "1.9589940173921885`", ",", "1.829123008682257`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696907451610111*^9, {3.6969075558017693`*^9, 3.696907570035201*^9}, {
   3.696907608535754*^9, 3.6969076135647993`*^9}, 3.69693742503885*^9, {
   3.696959307971778*^9, 3.696959324402474*^9}, 3.6969593703850193`*^9, {
   3.6969594169033937`*^9, 3.6969594428761053`*^9}, 3.6969594746532793`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.49094960727071`", ",", "1.1386136460801073`", ",", "0.880367008609459`", 
   ",", "0.7010059336628913`", ",", "0.5654149222418372`", ",", 
   "0.4606800256858096`", ",", "0.39152528628526545`", ",", 
   "0.1796170358599705`", ",", "0.16363213169460072`", ",", 
   "0.14560724673976713`", ",", "0.13499364784638618`", ",", 
   "0.1204995911419833`", ",", "0.11778528748094004`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.696907451610111*^9, {3.6969075558017693`*^9, 3.696907570035201*^9}, {
   3.696907608535754*^9, 3.6969076135647993`*^9}, 3.69693742503885*^9, {
   3.696959307971778*^9, 3.696959324402474*^9}, 3.6969593703850193`*^9, {
   3.6969594169033937`*^9, 3.6969594428761053`*^9}, 3.696959474660297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PartCDistance", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"PartCCountRates", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"PartCBGCorrRates", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"PartCBGDTCorrRates", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"PartCBGDTCorrRateErrrors", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "PartCCounts", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Distance (cm)\>\"", ",", " ", "\"\<Count Rate (cps)\>\"", ",", 
        "\"\<BG Corrected\>\"", ",", " ", "\"\<BG/DT Corrected\>\"", ",", 
        " ", "\"\<Error\>\""}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696959479488233*^9, 3.696959618986231*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Distance (cm)\"\>",
       HoldForm], 
      TagBox["\<\"Count Rate (cps)\"\>",
       HoldForm], 
      TagBox["\<\"BG Corrected\"\>",
       HoldForm], 
      TagBox["\<\"BG/DT Corrected\"\>",
       HoldForm], 
      TagBox["\<\"Error\"\>",
       HoldForm]},
     {"15.24`", "156.41666666666666`", "155.84666666666666`", 
      "149.7328028157786`", "1.49094960727071`"},
     {"22.86`", "84.76666666666667`", "84.19666666666667`", 
      "82.37941574818515`", "1.1386136460801073`"},
     {"30.48`", "48.78333333333333`", "48.21333333333333`", 
      "47.611904830122405`", "0.880367008609459`"},
     {"38.1`", "30.3`", "29.73`", "29.50021515410871`", "0.7010059336628913`"},
     {"45.72`", "19.45`", "18.88`", "18.787068637759205`", 
      "0.5654149222418372`"},
     {"53.34`", "12.783333333333333`", "12.213333333333333`", 
      "12.174376626727978`", "0.4606800256858096`"},
     {"60.96`", "9.166666666666666`", "8.596666666666666`", 
      "8.577347677762768`", "0.39152528628526545`"},
     {"68.58`", "6.11`", "5.54`", "5.531970455523217`", "0.1796170358599705`"},
     {"76.2`", "5.`", "4.43`", "4.424864237074597`", "0.16363213169460072`"},
     {"83.82000000000001`", "3.875`", "3.3049999999999997`", 
      "3.3021406433954774`", "0.14560724673976713`"},
     {"91.44`", "3.275`", "2.705`", "2.7030842971277824`", 
      "0.13499364784638618`"},
     {"99.06`", "2.53`", "1.9599999999999997`", "1.9589940173921885`", 
      "0.1204995911419833`"},
     {"106.68`", "2.4`", "1.8299999999999998`", "1.829123008682257`", 
      "0.11778528748094004`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Distance (cm)", "Count Rate (cps)", "BG Corrected", 
       "BG/DT Corrected", "Error"}}]]]], "Output",
 CellChangeTimes->{3.696959622788522*^9}]
}, Open  ]],

Cell[TextData[{
 "2. Determine the total square energetic photon emission activity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["E", "\[Gamma]"], "\[GreaterEqual]", 
     RowBox[{"30", "keV"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") with uncertainty. Assume the source strength of each source is known to \
\[PlusMinus]5%."
}], "Text",
 CellChangeTimes->{{3.696878891651491*^9, 3.696878933276836*^9}, {
  3.696879508088339*^9, 3.696879508185154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PartCSourceAges", "=", 
   RowBox[{"{", 
    RowBox[{
    "22", ",", "22", ",", "22", ",", "22", ",", "60", ",", "60", ",", "60", 
     ",", "60", ",", "60", ",", "60", ",", "60", ",", "66", ",", "66", ",", 
     "62", ",", "61"}], "}"}]}], ";", " ", 
  RowBox[{"(*", " ", "months", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PartCInitialSourceStrength", "=", 
   RowBox[{"10", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], "*", "3.7", "*", 
    SuperscriptBox["10", "10"]}]}], " ", 
  RowBox[{"(*", " ", "Bq", " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartCHalfLife", "=", 
   RowBox[{"30.08", "*", "12"}]}], " ", 
  RowBox[{"(*", " ", "months", " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PartCActivity", "=", 
  RowBox[{"Total", "[", 
   RowBox[{"PartCInitialSourceStrength", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Log", "[", "2", "]"}]}], "/", "PartCHalfLife"}], "*", 
      "PartCSourceAges"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PartCActivityError", "=", 
  RowBox[{
   SqrtBox[
    RowBox[{"Total", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.05", "*", "PartCInitialSourceStrength"}], ")"}], "2"], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "*", 
        RowBox[{
         RowBox[{"Log", "[", "2.", "]"}], "/", "PartCHalfLife"}], "*", 
        "PartCSourceAges"}], "]"}]}], "]"}]], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.696959665947682*^9, 3.6969596729623537`*^9}, {
  3.69695995318239*^9, 3.696960165738762*^9}, {3.6969601966537647`*^9, 
  3.696960248604164*^9}}],

Cell[BoxData["5.0363986314974325`*^6"], "Output",
 CellChangeTimes->{{3.6969601527069283`*^9, 3.696960167535338*^9}, 
   3.696960251161978*^9}],

Cell[BoxData["65057.6417774484`"], "Output",
 CellChangeTimes->{{3.6969601527069283`*^9, 3.696960167535338*^9}, 
   3.6969602511692*^9}]
}, Open  ]],

Cell[TextData[{
 "The Source activity was ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"5.04", "*", 
     SuperscriptBox["10", "6"]}], "\[PlusMinus]", 
    RowBox[{"7", "*", 
     SuperscriptBox["10", "4"], " ", "photons", " ", "per", " ", "second"}]}],
    TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.696960253816371*^9, 3.69696030058461*^9}}],

Cell["\<\
3. Create a function that can be plotted that will provide the total count \
rate versus distance for the square source data.\
\>", "Text",
 CellChangeTimes->{{3.6968789371869497`*^9, 3.696878958530077*^9}, {
  3.696879510552231*^9, 3.6968795106515102`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AreaOmega", "[", 
    RowBox[{"d_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "\[Pi]"}]], " ", 
    RowBox[{"ArcTan", "[", 
     FractionBox[
      RowBox[{"a", "*", "b"}], 
      RowBox[{"d", "*", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["b", "2"], "+", 
         SuperscriptBox["d", "2"]}]]}]], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PartCDetected", "[", 
    RowBox[{"d_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"PartCActivity", "*", 
    RowBox[{
     RowBox[{
      RowBox[{"AreaOmega", "[", 
       RowBox[{"d", ",", "a", ",", "b"}], "]"}], "/", "4"}], "/", "\[Pi]"}], 
    "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "muCsAir"}], "*", "d"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.696961574098097*^9, 3.6969616288438683`*^9}, {
  3.6969617489378757`*^9, 3.6969617855684147`*^9}, {3.696961836831697*^9, 
  3.6969619082463512`*^9}}],

Cell[TextData[{
 "4. Plot the properly corrected count rate (with error bars) vs. distance. \
Interpolate between the data point with an interpolation order of 2. Also \
include the theoretical detection efficiency for a square source and a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox["r", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (point) source. Include a legend to identify which curve is which (i.e., \
data vs. calculated)."
}], "Text",
 CellChangeTimes->{{3.6968789617784643`*^9, 3.696879017243536*^9}, {
  3.696879512736208*^9, 3.696879512920294*^9}}],

Cell["\<\
To make the theoretical detection efficiency viewable on the same plot, \
students should scale by the corresponding source energetic photon emission \
activity and estimate a constant intrinsic detection efficiency to get the \
two on the same order of magnitude (go with whatever value works).\
\>", "Item",
 CellChangeTimes->{{3.696879025033675*^9, 3.696879034278728*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PartCPlotData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PartCDistance", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"PartCBGDTCorrRates", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"PartCDistanceError", ",", 
         RowBox[{"PartCBGDTCorrRateErrrors", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "PartCDistance", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartCDataPlot", "=", 
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{"PartCPlotData", ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Distance (cm)\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Count Rate (cps)\>\"", ",", "20"}], "]"}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Count Rate vs. Distance for Cs-137 Area Source\>\"", ",", "24"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", "18"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Measured\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1.1", "*", 
           RowBox[{"(", 
            RowBox[{"42", "*", "2.54"}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1.1", "*", 
           RowBox[{"Max", "[", 
            RowBox[{"PartCPlotData", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1", ",", "2"}], "]"}], "]"}], "]"}]}]}], 
         "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartCInterpFunc", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"PartCPlotData", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartCInterpPlot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PartCInterpFunc", "[", "d", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "120"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Dotted"}], "}"}]}], ",", 
     
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Interpolation\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PartCTheoryPlot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"150", "/", "25000"}], "*", 
      RowBox[{"PartCDetected", "[", 
       RowBox[{"d", ",", 
        RowBox[{"4", "*", "2.54"}], ",", 
        RowBox[{"8", "*", "2.54"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", 
       RowBox[{"42", "*", "2.54"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Theoretical\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", "0.85"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"PartCDataPlot", ",", "PartCInterpPlot", ",", "PartCTheoryPlot"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.696960665313994*^9, 3.6969612669389257`*^9}, {
  3.696961479786545*^9, 3.696961513093808*^9}, {3.696961914655209*^9, 
  3.696961933330011*^9}, {3.696962037633017*^9, 3.696962100507134*^9}, {
  3.696962132833399*^9, 3.6969621550509167`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{15.24, 149.7328028157786}, {22.86, 82.37941574818515}, {
         30.48, 47.611904830122405`}, {38.1, 29.50021515410871}, {45.72, 
         18.787068637759205`}, {53.34, 12.174376626727978`}, {60.96, 
         8.577347677762768}, {68.58, 5.531970455523217}, {76.2, 
         4.424864237074597}, {83.82000000000001, 3.3021406433954774`}, {91.44,
          2.7030842971277824`}, {99.06, 1.9589940173921885`}, {106.68, 
         1.829123008682257}}], {{
          LineBox[{{15.875, 149.7328028157786}, {14.605, 149.7328028157786}}],
           LineBox[{
           Offset[{0, 1.5}, {15.875, 149.7328028157786}], 
            Offset[{0, -1.5}, {15.875, 149.7328028157786}]}], 
          LineBox[{
           Offset[{0, 1.5}, {14.605, 149.7328028157786}], 
            Offset[{0, -1.5}, {14.605, 149.7328028157786}]}], 
          LineBox[{{15.24, 151.22375242304932`}, {15.24, 
           148.24185320850788`}}], 
          LineBox[{
           Offset[{1.5, 0}, {15.24, 151.22375242304932`}], 
            Offset[{-1.5, 0}, {15.24, 151.22375242304932`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {15.24, 148.24185320850788`}], 
            Offset[{-1.5, 0}, {15.24, 148.24185320850788`}]}]}, {
          LineBox[{{23.495, 82.37941574818515}, {22.224999999999998`, 
           82.37941574818515}}], 
          LineBox[{
           Offset[{0, 1.5}, {23.495, 82.37941574818515}], 
            Offset[{0, -1.5}, {23.495, 82.37941574818515}]}], 
          LineBox[{
           Offset[{0, 1.5}, {22.224999999999998`, 82.37941574818515}], 
            Offset[{0, -1.5}, {22.224999999999998`, 82.37941574818515}]}], 
          LineBox[{{22.86, 83.51802939426526}, {22.86, 81.24080210210505}}], 
          LineBox[{
           Offset[{1.5, 0}, {22.86, 83.51802939426526}], 
            Offset[{-1.5, 0}, {22.86, 83.51802939426526}]}], 
          LineBox[{
           Offset[{1.5, 0}, {22.86, 81.24080210210505}], 
            Offset[{-1.5, 0}, {22.86, 81.24080210210505}]}]}, {
          LineBox[{{31.115000000000002`, 47.611904830122405`}, {29.845, 
           47.611904830122405`}}], 
          LineBox[{
           Offset[{0, 1.5}, {31.115000000000002`, 47.611904830122405`}], 
            Offset[{0, -1.5}, {31.115000000000002`, 47.611904830122405`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {29.845, 47.611904830122405`}], 
            Offset[{0, -1.5}, {29.845, 47.611904830122405`}]}], 
          LineBox[{{30.48, 48.49227183873187}, {30.48, 46.731537821512944`}}],
           LineBox[{
           Offset[{1.5, 0}, {30.48, 48.49227183873187}], 
            Offset[{-1.5, 0}, {30.48, 48.49227183873187}]}], 
          LineBox[{
           Offset[{1.5, 0}, {30.48, 46.731537821512944`}], 
            Offset[{-1.5, 0}, {30.48, 46.731537821512944`}]}]}, {
          LineBox[{{38.735, 29.50021515410871}, {37.465, 29.50021515410871}}],
           LineBox[{
           Offset[{0, 1.5}, {38.735, 29.50021515410871}], 
            Offset[{0, -1.5}, {38.735, 29.50021515410871}]}], 
          LineBox[{
           Offset[{0, 1.5}, {37.465, 29.50021515410871}], 
            Offset[{0, -1.5}, {37.465, 29.50021515410871}]}], 
          LineBox[{{38.1, 30.2012210877716}, {38.1, 28.799209220445817`}}], 
          LineBox[{
           Offset[{1.5, 0}, {38.1, 30.2012210877716}], 
            Offset[{-1.5, 0}, {38.1, 30.2012210877716}]}], 
          LineBox[{
           Offset[{1.5, 0}, {38.1, 28.799209220445817`}], 
            Offset[{-1.5, 0}, {38.1, 28.799209220445817`}]}]}, {
          LineBox[{{46.355, 18.787068637759205`}, {45.085, 
           18.787068637759205`}}], 
          LineBox[{
           Offset[{0, 1.5}, {46.355, 18.787068637759205`}], 
            Offset[{0, -1.5}, {46.355, 18.787068637759205`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {45.085, 18.787068637759205`}], 
            Offset[{0, -1.5}, {45.085, 18.787068637759205`}]}], 
          LineBox[{{45.72, 19.35248356000104}, {45.72, 18.22165371551737}}], 
          LineBox[{
           Offset[{1.5, 0}, {45.72, 19.35248356000104}], 
            Offset[{-1.5, 0}, {45.72, 19.35248356000104}]}], 
          LineBox[{
           Offset[{1.5, 0}, {45.72, 18.22165371551737}], 
            Offset[{-1.5, 0}, {45.72, 18.22165371551737}]}]}, {
          LineBox[{{53.975, 12.174376626727978`}, {52.705000000000005`, 
           12.174376626727978`}}], 
          LineBox[{
           Offset[{0, 1.5}, {53.975, 12.174376626727978`}], 
            Offset[{0, -1.5}, {53.975, 12.174376626727978`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {52.705000000000005`, 12.174376626727978`}], 
            Offset[{0, -1.5}, {52.705000000000005`, 12.174376626727978`}]}], 
          LineBox[{{53.34, 12.635056652413788`}, {53.34, 11.71369660104217}}],
           LineBox[{
           Offset[{1.5, 0}, {53.34, 12.635056652413788`}], 
            Offset[{-1.5, 0}, {53.34, 12.635056652413788`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {53.34, 11.71369660104217}], 
            Offset[{-1.5, 0}, {53.34, 11.71369660104217}]}]}, {
          LineBox[{{61.595, 8.577347677762768}, {60.325, 8.577347677762768}}],
           LineBox[{
           Offset[{0, 1.5}, {61.595, 8.577347677762768}], 
            Offset[{0, -1.5}, {61.595, 8.577347677762768}]}], 
          LineBox[{
           Offset[{0, 1.5}, {60.325, 8.577347677762768}], 
            Offset[{0, -1.5}, {60.325, 8.577347677762768}]}], 
          LineBox[{{60.96, 8.968872964048034}, {60.96, 8.185822391477503}}], 
          LineBox[{
           Offset[{1.5, 0}, {60.96, 8.968872964048034}], 
            Offset[{-1.5, 0}, {60.96, 8.968872964048034}]}], 
          LineBox[{
           Offset[{1.5, 0}, {60.96, 8.185822391477503}], 
            Offset[{-1.5, 0}, {60.96, 8.185822391477503}]}]}, {
          LineBox[{{69.215, 5.531970455523217}, {67.945, 5.531970455523217}}],
           LineBox[{
           Offset[{0, 1.5}, {69.215, 5.531970455523217}], 
            Offset[{0, -1.5}, {69.215, 5.531970455523217}]}], 
          LineBox[{
           Offset[{0, 1.5}, {67.945, 5.531970455523217}], 
            Offset[{0, -1.5}, {67.945, 5.531970455523217}]}], 
          LineBox[{{68.58, 5.711587491383187}, {68.58, 5.352353419663246}}], 
          LineBox[{
           Offset[{1.5, 0}, {68.58, 5.711587491383187}], 
            Offset[{-1.5, 0}, {68.58, 5.711587491383187}]}], 
          LineBox[{
           Offset[{1.5, 0}, {68.58, 5.352353419663246}], 
            Offset[{-1.5, 0}, {68.58, 5.352353419663246}]}]}, {
          LineBox[{{76.83500000000001, 4.424864237074597}, {75.565, 
           4.424864237074597}}], 
          LineBox[{
           Offset[{0, 1.5}, {76.83500000000001, 4.424864237074597}], 
            Offset[{0, -1.5}, {76.83500000000001, 4.424864237074597}]}], 
          LineBox[{
           Offset[{0, 1.5}, {75.565, 4.424864237074597}], 
            Offset[{0, -1.5}, {75.565, 4.424864237074597}]}], 
          LineBox[{{76.2, 4.5884963687691975`}, {76.2, 4.261232105379996}}], 
          LineBox[{
           Offset[{1.5, 0}, {76.2, 4.5884963687691975`}], 
            Offset[{-1.5, 0}, {76.2, 4.5884963687691975`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {76.2, 4.261232105379996}], 
            Offset[{-1.5, 0}, {76.2, 4.261232105379996}]}]}, {
          LineBox[{{84.45500000000001, 3.3021406433954774`}, {83.185, 
           3.3021406433954774`}}], 
          LineBox[{
           Offset[{0, 1.5}, {84.45500000000001, 3.3021406433954774`}], 
            Offset[{0, -1.5}, {84.45500000000001, 3.3021406433954774`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {83.185, 3.3021406433954774`}], 
            Offset[{0, -1.5}, {83.185, 3.3021406433954774`}]}], 
          LineBox[{{83.82000000000001, 3.4477478901352447`}, {
           83.82000000000001, 3.15653339665571}}], 
          LineBox[{
           Offset[{1.5, 0}, {83.82000000000001, 3.4477478901352447`}], 
            Offset[{-1.5, 0}, {83.82000000000001, 3.4477478901352447`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {83.82000000000001, 3.15653339665571}], 
            Offset[{-1.5, 0}, {83.82000000000001, 3.15653339665571}]}]}, {
          LineBox[{{92.075, 2.7030842971277824`}, {90.80499999999999, 
           2.7030842971277824`}}], 
          LineBox[{
           Offset[{0, 1.5}, {92.075, 2.7030842971277824`}], 
            Offset[{0, -1.5}, {92.075, 2.7030842971277824`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {90.80499999999999, 2.7030842971277824`}], 
            Offset[{0, -1.5}, {90.80499999999999, 2.7030842971277824`}]}], 
          LineBox[{{91.44, 2.8380779449741684`}, {91.44, 
           2.5680906492813964`}}], 
          LineBox[{
           Offset[{1.5, 0}, {91.44, 2.8380779449741684`}], 
            Offset[{-1.5, 0}, {91.44, 2.8380779449741684`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {91.44, 2.5680906492813964`}], 
            Offset[{-1.5, 0}, {91.44, 2.5680906492813964`}]}]}, {
          LineBox[{{99.69500000000001, 1.9589940173921885`}, {98.425, 
           1.9589940173921885`}}], 
          LineBox[{
           Offset[{0, 1.5}, {99.69500000000001, 1.9589940173921885`}], 
            Offset[{0, -1.5}, {99.69500000000001, 1.9589940173921885`}]}], 
          LineBox[{
           Offset[{0, 1.5}, {98.425, 1.9589940173921885`}], 
            Offset[{0, -1.5}, {98.425, 1.9589940173921885`}]}], 
          LineBox[{{99.06, 2.0794936085341718`}, {99.06, 
           1.8384944262502052`}}], 
          LineBox[{
           Offset[{1.5, 0}, {99.06, 2.0794936085341718`}], 
            Offset[{-1.5, 0}, {99.06, 2.0794936085341718`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {99.06, 1.8384944262502052`}], 
            Offset[{-1.5, 0}, {99.06, 1.8384944262502052`}]}]}, {
          LineBox[{{107.31500000000001`, 1.829123008682257}, {106.045, 
           1.829123008682257}}], 
          LineBox[{
           Offset[{0, 1.5}, {107.31500000000001`, 1.829123008682257}], 
            Offset[{0, -1.5}, {107.31500000000001`, 1.829123008682257}]}], 
          LineBox[{
           Offset[{0, 1.5}, {106.045, 1.829123008682257}], 
            Offset[{0, -1.5}, {106.045, 1.829123008682257}]}], 
          LineBox[{{106.68, 1.946908296163197}, {106.68, 1.711337721201317}}],
           LineBox[{
           Offset[{1.5, 0}, {106.68, 1.946908296163197}], 
            Offset[{-1.5, 0}, {106.68, 1.946908296163197}]}], 
          LineBox[{
           Offset[{1.5, 0}, {106.68, 1.711337721201317}], 
            Offset[{-1.5, 0}, {106.68, 
             1.711337721201317}]}]}}}, {}}, {}, {}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{0, Small}], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag$75519#1"]& ]}, {}, {}}, {{{}, {}, 
       
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[1.6],
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
EhJzThUd1e8o+B/oLj0M
          "]]},
        Annotation[#, "Charting`Private`Tag$75569#1"]& ]}, {}, {}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"Measured\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Interpolation\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], "}"}],
                 ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Theoretical\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.85, 0.85}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Count Rate (cps)\"", 20, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Distance (cm)\"", 20, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->18,
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Full,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox[
     "\"Count Rate vs. Distance for Cs-137 Area Source\"", 24, StripOnInput -> 
      False], TraditionalForm],
   PlotRange->{{0, 117.34800000000001`}, {0, 164.70608309735647`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           Point[{{15.24, 149.7328028157786}, {22.86, 82.37941574818515}, {
            30.48, 47.611904830122405`}, {38.1, 29.50021515410871}, {45.72, 
            18.787068637759205`}, {53.34, 12.174376626727978`}, {60.96, 
            8.577347677762768}, {68.58, 5.531970455523217}, {76.2, 
            4.424864237074597}, {83.82000000000001, 3.3021406433954774`}, {
            91.44, 2.7030842971277824`}, {99.06, 1.9589940173921885`}, {
            106.68, 1.829123008682257}}], {{
             Line[{{15.875, 149.7328028157786}, {14.605, 149.7328028157786}}], 
             Line[{
               Offset[{0, 1.5}, {15.875, 149.7328028157786}], 
               Offset[{0, -1.5}, {15.875, 149.7328028157786}]}], 
             Line[{
               Offset[{0, 1.5}, {14.605, 149.7328028157786}], 
               Offset[{0, -1.5}, {14.605, 149.7328028157786}]}], 
             
             Line[{{15.24, 151.22375242304932`}, {15.24, 
              148.24185320850788`}}], 
             Line[{
               Offset[{1.5, 0}, {15.24, 151.22375242304932`}], 
               Offset[{-1.5, 0}, {15.24, 151.22375242304932`}]}], 
             Line[{
               Offset[{1.5, 0}, {15.24, 148.24185320850788`}], 
               Offset[{-1.5, 0}, {15.24, 148.24185320850788`}]}]}, {
             
             Line[{{23.495, 82.37941574818515}, {22.224999999999998`, 
              82.37941574818515}}], 
             Line[{
               Offset[{0, 1.5}, {23.495, 82.37941574818515}], 
               Offset[{0, -1.5}, {23.495, 82.37941574818515}]}], 
             Line[{
               Offset[{0, 1.5}, {22.224999999999998`, 82.37941574818515}], 
               Offset[{0, -1.5}, {22.224999999999998`, 82.37941574818515}]}], 
             
             Line[{{22.86, 83.51802939426526}, {22.86, 81.24080210210505}}], 
             Line[{
               Offset[{1.5, 0}, {22.86, 83.51802939426526}], 
               Offset[{-1.5, 0}, {22.86, 83.51802939426526}]}], 
             Line[{
               Offset[{1.5, 0}, {22.86, 81.24080210210505}], 
               Offset[{-1.5, 0}, {22.86, 81.24080210210505}]}]}, {
             
             Line[{{31.115000000000002`, 47.611904830122405`}, {29.845, 
              47.611904830122405`}}], 
             Line[{
               Offset[{0, 1.5}, {31.115000000000002`, 47.611904830122405`}], 
               
               Offset[{0, -1.5}, {31.115000000000002`, 
                47.611904830122405`}]}], 
             Line[{
               Offset[{0, 1.5}, {29.845, 47.611904830122405`}], 
               Offset[{0, -1.5}, {29.845, 47.611904830122405`}]}], 
             Line[{{30.48, 48.49227183873187}, {30.48, 46.731537821512944`}}], 
             Line[{
               Offset[{1.5, 0}, {30.48, 48.49227183873187}], 
               Offset[{-1.5, 0}, {30.48, 48.49227183873187}]}], 
             Line[{
               Offset[{1.5, 0}, {30.48, 46.731537821512944`}], 
               Offset[{-1.5, 0}, {30.48, 46.731537821512944`}]}]}, {
             Line[{{38.735, 29.50021515410871}, {37.465, 29.50021515410871}}], 
             Line[{
               Offset[{0, 1.5}, {38.735, 29.50021515410871}], 
               Offset[{0, -1.5}, {38.735, 29.50021515410871}]}], 
             Line[{
               Offset[{0, 1.5}, {37.465, 29.50021515410871}], 
               Offset[{0, -1.5}, {37.465, 29.50021515410871}]}], 
             Line[{{38.1, 30.2012210877716}, {38.1, 28.799209220445817`}}], 
             Line[{
               Offset[{1.5, 0}, {38.1, 30.2012210877716}], 
               Offset[{-1.5, 0}, {38.1, 30.2012210877716}]}], 
             Line[{
               Offset[{1.5, 0}, {38.1, 28.799209220445817`}], 
               Offset[{-1.5, 0}, {38.1, 28.799209220445817`}]}]}, {
             
             Line[{{46.355, 18.787068637759205`}, {45.085, 
              18.787068637759205`}}], 
             Line[{
               Offset[{0, 1.5}, {46.355, 18.787068637759205`}], 
               Offset[{0, -1.5}, {46.355, 18.787068637759205`}]}], 
             Line[{
               Offset[{0, 1.5}, {45.085, 18.787068637759205`}], 
               Offset[{0, -1.5}, {45.085, 18.787068637759205`}]}], 
             Line[{{45.72, 19.35248356000104}, {45.72, 18.22165371551737}}], 
             Line[{
               Offset[{1.5, 0}, {45.72, 19.35248356000104}], 
               Offset[{-1.5, 0}, {45.72, 19.35248356000104}]}], 
             Line[{
               Offset[{1.5, 0}, {45.72, 18.22165371551737}], 
               Offset[{-1.5, 0}, {45.72, 18.22165371551737}]}]}, {
             
             Line[{{53.975, 12.174376626727978`}, {52.705000000000005`, 
              12.174376626727978`}}], 
             Line[{
               Offset[{0, 1.5}, {53.975, 12.174376626727978`}], 
               Offset[{0, -1.5}, {53.975, 12.174376626727978`}]}], 
             Line[{
               Offset[{0, 1.5}, {52.705000000000005`, 12.174376626727978`}], 
               
               Offset[{0, -1.5}, {52.705000000000005`, 
                12.174376626727978`}]}], 
             Line[{{53.34, 12.635056652413788`}, {53.34, 11.71369660104217}}], 
             Line[{
               Offset[{1.5, 0}, {53.34, 12.635056652413788`}], 
               Offset[{-1.5, 0}, {53.34, 12.635056652413788`}]}], 
             Line[{
               Offset[{1.5, 0}, {53.34, 11.71369660104217}], 
               Offset[{-1.5, 0}, {53.34, 11.71369660104217}]}]}, {
             Line[{{61.595, 8.577347677762768}, {60.325, 8.577347677762768}}], 
             Line[{
               Offset[{0, 1.5}, {61.595, 8.577347677762768}], 
               Offset[{0, -1.5}, {61.595, 8.577347677762768}]}], 
             Line[{
               Offset[{0, 1.5}, {60.325, 8.577347677762768}], 
               Offset[{0, -1.5}, {60.325, 8.577347677762768}]}], 
             Line[{{60.96, 8.968872964048034}, {60.96, 8.185822391477503}}], 
             Line[{
               Offset[{1.5, 0}, {60.96, 8.968872964048034}], 
               Offset[{-1.5, 0}, {60.96, 8.968872964048034}]}], 
             Line[{
               Offset[{1.5, 0}, {60.96, 8.185822391477503}], 
               Offset[{-1.5, 0}, {60.96, 8.185822391477503}]}]}, {
             Line[{{69.215, 5.531970455523217}, {67.945, 5.531970455523217}}], 
             Line[{
               Offset[{0, 1.5}, {69.215, 5.531970455523217}], 
               Offset[{0, -1.5}, {69.215, 5.531970455523217}]}], 
             Line[{
               Offset[{0, 1.5}, {67.945, 5.531970455523217}], 
               Offset[{0, -1.5}, {67.945, 5.531970455523217}]}], 
             Line[{{68.58, 5.711587491383187}, {68.58, 5.352353419663246}}], 
             Line[{
               Offset[{1.5, 0}, {68.58, 5.711587491383187}], 
               Offset[{-1.5, 0}, {68.58, 5.711587491383187}]}], 
             Line[{
               Offset[{1.5, 0}, {68.58, 5.352353419663246}], 
               Offset[{-1.5, 0}, {68.58, 5.352353419663246}]}]}, {
             Line[{{76.83500000000001, 4.424864237074597}, {75.565, 
              4.424864237074597}}], 
             Line[{
               Offset[{0, 1.5}, {76.83500000000001, 4.424864237074597}], 
               Offset[{0, -1.5}, {76.83500000000001, 4.424864237074597}]}], 
             Line[{
               Offset[{0, 1.5}, {75.565, 4.424864237074597}], 
               Offset[{0, -1.5}, {75.565, 4.424864237074597}]}], 
             Line[{{76.2, 4.5884963687691975`}, {76.2, 4.261232105379996}}], 
             Line[{
               Offset[{1.5, 0}, {76.2, 4.5884963687691975`}], 
               Offset[{-1.5, 0}, {76.2, 4.5884963687691975`}]}], 
             Line[{
               Offset[{1.5, 0}, {76.2, 4.261232105379996}], 
               Offset[{-1.5, 0}, {76.2, 4.261232105379996}]}]}, {
             
             Line[{{84.45500000000001, 3.3021406433954774`}, {83.185, 
              3.3021406433954774`}}], 
             Line[{
               Offset[{0, 1.5}, {84.45500000000001, 3.3021406433954774`}], 
               Offset[{0, -1.5}, {84.45500000000001, 3.3021406433954774`}]}], 
             
             Line[{
               Offset[{0, 1.5}, {83.185, 3.3021406433954774`}], 
               Offset[{0, -1.5}, {83.185, 3.3021406433954774`}]}], 
             
             Line[{{83.82000000000001, 3.4477478901352447`}, {
              83.82000000000001, 3.15653339665571}}], 
             Line[{
               Offset[{1.5, 0}, {83.82000000000001, 3.4477478901352447`}], 
               Offset[{-1.5, 0}, {83.82000000000001, 3.4477478901352447`}]}], 
             
             Line[{
               Offset[{1.5, 0}, {83.82000000000001, 3.15653339665571}], 
               Offset[{-1.5, 0}, {83.82000000000001, 3.15653339665571}]}]}, {
             
             Line[{{92.075, 2.7030842971277824`}, {90.80499999999999, 
              2.7030842971277824`}}], 
             Line[{
               Offset[{0, 1.5}, {92.075, 2.7030842971277824`}], 
               Offset[{0, -1.5}, {92.075, 2.7030842971277824`}]}], 
             Line[{
               Offset[{0, 1.5}, {90.80499999999999, 2.7030842971277824`}], 
               Offset[{0, -1.5}, {90.80499999999999, 2.7030842971277824`}]}], 
             
             
             Line[{{91.44, 2.8380779449741684`}, {91.44, 
              2.5680906492813964`}}], 
             Line[{
               Offset[{1.5, 0}, {91.44, 2.8380779449741684`}], 
               Offset[{-1.5, 0}, {91.44, 2.8380779449741684`}]}], 
             Line[{
               Offset[{1.5, 0}, {91.44, 2.5680906492813964`}], 
               Offset[{-1.5, 0}, {91.44, 2.5680906492813964`}]}]}, {
             
             Line[{{99.69500000000001, 1.9589940173921885`}, {98.425, 
              1.9589940173921885`}}], 
             Line[{
               Offset[{0, 1.5}, {99.69500000000001, 1.9589940173921885`}], 
               Offset[{0, -1.5}, {99.69500000000001, 1.9589940173921885`}]}], 
             
             Line[{
               Offset[{0, 1.5}, {98.425, 1.9589940173921885`}], 
               Offset[{0, -1.5}, {98.425, 1.9589940173921885`}]}], 
             
             Line[{{99.06, 2.0794936085341718`}, {99.06, 
              1.8384944262502052`}}], 
             Line[{
               Offset[{1.5, 0}, {99.06, 2.0794936085341718`}], 
               Offset[{-1.5, 0}, {99.06, 2.0794936085341718`}]}], 
             Line[{
               Offset[{1.5, 0}, {99.06, 1.8384944262502052`}], 
               Offset[{-1.5, 0}, {99.06, 1.8384944262502052`}]}]}, {
             
             Line[{{107.31500000000001`, 1.829123008682257}, {106.045, 
              1.829123008682257}}], 
             Line[{
               Offset[{0, 1.5}, {107.31500000000001`, 1.829123008682257}], 
               Offset[{0, -1.5}, {107.31500000000001`, 1.829123008682257}]}], 
             
             Line[{
               Offset[{0, 1.5}, {106.045, 1.829123008682257}], 
               Offset[{0, -1.5}, {106.045, 1.829123008682257}]}], 
             Line[{{106.68, 1.946908296163197}, {106.68, 1.711337721201317}}], 
             Line[{
               Offset[{1.5, 0}, {106.68, 1.946908296163197}], 
               Offset[{-1.5, 0}, {106.68, 1.946908296163197}]}], 
             Line[{
               Offset[{1.5, 0}, {106.68, 1.711337721201317}], 
               
               Offset[{-1.5, 0}, {106.68, 
                1.711337721201317}]}]}}}}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 
             Rational[2, 3], 0], 
            Dashing[{0, Small}]], 
           Line[CompressedData["
1:eJwVl3k4Vd8Xxs0zmWcqczKEQsh5SebpGu+93AZTigZCUgmVEEUqkqRCNBhT
GYovkSIpQ5JoUFGmMiX38ru/v87zec5z9lnvu9baa++1fgfcAtlYWFiqWVlY
/v907eVftbheCSPtzYKZjaEQD91xh3urMtI6BXq/PwzBBT3rOmdPDcQK8L2w
pe7G++wNjb+FtTFfX/3H6rE/zhaceM0mo4fMrznpmZY7IXXxa3LmNQNUDX0L
p1RQIb2++tTfIgMEkFU5Qq5RIduUeIJWbgD31o2jyclUKE6vi1RvNsBibHPx
1C4qVB0P7qwbNQDNP5/fR4wKAw6G4VeDjTj215tcEU2BS4TkiP7LjVDweCro
60TGGQ8787fzmzDWtXu0RNELsg86ZdlYDfFUZcz2joAXSsU8FvT4DfEpYMG9
9p8n+t5uL89YbQilO7V7eN95QoUUoUSyNUSq7WCmf7onmpyuc3VdMcR8z9kv
3FyeYFjPdb4yM4KKVu4eYYY70oti7jKsjeDDVyfHNeEOFS6WJG2SEb70BEXz
f3SHYwufRVqgEcZ1AvW2PXFHztY1VY7njDA2T78REesOYzhktQ8bIaIv+3gz
uzsObb6x40WCMUa74xXXyrrBPl9o1iHVGO3Eet0lATcocR9L6rxkjPEoxR9f
Vkjo6vGq6C42xrT1F8cP30jQOSjAPtTJ/H7f8NSBShJGiw4X/ZHdjLJ3ZZka
ziT4ijtPyFVtRppsidu7866wmvoXs/+rCRwOZN6xP+yMI7YXNf8bN0Guy6Ph
bn9nlN7QHhCbN4EVLTU22NUZ0h47N9fwmCKTxX6xap0zxh+3LLDrmMJ4t9jX
7kEnZCakR1yJNsXlB0NnjLY54YuE2v5ngmZId/GWPKfoiHgz0i5Z4y24lNhl
HT1jB9vteX+MLLeAQ8B7LvyzHYTifp30dNyCs2/9xY6+tkNu8+mi9J1bMKgk
nFd11w6P7Wt/cSVvweWuqomWADtMk5WjZt5vQdBO9agD722xPXIupeOoOY6T
Gtb3ddjApPTKg9gGAhFHKtf9+bANVu86GZNtBA5e/XN4a+c2OLNw2Ox4S8B2
7+vo/MZt8Hfb/574RiBRaMeF44XbYH107Yk4TsAyrE/l2YFtOLh6/pbFeqD2
uurzBK5teLb7+kRzFFCdv4211cwKoX9/x7UJWqBDP9UhoMMSJmFBkt9FLbCL
lHK2rtESPD8H7rJLWyAByilrqi1R+KG5z1yJ+T5dtVkszxJDTy9pVRtaQNH+
SEbYQUu4nN7cf2OHBViLKo1JkpbQF43XPVphgU2vdWcvB1lgcb3wkLanJfb9
cF9tJgOY3b2Xf/nyVswLGwt+uGGK36L2O72arDCfOf6vlNsYI6k7vcK5rWHu
3/Du5eONsJs6bPfN0AatNk+ObeLQh7yeYiKPmQ0MRdpm7Rb1MBn+rGm9hQ1e
luY5BE7q4eK8sFm4gw08g8oulffrYYhRorOywwZ8z7dfvXJfD+ECg2IyyTYY
dp4LrSbrIWcdhhw/MNeLZl0n/mADxv15Dj04YQstfy3ewWUdTOZZPWk4ZYuo
vcq8L8d1MPU+jrs92RZPFFtsWgZ08Mdl8ernTFsYnuOJ//pQBwumP58JFdvi
T9L5r08P6IBNvENyT5ct3um610581YbMs/O1Cmvt4NuwqS2mVwvWKlJsZ5rs
MCIddb5pUBNjfjbFps/tIMuZtfisUxOpNw47T7fbIfjJuS9vGjXRrdifQ+m1
g9kFNj3+Qk3slLlioDVqh+GOpYalfZo4IiQX+EbQHqsSNxb1sGri3l/FNjmK
PZa5GzID9dbBxchlfxfNHq+javofqazDn8gT4qf97FFZkZIrLr0Om2eGd06G
2OPh2Yr8iWUNtE7kLzbG2qOuS/iqwisNDH9RWh9UYI97eRLkyBANiL5SO1c+
ZQ9Ze+MZ9nJ1LE9tKHw5aw93hblTFbfU8VPUtH5k0R6pCVL7QrLU0UR2+SnN
4QB29jRwnFDHoZHD1vHSDmB8MJl94ayOnqW2ZZKFA7Qnb5wrnFZDlmbIgZkL
DojKvHb+2hY1yCeVuRoaOqLss31TOl0Fd0rvNy+aOMJa2TRkekYFxr13DZ8Q
jtjLf6CX+ksFHkrF8lZ2jvB5fWPCZUAFqfX5oyRfR/SrGmjXPVbB0nRG3L4E
R9gIco5dOqyCAUpEeUGnIxrTY71fLyoje/1mYbHdTsgR6ZsUpivhpazFppkM
Z+wVI/MPr6yBiXxTum6fC0Q09ASVMxTwRVllaGzABSMijFfkOAUkr09cXzDs
wtxP1BpSDyig38S+VXrMBaeEL+hPOSngMOXtEivdBXeK2ml5fAqgOoQZ/BR2
hdBgW0vhSXlcTorPqzd0hVlHe05KhBz2puq3yGx2hde78321/nIwT//6K8rU
FanFPpNLbnL4lrVtsx5cYXuNr7JcTw4bb/P2FNq5YuZ1S/LIlCzetmTwnvd1
hSy1IibygCyE2G9G7EpwRR0rzc/sqAy4Fhvcf59yBe2yib9TiAyWJz/qx59x
xZG0Kb1wHxlMDcj8zk91hcStYeMFUxl0VWbs+3TZFWyh/eOTDGlc8IsP2nHX
FacjtCYunpaGZNNOMq3HFQ47t7vU3ZKC0ONYo4k+VwhaafBbX5YCV2mu5PH3
rrBJeXFxJEkKC1f6e3KHXKFsfkGEtl8K/WGupMFRV5zdalZhaiKFnLWw92G4
grvlT1JZryQU41ebUdRIqLs5diVMThKlh3iUPmqQYFg/ZFgiLAnzoN/cu9aT
EC2NnzOckqA5NHcHbyDB/YrNxaZpCeRK7A6JNiHBu37PnNVzCcjcKc3JYs6h
G2f+/fp4WALFuVlxciQSUl5VTVnvl4Dx+big6+4kGHm9520OkAA5wk3/NpmE
Ed098bMkCVw2n3/x0I+Eixy5x820JSDevWWxN4oEXQPnOzt/iKOgRW2YcoSE
uMJ28aUhcRg8XtXy8SgJOdTqS8V94nC79jn9WxwJa9JeDZi1iiNj92mNuRRm
/GIi4fZF4hCid3iLXychuHCkZ3GPOPImq7dk3yBByUqtqMVPHDqf85TlC0go
VO1JK/ARh1PrwSnlEhJWyiPyrzqJIzVd/IxBFQksY21v9+uLg1fV96HbcxK2
DT0JKVkRw14Zwv7uCxIaDKwzBP+J4aWg0hB7BwmTlf2khFkxpM7/4KzuImG3
jnzBtTExCLUd8pQaIOGljELa1R4xiIacnf0wToJTE1fYg/tiCN+xP2njFAk8
VXo2SiVi6HYnyaf9JiHqVdDj/AIxXDSTsjKfJ2H/iamQ11fFICV0KzOfeW7o
eBcjNZsiBvmKWv1AUTfYUo/EUUPFcKzwWusTcTdYfrfmfhssho9X4qiSUm6Y
vKq4jhoohrwE64Tncm7gOPTwVNp2MazxePtmnaobcve3vul2FYPqwtjBSSM3
jMRkt9/ZKAadLTJlh2luGPvBYZ6wKIoq5T1LbDvdoBX63yPfOVEY89XYnPNz
g2Orw1P936KwfEf+VLDbDRvoL8LejIrCKyxb5G2YG4L3h4a/fyeKE4VSEVqJ
brgfajcgVi2KLkHJzZ9L3ZDR5W+lHyqK8CHRZnsWd5Rtkk2QeCWCtlbfJ3fY
mOe06zbDWm0iUCwresTH6Y4Pa575oFkEL0+Y3HvJ646qPXcqfWpEoLTW75K9
mDv8xbX6/QtF8Ma/Yre9mjvaXrGz1R4TwYYxFwF7R3fkd3G8Oa4hgqmZVE+7
bHecknTy9Y8Qho1ua46dtgdU1IcqQt8Lgsxl69Gl64HqnPS5wA5B7P34QtBb
3wNPBY9eDWkQxLmzr+ICjDzg+GdBMLdQEH0/eoJOWDC5OiMtI1wQAflf9as9
PfBNadtCp5AgEkRY29fEesAn925EpqsALo4mnLod54FrK7QV6W0CKGrgMNc5
6YEdfrbjdzYL4OU+ngrTJA9Q1VrGZ5QEIPJyVZbXBQ9sLt6eJDvPj/wERf/U
Ig8kZYpo1ubx4+mM6dJCpwfCeA5LbV3kw42OR37ubzxgsXnH6+UpPpwqNHhZ
2u0Bd3V2l5bvfLDzXn8lsN8DW0xjC8N7+NBTK2vU/dkDipYWZc7lfPgZvxhe
OusB0Y5/mwT28kFS+NHPAFlPvOkyFb72jReLo/pujfKeeF5ytaHiIy8G/yut
kVvtCTrxyPBNLy9uHCpKeqvsCZ2Ctcc2tPJC690lNWh74ppDs//B27ywzIvw
k4MnyiVNiuZCeLFfS3/gTaAnyq7NLUgweBC5IPtvR7AndqG2cn6OB8ea2GUn
93pC4OF96ZFJHpwl91L4DnrCVXbt95FPPCg+Ff3eMsYT2a2bz8S28ODL4NP+
qnOeUCvV/yKSwYOx27f/WmR4IjZuxOVJCg+mw9OluzI98Va1JTjyFA9WePzI
49me2DMmmssfzQP5TZz9Krc84eHxiadrBw+80hzeXXrkCdUay6XHejygkTcu
KNcy16/7LKerxYMAZQWpynrmPSS97EeFGg8O1Ux6df7nCb6qd3Ef5XiQ/i2j
j6uDGd8gpaaDiwcvt/T3Hv7kiftPVbfyD3Njy2RAD4XXCzfJQ2uqLnBDss7m
Zj2/F/bxFl0SOseNyTOaB1cLeSHjka5mQDI38tZO838T9cIX/uRKxgluLHsc
3XpQ3gvFF93xM5QbDXUZlYm6XmhUs3Ut2cYNi+Sn6VWeXlB2KrNo+MOFbSrS
ToI3vZjzIXKvvSkXHky0rA0o8ELq8Mdkx01cUHl0aL62yAv6BfvY7XS5wGH/
+nrwXS/wtLBz6ilzoelA4p/mB17oDeCzfMLHBfO62ayY5174Lh9/q7WfE4Zu
b778GGfyfnGOawc5oRGXEt1k5A3nnLem5PMcqDct5HQ08Yb0VyVZ1zMccF1o
uNBr5o3gKWd3ixMciN4/d2/UwhuFbiZ9qw5woM1352chR28c27pdkebMgeDN
hvY+O71xr3Pg0WN+DpT8+Sw3m+QNwbNFqyLi2aEZuLlBdcAbuadFa89Q2HBe
yfnfyUFvkMUFNrS4smF22G/TlyFv9A2ZqgvYsuEpNfVu3ldvyKmbX3loyAY3
1+EsqQlvNJ96dfa4OBuOmJ4+yMtCxtUIqbvdb1jRJvJm7YQqGTZq5Lf57qzQ
fv3N10GDDIq2zAEhR1ZcSP2XVaJJZt7rhNNOW7HCl1tFKEiXDIWSG47pm1gx
RY/6N2RMxppR5wEpaVZIjsp3dzmQUZjTozs1xILAp8GnHoSRcf9NavPTQyyY
3Pfz8LYIMm4G9pv0hLIgWiE0pC+KDKcfSR9mA1mQcuyA29+jZLyskr7iTWZB
uUnUGrNEMjzDZjhubWEB/eHJ+uYcMh7EXrpO4mNBYhBnucc1MiQnde/LcLBg
leSZW9+uk+F3eXvb+6UVQikyJYW7kAyxazW5e76uEDYGGWSHMjLyZ76pXapa
IS6U5c2+bSbDtkXqPznyCiG/Y82ofysZY9SfPCJOK0Sh0M0Ps21kLLcn3pK3
XCEe7ytskuwkYzcU3kRprRAf199Lp/aTERjeKGjEtkJoFNdofRknY/bfsMCP
imWiIb8n4LcEBbvzTipxKi0TnxzX7oiSpjB9oAr/klkmWBb3UZZkKfj9KT3h
u8gyYUniduZcQ4FvhfysAtsy0cpqYiSjScHIUhn/+a8MosPvOq+FOQX/GbUI
xNxhEBNC4+ytoGDI/DIe32IQQnXGy/ZbKYgca/3Lf41BuIq9/eNhS4HwOpv5
mfMMoruZYzDYjYIFUrNqaxSDGFDZW5oeREG6/R2vQ7YMYqnrYbHEHgqskiO7
eLcyCPnj7LdyQiiICMnvrN7CIGi9uVkFBymArATZ2YBBfDr9Ou5xDAVJa2Ou
x69mEKz68ke3HKeA95il2TNZBqE0FBzZdIICtpi9NHlJBhFgyLa34xSFeV9+
ryUoyCB+fN/o/ukcBR/69Fl+L9EJnsx4p8AMCtY5/W0YXqATGkSnzc9MCqaD
FDhGZujE3qzdZrPZFPw6lSijPU4nJm1yVHluMePf2xP930c6sWr2++q0QgqK
6Zd9fAfoxIZ8A1nRYgpM9WuaBN7RibC/HULy9ynoOCOvWNpFJ2aLVxZ0H1Fw
c3A778wzOvHdyzo/uYYCY/Zy/eAmOtHPkWb7tY6CPddtJKYb6ETdTtkrlxsp
yDW25zKuoxP3hHZZTDcxeVO1+N/HdCKv/vaYXQuFOd+CBl8+pBMJ0ptMGC+Y
fk3mZhVX0omI1qNfvDoouPvf2rNV5XQiKKIppbyTggq+CaM3pXTCrsvlg383
Uw/D64nVXTphEnv55JNeZv3cnruUU0IntLQ+rpfqp6C/dUCdvZhOCCftPfZy
kIKUoOjDAoV0gs2wQkVlmKnv+4ZN928x9X1d6Dj+mYI7g7r3dt5k6sswj3z3
lYI1tpGDajfoxDvitILedwr017G2rlynE20T7S0poxQMn+gO/pVHJ2qviu4f
+UmBuuP4s7FrTL12FEnzCWZ+zzkM/Mtl6l24/jRrioLEbb+LFZmcXvg96Pdv
ph/hHzd4XmXqd9de5TBLgauEcHheDlM/a8SjgnkKrmonh/67QicCy2p3LP+l
4HSd7Zo9TPaisfKQlyjgaXBO+5lNJ2z5bcsrGBSoGF+timWySc05Mj8LFYNq
OpmqTNba3csSyEaF7llureEsOqEoIV/ylIMK+UD12LtMFm72I0lzU1HwIC05
hclsYSWLYbxUPD9i4nyMyTOK0zfa+ak4/UC7I47JIx2G9qpCVHwM2M2ezeS+
mON/YoWp6Er5MfMfk9s0nuX0i1KxQ6302jKTa/v4tupLUJFoVMfizIzn3inS
r7NSVDg+FVIoZ3KefnbmNxkqimuL/6gw9aV/GjIl5KnI10qOv8fk+HOqI9mK
VGwUL39hzfQn3Cw09c8aKvzDFNpnmBzws3KjozIVWlZvTlcx/fTKXhwsVKUi
PbV98TTTb1trnF5RpyLNXkA9hJkfk9lEbYomFRqxmYL+zPxp3XzVW6lFha/6
rvv7mPldtUxVC9Kj4uLAa+k6Zv5Z7t3obDCgImvk4AiDWR9/KKNRMoZUGAaQ
97gXMPVXRz7vMKHC6tm/PMPbTP3+9QfUtlBRWVDt8oxZfzUi7NJxBBX1/x7W
BNyhE7n70oMNrJj6uNNqPt6nE/6qd3lznKgoKUgMLq+mEzEt2/equVLx61nj
NzZmv6QHirZXulEhIBMTFFJLJ+oLj6S2e1Mx5bs3PJbZb+JqtqsYu5jxuFs8
uPeSTmi2Lh1IDqAiWjTSqewVnUBQWZfEbipyODV+Pmf2874iyQs6oVTEnuHX
MWX2e6vaN/GdUVS0LrYNr/tGJwZbsyPHo6ngIs9fHBxl6g1y7Is+SsW6nzed
Cpn7yerbVVkZcVQI3TnyInqWTkSrJ8g2p1Dhma3wS52TQWhqrF6jdp2KrzpE
X5Emg0Db27jKG1Sotu9ortFlEF7BiZ/NC6iwvrpS9WUjgzhZPHHTu4SK9e/q
r0cRDGJQo141uYqK8CfaN4o8GcS5dZT148+pWNk65qCeyCAKXgikRr+kwkKR
cTAnlUHU7mkc53hFhZ9W+hXlTOZ+WaJeqvCWCtsRg7nD+cz/a85vcBlk5r8p
rE+jnkH81sw0rJymQnrzc9xdYBD9HdgmNsPsjzzNH3+XGUTj/kn3iDmm3xVR
Tyhcy8S5Srsww39UcHxqW/SQWCY0TVju1bL7gOHnWaG3cZnws9u3tlnSB7IM
IflTkcuE3S/ZDSoyPrA0ZzRyxC4TG9LazE/L+UBTu+dSduIysdyl7Guzxgfm
4mavF7OWiavkgcvt63wQwz0bd7NumejZbSPQY+YD8QSOT6lcK0Qd75zsJsIH
TtePn4TwCnHz7s11ly18YL132ItbdoU4OMWwJlv7IJqXltapvUIIHn4QP+ji
g+lQbN7qtUJYJ65dGPHzAWfb7dSWO8z5XLD0eS7JBxG76cJSeiww3BqxYH/W
BzoVw16cRiyo/jwukJ/mg0E52V66GQsqFYeM7C/4QNjjYgy3HQvuZTem5V31
wWuXvD1nd7EgP/X0ZptSH7yM4Ol3usiC5IhVGdndPrgYsWm+noUVPGJJRRO9
PsgfpFu/5WZFYgVLvWW/D3IC5bqmhVhxavL39/FBH4QO0M7aKbAiNrjHzOK7
D4Jd/hbuMWFFuO+V0bG/PugPOhkSEMUKqpUyTBV9cc7hj5HVHCsYPTxCzWt8
kTNxSWbjMivyAyc/2Cv74md9Tq8ONxu+J9Ycpmr4wvPr80ErGTaEv3ApO6Lv
C7JLufrMFjakOB9TfGztC86CmjJyMhtqyb30jQd8wSBKk2w02CG370yNTqMv
Dlmu3v4gkQPnVoI2nW3yheZrtVWZGRxgu2Bd8eOZL7qG/Q2O5nLg50POkvwX
vviSGtu7u5IDtSynskW7fSEsaRhXOcQB6sW4w/PffJE2cv+A4GZOZNcd2fSU
n4a14Y0P389yQoIvtMLJm4ZOl7Bv7UncKNh6PGaaQkNsqfrfjCxu6B8/tzXT
l4bakvg3/kXccJ4u7+3fRcNs5Jp+zWfcSOybW/QPpcE1kHeTNQsP/t48YRkT
T0Pf9STtyhgeDJhmdhfdpaHppJnMjmheBEcW5NqV0jAaEcSSl8SL+dLqwPFy
GgrYNpaOZvNCVKl/Qe8hDT0zNbQbNbxw4FGQf9JIY9ZzmED+Ei/qe4oCuntp
OLeUWvw2ng/2Qo+1o/pp+Fs9vfjqAh/6bV7MS3+gYVzgr0jvLT7M1v5K2v6J
hrz035e4WvmgfWPD/bGfzPgnz0/M8/GjfsAiKnWCBnqacISrPD/sxd0J3Wka
LrzY+F+1Nj+CzkS+iZijIU4yuOyWKz9mGxNzpP4y9akfdtXy40fCvyz/2n80
1Peue9x4iB/CG0u0aAwazNbEfd95mh95+2rnVlZosOeO+SCQxY//AUFOXKk=

            "]]}, "Charting`Private`Tag$75519#1"]}}, {}, {}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
             Rational[2, 3], 0, 0], 
            Dashing[{Small, Small}]], 
           Line[CompressedData["
1:eJwVlHk81AkDh0UtzU86kCv3kSFTYxzjytdQJncziF9Cs60OkTXKGRXJoujN
IsvWyL65FSlaSSkim6NIaUuJcmQkZ4q394/v5/n7ef74qvOOcH4RFRERCfux
/3O6oi7zSqEKfMRS3hTq70PkwsOEClV1rNMiv2Vc44FZnUuvoaujsWYhKiSf
h5lg/usGW3U8yepQ8MrgIfSdGrNrvzpKn4TnOEbwcLglenSqQh0nyanu++DB
N4vOMYcGGtJHE0af7gWLkaf60F8TbCUyeFx0L4jAsNsvBdoQvqne8kLMD60U
SdeKSm2Y8RdC/hr3RXLxlYH4Rm1EbjhpHf/CFxIjXZIGg9o4E6fkxq/wxfKD
dL84XR08k750R9PHF98DxsW0KnQwJOd7v7ZmD4S8A85BdRvx4VPuABnrg6ek
T/9SDxXnComyBCaJBsktNKthKujWlEsvtEmU14vFRC1QseqzzQ5raRLJGiVy
06p6aLQWP2M57g2MzLuMHNDD29dfxr8VeKM0MuvOs696CKzsbzsj643E7K6c
IpVNKK+izZGiXjDvYXtwA2jwiV1v0izuCWbX7miLCBqUMmX8Fec9YPIkWKCZ
TEPWEVNa1IgH6E0Zn76U0TBSIJ/o948HdG/2n86YpkHQPdFx94IHZDMjbnYn
bEbTei+fNg0PzOk9I0p3bsEw40tn4w53dI2IBdFC6BjetDeisYaDzr5P/KQI
OljXXmtVlnHQ0fY86t0JOjIWLocW5XPQXl6SlHmeDuWjzV3XUzloC+UWLFbS
wf32tU13LwdNX/P7nkzTsdEteaGQ4OA2heVwJNoQQXnW7PqAncjXO7HxWiID
Mq6lGlUMN9RoSaTUpzHQYn2Q0UZ1Q7tK+nhbNgOGYRl7Pqm64du6y9XDxQyc
mxp8bS/pBs+Fu7aa7QwEWKlG1La6gtK25JcpZ4R/3wX7LdJdERoUlx1TaIQd
v5ppDxEuPzxiV+5oNcbN7QlSaiOO8Fb+4H+nyxhzAz5HRPocEZLsWkPvM8a0
RsrY6GNH/LlPbb/imDEOh92QeV/miK/y9x+MrjKBycwg4RXqiOsnV5w4t9ME
B211DLd/d4AaN3Xmaa8Jhm5d1f6q6IDv0xcHfD+YYjFgvv4pn40NEhpXC4Wm
KKZFGfP3s2GuWHxoctYUA4+DbJR2sxGx9fbn0xJMBAvvfktgsTGV+HKplMrE
x9VrmfVr2RiTU9qwEMjE41tlafeu2+OVWa571gQTYc4e6X2z23H7+J8P2+fN
EOFV+VmYsw32jtrtu8wsETQdXxQqagth76MOH85WpBWpXSibARieszGWToD8
pOkYdLdC2B8rO3fQBhp8oqR7mQVqH8vohYaxYDFR8JAfycShF4Fd4b/bwn/Z
LFbLm4Bq3zljccUO4ZsXh9ZSjdDxfLY8pXkb7p79KU3N3RARK6VHk4a2Q/Be
odj23hYY/GF5xW7SHvfucTZIj9DQ6rpRmCKzA91uM/rPD21C2D61W+c1HVCo
T6/K3KUHVUUpsW0GjoiZyHvyIV4XlZN17+KdnbAQseaYWZ0OuPpRW0+SzhjL
tPmNY6WNvsQ5A0qsCyqG3JUvNmliX3ygALmuSG/RqT4cpYHvR449yuG6gffM
SvWqvzrqKuQou9+7ofvCnVPKDmo4pdrwW1TgTtxgNPY61aqg5Q3v8YRwJxSz
b1TzVikjnj7UUxrHQX37xYImnhLsqkLUHq3gojmrSytuSgGRTX0MahYXds9T
UsMT5VG90uX0sIo77OTFH4w7yOHXvNvZIgXuuDOqZd2uvx6C++LH9hh5gNs5
wx2kyKJXzue8wt8eePSmuSd0jQziF9OPKTl74pDPcXVxGWmUGzcoh73yROHH
3NQSg3Xoz50R3cTbhbACF+7SvrVI/H1VJfXLLrRujv2efnENGPX6lxKjvNC7
5WplUftq+JvauZgvecH/rdEgNUkKy1hWzYw0b7A3z8uFm69CUYxVbKosiYv1
p39ulZWE5dsc//dyJFjxSnt61kiiY9scy1KRRHD7z/kDhCRmpKrEx1RIWETb
SImKSoIl0D3vqEtCblulr8s4gVcPpQsoFiTMr6+L02omILV6pCXJnwSjeaa0
MZKAgG9f2s8jIdLkxZoLI2DUW3CO+cuP31x+VJYWQoAU+HE/HiQRlUbl5wUQ
uMrofmXPJ1EiUyySwiUArwbhT4kkpKt6VwgMCDytU+7yTSLR8beT3bAugQD1
6Bs3k0nYTz6oNdQicHbEODIgjYTCfxTZLYoEXsaUiDZlk/AV6xxaLkEg6K3E
oPIfJLr/6uv0FCMgsj2g+WgeibMulyeKFinQWa2eqp1PwuZjdTN3moJafmzw
8QISLXtN4oonKHDq7XPr/u+PfpPtB0THKOi3NGMYFJE41aaYsPsDBXxBpuzp
EhJzThUd1e8o+B/oLj0M
            "]]}, 
          "Charting`Private`Tag$75569#1"]}}, {}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 117.34800000000001`}, {0, 164.70608309735647`}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Count Rate (cps)", 20], None}, {
         Style["Distance (cm)", 20], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> 18, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Full, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> 
      Style["Count Rate vs. Distance for Cs-137 Area Source", 24], 
      PlotRange -> {{0, 117.34800000000001`}, {0, 164.70608309735647`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       Unevaluated[
        LineLegend[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Dashing[{Small, Small}]]}, {"Theoretical"}, LegendMarkers -> None, 
         LabelStyle -> {}, LegendLayout -> "Column"]]]], {0.85, 0.85}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.696961069686614*^9, 3.6969612278954144`*^9, 3.69696126812945*^9, 
   3.6969615145323477`*^9, 3.696962062992669*^9, 3.6969621033410892`*^9, {
   3.696962150376875*^9, 3.696962155519658*^9}}]
}, Open  ]],

Cell["\<\
5. From the plots created, determine at what distance, if ever, the detection \
efficiency can be described by equation 8.8 over equation 8.11 in the text \
with an error of no more than 5%. Does the result agree with our rule of \
thumb?\
\>", "Text",
 CellChangeTimes->{{3.696879042814086*^9, 3.696879083662156*^9}, {
  3.69687947350604*^9, 3.696879516288289*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1352, 1013},
WindowMargins->{{24, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 536, 13, 140, "Input"],
Cell[1097, 35, 136, 1, 54, "Text"],
Cell[1236, 38, 189, 2, 29, "Text"],
Cell[1428, 42, 496, 8, 47, "Text"],
Cell[1927, 52, 272, 5, 29, "Text"],
Cell[2202, 59, 260, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[2487, 68, 1096, 32, 121, "Input"],
Cell[3586, 102, 1092, 32, 79, "Output"]
}, Open  ]],
Cell[4693, 137, 280, 5, 29, "Text"],
Cell[4976, 144, 163, 3, 29, "Input"],
Cell[CellGroupData[{
Cell[5164, 151, 663, 21, 165, "Input"],
Cell[5830, 174, 1090, 32, 54, "Output"]
}, Open  ]],
Cell[6935, 209, 115, 2, 29, "Input"],
Cell[7053, 213, 556, 18, 147, "Input"],
Cell[7612, 233, 340, 6, 29, "Text"],
Cell[7955, 241, 432, 10, 53, "Text"],
Cell[8390, 253, 121, 1, 54, "Text"],
Cell[CellGroupData[{
Cell[8536, 258, 1592, 44, 96, "Input"],
Cell[10131, 304, 245, 4, 32, "Output"],
Cell[10379, 310, 247, 4, 32, "Output"],
Cell[10629, 316, 261, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10927, 325, 576, 16, 45, "Input"],
Cell[11506, 343, 158, 2, 32, "Output"]
}, Open  ]],
Cell[11679, 348, 137, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[11841, 353, 211, 5, 32, "Input"],
Cell[12055, 360, 1856, 48, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13948, 413, 100, 1, 63, "Subchapter"],
Cell[14051, 416, 678, 18, 32, "Input"],
Cell[14732, 436, 500, 13, 54, "Input"],
Cell[15235, 451, 1109, 32, 75, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16381, 488, 93, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[16499, 493, 102, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[16626, 498, 3350, 85, 184, "Input"],
Cell[19979, 585, 80, 1, 32, "Output"]
}, Open  ]],
Cell[20074, 589, 312, 8, 32, "Input"],
Cell[20389, 599, 280, 6, 54, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20706, 610, 100, 1, 63, "Subchapter"],
Cell[20809, 613, 120, 1, 29, "Text"],
Cell[20932, 616, 182, 4, 29, "Text"],
Cell[21117, 622, 413, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[21555, 633, 2409, 56, 199, "Input"],
Cell[23967, 691, 585, 10, 32, "Output"],
Cell[24555, 703, 546, 9, 32, "Output"],
Cell[25104, 714, 545, 9, 32, "Output"],
Cell[25652, 725, 572, 10, 32, "Output"],
Cell[26227, 737, 598, 10, 32, "Output"],
Cell[26828, 749, 624, 10, 32, "Output"],
Cell[27455, 761, 626, 11, 32, "Output"]
}, Open  ]],
Cell[28096, 775, 96, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[28217, 780, 1263, 31, 96, "Input"],
Cell[29483, 813, 1848, 47, 128, "Output"]
}, Open  ]],
Cell[31346, 863, 68, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[31439, 868, 1998, 53, 199, "Input"],
Cell[33440, 923, 176, 5, 32, "Output"],
Cell[33619, 930, 216, 5, 32, "Output"],
Cell[33838, 937, 246, 6, 32, "Output"],
Cell[34087, 945, 244, 6, 32, "Output"]
}, Open  ]],
Cell[34346, 954, 93, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[34464, 959, 1297, 32, 96, "Input"],
Cell[35764, 993, 1876, 47, 128, "Output"]
}, Open  ]],
Cell[37655, 1043, 331, 6, 47, "Text"],
Cell[37989, 1051, 558, 9, 47, "Text"],
Cell[CellGroupData[{
Cell[38572, 1064, 1522, 40, 83, "Input"],
Cell[40097, 1106, 455, 6, 32, "Output"],
Cell[40555, 1114, 438, 6, 32, "Output"]
}, Open  ]],
Cell[41008, 1123, 482, 13, 32, "Text"],
Cell[41493, 1138, 338, 6, 29, "Text"],
Cell[CellGroupData[{
Cell[41856, 1148, 414, 8, 32, "Input"],
Cell[42273, 1158, 208, 3, 32, "Output"]
}, Open  ]],
Cell[42496, 1164, 418, 11, 32, "Text"],
Cell[42917, 1177, 184, 4, 29, "Text"],
Cell[43104, 1183, 638, 15, 51, "Input"],
Cell[43745, 1200, 651, 16, 50, "Input"],
Cell[44399, 1218, 622, 9, 47, "Text"],
Cell[45024, 1229, 397, 5, 41, "Item"],
Cell[CellGroupData[{
Cell[45446, 1238, 7004, 182, 373, "Input"],
Cell[52453, 1422, 68689, 1316, 808, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121179, 2743, 6807, 176, 373, "Input"],
Cell[127989, 2921, 75399, 1426, 814, "Output"]
}, Open  ]],
Cell[203403, 4350, 460, 8, 47, "Text"],
Cell[203866, 4360, 205, 4, 28, "Item"],
Cell[204074, 4366, 93, 1, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204204, 4372, 101, 1, 63, "Subchapter"],
Cell[204308, 4375, 318, 6, 29, "Text"],
Cell[CellGroupData[{
Cell[204651, 4385, 2033, 48, 188, "Input"],
Cell[206687, 4435, 501, 10, 32, "Output"],
Cell[207191, 4447, 500, 10, 32, "Output"],
Cell[207694, 4459, 524, 10, 32, "Output"],
Cell[208221, 4471, 531, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208789, 4486, 932, 24, 32, "Input"],
Cell[209724, 4512, 2333, 61, 75, "Output"]
}, Open  ]],
Cell[212072, 4576, 2209, 51, 180, "Input"],
Cell[CellGroupData[{
Cell[214306, 4631, 172, 3, 32, "Input"],
Cell[214481, 4636, 194, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214712, 4646, 1379, 33, 54, "Input"],
Cell[216094, 4681, 2176, 53, 196, "Output"]
}, Open  ]],
Cell[218285, 4737, 552, 14, 34, "Text"],
Cell[CellGroupData[{
Cell[218862, 4755, 1921, 47, 124, "Input"],
Cell[220786, 4804, 257, 3, 32, "Output"],
Cell[221046, 4809, 264, 3, 32, "Output"],
Cell[221313, 4814, 258, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221608, 4822, 395, 7, 54, "Input"],
Cell[222006, 4831, 112, 1, 32, "Output"],
Cell[222121, 4834, 110, 1, 32, "Output"]
}, Open  ]],
Cell[222246, 4838, 486, 13, 32, "Text"],
Cell[222735, 4853, 256, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[223016, 4862, 1866, 51, 131, "Input"],
Cell[224885, 4915, 1883, 52, 79, "Output"]
}, Open  ]],
Cell[226783, 4970, 575, 12, 53, "Text"],
Cell[227361, 4984, 387, 6, 43, "Item"],
Cell[CellGroupData[{
Cell[227773, 4994, 2237, 60, 138, "Input"],
Cell[230013, 5056, 50221, 995, 809, "Output"]
}, Open  ]],
Cell[280249, 6054, 350, 6, 47, "Text"],
Cell[280602, 6062, 221, 4, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280860, 6071, 99, 1, 63, "Subchapter"],
Cell[280962, 6074, 268, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[281255, 6083, 2124, 54, 238, "Input"],
Cell[283382, 6139, 632, 11, 32, "Output"],
Cell[284017, 6152, 766, 14, 32, "Output"],
Cell[284786, 6168, 682, 12, 32, "Output"],
Cell[285471, 6182, 763, 14, 32, "Output"],
Cell[286237, 6198, 751, 13, 32, "Output"],
Cell[286991, 6213, 758, 13, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287786, 6231, 1114, 28, 54, "Input"],
Cell[288903, 6261, 2481, 58, 264, "Output"]
}, Open  ]],
Cell[291399, 6322, 504, 13, 34, "Text"],
Cell[CellGroupData[{
Cell[291928, 6339, 1715, 44, 124, "Input"],
Cell[293646, 6385, 143, 2, 32, "Output"],
Cell[293792, 6389, 136, 2, 32, "Output"]
}, Open  ]],
Cell[293943, 6394, 394, 12, 32, "Text"],
Cell[294340, 6408, 268, 5, 29, "Text"],
Cell[294611, 6415, 1077, 33, 87, "Input"],
Cell[295691, 6450, 606, 13, 53, "Text"],
Cell[296300, 6465, 385, 6, 43, "Item"],
Cell[CellGroupData[{
Cell[296710, 6475, 4618, 124, 327, "Input"],
Cell[301331, 6601, 67416, 1301, 842, "Output"]
}, Open  ]],
Cell[368762, 7905, 376, 7, 47, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

